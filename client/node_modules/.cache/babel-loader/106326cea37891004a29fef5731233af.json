{"ast":null,"code":"import { EJSON, ObjectId } from 'bson';\nimport * as bson from 'bson';\nexport { bson as BSON };\n\nvar __spreadArray = undefined && undefined.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar BrowserInfo =\n/** @class */\nfunction () {\n  function BrowserInfo(name, version, os) {\n    this.name = name;\n    this.version = version;\n    this.os = os;\n    this.type = 'browser';\n  }\n\n  return BrowserInfo;\n}();\n\nvar NodeInfo =\n/** @class */\nfunction () {\n  function NodeInfo(version) {\n    this.version = version;\n    this.type = 'node';\n    this.name = 'node';\n    this.os = process.platform;\n  }\n\n  return NodeInfo;\n}();\n\nvar SearchBotDeviceInfo =\n/** @class */\nfunction () {\n  function SearchBotDeviceInfo(name, version, os, bot) {\n    this.name = name;\n    this.version = version;\n    this.os = os;\n    this.bot = bot;\n    this.type = 'bot-device';\n  }\n\n  return SearchBotDeviceInfo;\n}();\n\nvar BotInfo =\n/** @class */\nfunction () {\n  function BotInfo() {\n    this.type = 'bot';\n    this.bot = true; // NOTE: deprecated test name instead\n\n    this.name = 'bot';\n    this.version = null;\n    this.os = null;\n  }\n\n  return BotInfo;\n}();\n\nvar ReactNativeInfo =\n/** @class */\nfunction () {\n  function ReactNativeInfo() {\n    this.type = 'react-native';\n    this.name = 'react-native';\n    this.version = null;\n    this.os = null;\n  }\n\n  return ReactNativeInfo;\n}(); // tslint:disable-next-line:max-line-length\n\n\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [['aol', /AOLShield\\/([0-9\\._]+)/], ['edge', /Edge\\/([0-9\\._]+)/], ['edge-ios', /EdgiOS\\/([0-9\\._]+)/], ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/], ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/], ['samsung', /SamsungBrowser\\/([0-9\\.]+)/], ['silk', /\\bSilk\\/([0-9._-]+)\\b/], ['miui', /MiuiBrowser\\/([0-9\\.]+)$/], ['beaker', /BeakerBrowser\\/([0-9\\.]+)/], ['edge-chromium', /EdgA?\\/([0-9\\.]+)/], ['chromium-webview', /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/], ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/], ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/], ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/], ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/], ['fxios', /FxiOS\\/([0-9\\.]+)/], ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/], ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/], ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/], ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/], ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/], ['ie', /MSIE\\s(7\\.0)/], ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/], ['android', /Android\\s([0-9\\.]+)/], ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/], ['safari', /Version\\/([0-9\\._]+).*Safari/], ['facebook', /FB[AS]V\\/([0-9\\.]+)/], ['instagram', /Instagram\\s([0-9\\.]+)/], ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/], ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/], ['curl', /^curl\\/([0-9\\.]+)$/], ['searchbot', SEARCHBOX_UA_REGEX]];\nvar operatingSystemRules = [['iOS', /iP(hone|od|ad)/], ['Android OS', /Android/], ['BlackBerry OS', /BlackBerry|BB10/], ['Windows Mobile', /IEMobile/], ['Amazon OS', /Kindle/], ['Windows 3.11', /Win16/], ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/], ['Windows 98', /(Windows 98)|(Win98)/], ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/], ['Windows XP', /(Windows NT 5.1)|(Windows XP)/], ['Windows Server 2003', /(Windows NT 5.2)/], ['Windows Vista', /(Windows NT 6.0)/], ['Windows 7', /(Windows NT 6.1)/], ['Windows 8', /(Windows NT 6.2)/], ['Windows 8.1', /(Windows NT 6.3)/], ['Windows 10', /(Windows NT 10.0)/], ['Windows ME', /Windows ME/], ['Open BSD', /OpenBSD/], ['Sun OS', /SunOS/], ['Chrome OS', /CrOS/], ['Linux', /(Linux)|(X11)/], ['Mac OS', /(Mac_PowerPC)|(Macintosh)/], ['QNX', /QNX/], ['BeOS', /BeOS/], ['OS/2', /OS\\/2/]];\n\nfunction detect(userAgent) {\n  if (!!userAgent) {\n    return parseUserAgent(userAgent);\n  }\n\n  if (typeof document === 'undefined' && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return new ReactNativeInfo();\n  }\n\n  if (typeof navigator !== 'undefined') {\n    return parseUserAgent(navigator.userAgent);\n  }\n\n  return getNodeVersion();\n}\n\nfunction matchUserAgent(ua) {\n  // opted for using reduce here rather than Array#first with a regex.test call\n  // this is primarily because using the reduce we only perform the regex\n  // execution once rather than once for the test and for the exec again below\n  // probably something that needs to be benchmarked though\n  return ua !== '' && userAgentRules.reduce(function (matched, _a) {\n    var browser = _a[0],\n        regex = _a[1];\n\n    if (matched) {\n      return matched;\n    }\n\n    var uaMatch = regex.exec(ua);\n    return !!uaMatch && [browser, uaMatch];\n  }, false);\n}\n\nfunction parseUserAgent(ua) {\n  var matchedRule = matchUserAgent(ua);\n\n  if (!matchedRule) {\n    return null;\n  }\n\n  var name = matchedRule[0],\n      match = matchedRule[1];\n\n  if (name === 'searchbot') {\n    return new BotInfo();\n  } // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n\n\n  var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n\n  if (versionParts) {\n    if (versionParts.length < REQUIRED_VERSION_PARTS) {\n      versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n    }\n  } else {\n    versionParts = [];\n  }\n\n  var version = versionParts.join('.');\n  var os = detectOS(ua);\n  var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n\n  if (searchBotMatch && searchBotMatch[1]) {\n    return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n  }\n\n  return new BrowserInfo(name, version, os);\n}\n\nfunction detectOS(ua) {\n  for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n    var _a = operatingSystemRules[ii],\n        os = _a[0],\n        regex = _a[1];\n    var match = regex.exec(ua);\n\n    if (match) {\n      return os;\n    }\n  }\n\n  return null;\n}\n\nfunction getNodeVersion() {\n  var isNode = typeof process !== 'undefined' && process.version;\n  return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\n\nfunction createVersionParts(count) {\n  var output = [];\n\n  for (var ii = 0; ii < count; ii++) {\n    output.push('0');\n  }\n\n  return output;\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\nclass DefaultNetworkTransport {\n  constructor() {\n    if (!DefaultNetworkTransport.fetch) {\n      throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n    }\n\n    if (!DefaultNetworkTransport.AbortController) {\n      throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n    }\n  }\n\n  fetchWithCallbacks(request, handler) {\n    // tslint:disable-next-line: no-console\n    this.fetch(request).then(async response => {\n      const decodedBody = await response.text(); // Pull out the headers of the response\n\n      const responseHeaders = {};\n      response.headers.forEach((value, key) => {\n        responseHeaders[key] = value;\n      });\n      return {\n        statusCode: response.status,\n        headers: responseHeaders,\n        body: decodedBody\n      };\n    }).then(r => handler.onSuccess(r)).catch(e => handler.onError(e));\n  }\n\n  async fetch(request) {\n    const {\n      timeoutMs,\n      url,\n      ...rest\n    } = request;\n    const {\n      signal,\n      cancelTimeout\n    } = this.createTimeoutSignal(timeoutMs);\n\n    try {\n      // We'll await the response to catch throw our own error\n      return await DefaultNetworkTransport.fetch(url, { ...DefaultNetworkTransport.extraFetchOptions,\n        signal,\n        ...rest\n      });\n    } finally {\n      // Whatever happens, cancel any timeout\n      cancelTimeout();\n    }\n  }\n\n  createTimeoutSignal(timeoutMs) {\n    if (typeof timeoutMs === \"number\") {\n      const controller = new DefaultNetworkTransport.AbortController(); // Call abort after a specific number of milliseconds\n\n      const timeout = setTimeout(() => {\n        controller.abort();\n      }, timeoutMs);\n      return {\n        signal: controller.signal,\n        cancelTimeout: () => {\n          clearTimeout(timeout);\n        }\n      };\n    } else {\n      return {\n        signal: undefined,\n        cancelTimeout: () => {\n          /* No-op */\n        }\n      };\n    }\n  }\n\n}\n\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n  \"Content-Type\": \"application/json\"\n}; ////////////////////////////////////////////////////////////////////////////\n\nDefaultNetworkTransport.fetch = globalThis.fetch.bind(globalThis);\nDefaultNetworkTransport.AbortController = globalThis.AbortController;\n/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\n\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\n\nconst VERSION = version;\n\nconst _hasatob = typeof atob === 'function';\n\nconst _hasbtoa = typeof btoa === 'function';\n\nconst _hasBuffer = typeof Buffer === 'function';\n\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\n\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\n\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\n\nconst b64tab = (a => {\n  let tab = {};\n  a.forEach((c, i) => tab[c] = i);\n  return tab;\n})(b64chs);\n\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\n\nconst _fromCC = String.fromCharCode.bind(String);\n\nconst _U8Afrom = typeof Uint8Array.from === 'function' ? Uint8Array.from.bind(Uint8Array) : function (it) {\n  let fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x => x;\n  return new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\n};\n\nconst _mkUriSafe = src => src.replace(/=/g, '').replace(/[+\\/]/g, m0 => m0 == '+' ? '-' : '_');\n\nconst _tidyB64 = s => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\n\n\nconst btoaPolyfill = bin => {\n  // console.log('polyfilled');\n  let u32,\n      c0,\n      c1,\n      c2,\n      asc = '';\n  const pad = bin.length % 3;\n\n  for (let i = 0; i < bin.length;) {\n    if ((c0 = bin.charCodeAt(i++)) > 255 || (c1 = bin.charCodeAt(i++)) > 255 || (c2 = bin.charCodeAt(i++)) > 255) throw new TypeError('invalid character found');\n    u32 = c0 << 16 | c1 << 8 | c2;\n    asc += b64chs[u32 >> 18 & 63] + b64chs[u32 >> 12 & 63] + b64chs[u32 >> 6 & 63] + b64chs[u32 & 63];\n  }\n\n  return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\n\n\nconst _btoa = _hasbtoa ? bin => btoa(bin) : _hasBuffer ? bin => Buffer.from(bin, 'binary').toString('base64') : btoaPolyfill;\n\nconst _fromUint8Array = _hasBuffer ? u8a => Buffer.from(u8a).toString('base64') : u8a => {\n  // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n  const maxargs = 0x1000;\n  let strs = [];\n\n  for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n    strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n  }\n\n  return _btoa(strs.join(''));\n};\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\n\n\nconst fromUint8Array = function (u8a) {\n  let urlsafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n}; // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\n\n\nconst cb_utob = c => {\n  if (c.length < 2) {\n    var cc = c.charCodeAt(0);\n    return cc < 0x80 ? c : cc < 0x800 ? _fromCC(0xc0 | cc >>> 6) + _fromCC(0x80 | cc & 0x3f) : _fromCC(0xe0 | cc >>> 12 & 0x0f) + _fromCC(0x80 | cc >>> 6 & 0x3f) + _fromCC(0x80 | cc & 0x3f);\n  } else {\n    var cc = 0x10000 + (c.charCodeAt(0) - 0xD800) * 0x400 + (c.charCodeAt(1) - 0xDC00);\n    return _fromCC(0xf0 | cc >>> 18 & 0x07) + _fromCC(0x80 | cc >>> 12 & 0x3f) + _fromCC(0x80 | cc >>> 6 & 0x3f) + _fromCC(0x80 | cc & 0x3f);\n  }\n};\n\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\n\nconst utob = u => u.replace(re_utob, cb_utob); //\n\n\nconst _encode = _hasBuffer ? s => Buffer.from(s, 'utf8').toString('base64') : _TE ? s => _fromUint8Array(_TE.encode(s)) : s => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\n\n\nconst encode = function (src) {\n  let urlsafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return urlsafe ? _mkUriSafe(_encode(src)) : _encode(src);\n};\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\n\n\nconst encodeURI = src => encode(src, true); // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\n\n\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n\nconst cb_btou = cccc => {\n  switch (cccc.length) {\n    case 4:\n      var cp = (0x07 & cccc.charCodeAt(0)) << 18 | (0x3f & cccc.charCodeAt(1)) << 12 | (0x3f & cccc.charCodeAt(2)) << 6 | 0x3f & cccc.charCodeAt(3),\n          offset = cp - 0x10000;\n      return _fromCC((offset >>> 10) + 0xD800) + _fromCC((offset & 0x3FF) + 0xDC00);\n\n    case 3:\n      return _fromCC((0x0f & cccc.charCodeAt(0)) << 12 | (0x3f & cccc.charCodeAt(1)) << 6 | 0x3f & cccc.charCodeAt(2));\n\n    default:\n      return _fromCC((0x1f & cccc.charCodeAt(0)) << 6 | 0x3f & cccc.charCodeAt(1));\n  }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\n\n\nconst btou = b => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\n\n\nconst atobPolyfill = asc => {\n  // console.log('polyfilled');\n  asc = asc.replace(/\\s+/g, '');\n  if (!b64re.test(asc)) throw new TypeError('malformed base64.');\n  asc += '=='.slice(2 - (asc.length & 3));\n  let u24,\n      bin = '',\n      r1,\n      r2;\n\n  for (let i = 0; i < asc.length;) {\n    u24 = b64tab[asc.charAt(i++)] << 18 | b64tab[asc.charAt(i++)] << 12 | (r1 = b64tab[asc.charAt(i++)]) << 6 | (r2 = b64tab[asc.charAt(i++)]);\n    bin += r1 === 64 ? _fromCC(u24 >> 16 & 255) : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255) : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n  }\n\n  return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\n\n\nconst _atob = _hasatob ? asc => atob(_tidyB64(asc)) : _hasBuffer ? asc => Buffer.from(asc, 'base64').toString('binary') : atobPolyfill; //\n\n\nconst _toUint8Array = _hasBuffer ? a => _U8Afrom(Buffer.from(a, 'base64')) : a => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\n\n\nconst toUint8Array = a => _toUint8Array(_unURI(a)); //\n\n\nconst _decode = _hasBuffer ? a => Buffer.from(a, 'base64').toString('utf8') : _TD ? a => _TD.decode(_toUint8Array(a)) : a => btou(_atob(a));\n\nconst _unURI = a => _tidyB64(a.replace(/[-_]/g, m0 => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\n\n\nconst decode = src => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\n\n\nconst isValid = src => {\n  if (typeof src !== 'string') return false;\n  const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n  return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n}; //\n\n\nconst _noEnum = v => {\n  return {\n    value: v,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  };\n};\n/**\n * extend String.prototype with relevant methods\n */\n\n\nconst extendString = function () {\n  const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n\n  _add('fromBase64', function () {\n    return decode(this);\n  });\n\n  _add('toBase64', function (urlsafe) {\n    return encode(this, urlsafe);\n  });\n\n  _add('toBase64URI', function () {\n    return encode(this, true);\n  });\n\n  _add('toBase64URL', function () {\n    return encode(this, true);\n  });\n\n  _add('toUint8Array', function () {\n    return toUint8Array(this);\n  });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\n\n\nconst extendUint8Array = function () {\n  const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n\n  _add('toBase64', function (urlsafe) {\n    return fromUint8Array(this, urlsafe);\n  });\n\n  _add('toBase64URI', function () {\n    return fromUint8Array(this, true);\n  });\n\n  _add('toBase64URL', function () {\n    return fromUint8Array(this, true);\n  });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\n\n\nconst extendBuiltins = () => {\n  extendString();\n  extendUint8Array();\n};\n\nconst gBase64 = {\n  version: version,\n  VERSION: VERSION,\n  atob: _atob,\n  atobPolyfill: atobPolyfill,\n  btoa: _btoa,\n  btoaPolyfill: btoaPolyfill,\n  fromBase64: decode,\n  toBase64: encode,\n  encode: encode,\n  encodeURI: encodeURI,\n  encodeURL: encodeURI,\n  utob: utob,\n  btou: btou,\n  decode: decode,\n  isValid: isValid,\n  fromUint8Array: fromUint8Array,\n  toUint8Array: toUint8Array,\n  extendString: extendString,\n  extendUint8Array: extendUint8Array,\n  extendBuiltins: extendBuiltins\n}; ////////////////////////////////////////////////////////////////////////////\n\nconst SERIALIZATION_OPTIONS = {\n  relaxed: false // Ensure Canonical mode\n\n};\n/**\n * Serialize an object containing BSON types into extended-JSON.\n *\n * @param obj The object containing BSON types.\n * @returns The document in extended-JSON format.\n */\n\nfunction serialize(obj) {\n  return EJSON.serialize(obj, SERIALIZATION_OPTIONS);\n}\n/**\n * De-serialize an object or an array of object from extended-JSON into an object or an array of object with BSON types.\n *\n * @param obj The object or array of objects in extended-JSON format.\n * @returns The object or array of objects with inflated BSON types.\n */\n\n\nfunction deserialize(obj) {\n  if (Array.isArray(obj)) {\n    return obj.map(doc => EJSON.deserialize(doc));\n  } else {\n    return EJSON.deserialize(obj);\n  }\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * The type of a user.\n */\n\n\nvar UserType;\n\n(function (UserType) {\n  /**\n   * A normal end-user created this user.\n   */\n  UserType[\"Normal\"] = \"normal\";\n  /**\n   * The user was created by the server.\n   */\n\n  UserType[\"Server\"] = \"server\";\n})(UserType || (UserType = {}));\n/** @ignore */\n\n\nvar DataKey;\n\n(function (DataKey) {\n  /** @ignore */\n  DataKey[\"NAME\"] = \"name\";\n  /** @ignore */\n\n  DataKey[\"EMAIL\"] = \"email\";\n  /** @ignore */\n\n  DataKey[\"PICTURE\"] = \"picture\";\n  /** @ignore */\n\n  DataKey[\"FIRST_NAME\"] = \"first_name\";\n  /** @ignore */\n\n  DataKey[\"LAST_NAME\"] = \"last_name\";\n  /** @ignore */\n\n  DataKey[\"GENDER\"] = \"gender\";\n  /** @ignore */\n\n  DataKey[\"BIRTHDAY\"] = \"birthday\";\n  /** @ignore */\n\n  DataKey[\"MIN_AGE\"] = \"min_age\";\n  /** @ignore */\n\n  DataKey[\"MAX_AGE\"] = \"max_age\";\n})(DataKey || (DataKey = {}));\n\nconst DATA_MAPPING = {\n  [DataKey.NAME]: \"name\",\n  [DataKey.EMAIL]: \"email\",\n  [DataKey.PICTURE]: \"pictureUrl\",\n  [DataKey.FIRST_NAME]: \"firstName\",\n  [DataKey.LAST_NAME]: \"lastName\",\n  [DataKey.GENDER]: \"gender\",\n  [DataKey.BIRTHDAY]: \"birthday\",\n  [DataKey.MIN_AGE]: \"minAge\",\n  [DataKey.MAX_AGE]: \"maxAge\"\n};\n/** @inheritdoc */\n\nclass UserProfile {\n  /**\n   * @param response The response of a call fetching the users profile.\n   */\n  constructor(response) {\n    /** @ignore */\n    this.type = UserType.Normal;\n    /** @ignore */\n\n    this.identities = [];\n\n    if (typeof response === \"object\" && response !== null) {\n      const {\n        type,\n        identities,\n        data\n      } = response;\n\n      if (typeof type === \"string\") {\n        this.type = type;\n      } else {\n        throw new Error(\"Expected 'type' in the response body\");\n      }\n\n      if (Array.isArray(identities)) {\n        this.identities = identities.map(identity => {\n          const {\n            id,\n            provider_type: providerType\n          } = identity;\n          return {\n            id,\n            providerType\n          };\n        });\n      } else {\n        throw new Error(\"Expected 'identities' in the response body\");\n      }\n\n      if (typeof data === \"object\" && data !== null) {\n        const mappedData = Object.fromEntries(Object.entries(data).map(_ref => {\n          let [key, value] = _ref;\n\n          if (key in DATA_MAPPING) {\n            // Translate any known data field to its JS idiomatic alias\n            return [DATA_MAPPING[key], value];\n          } else {\n            // Pass through any other values\n            return [key, value];\n          }\n        })); // We can use `any` since we trust the user supplies the correct type\n\n        this.data = deserialize(mappedData);\n      } else {\n        throw new Error(\"Expected 'data' in the response body\");\n      }\n    } else {\n      this.data = {};\n    }\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * A `Storage` which will prefix a key part to every operation.\n */\n\n\nclass PrefixedStorage {\n  /**\n   * Construct a `Storage` which will prefix a key part to every operation.\n   *\n   * @param storage The underlying storage to use for operations.\n   * @param keyPart The part of the key to prefix when performing operations.\n   */\n  constructor(storage, keyPart) {\n    this.storage = storage;\n    this.keyPart = keyPart;\n  }\n  /** @inheritdoc */\n\n\n  get(key) {\n    return this.storage.get(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n  }\n  /** @inheritdoc */\n\n\n  set(key, value) {\n    return this.storage.set(this.keyPart + PrefixedStorage.PART_SEPARATOR + key, value);\n  }\n  /** @inheritdoc */\n\n\n  remove(key) {\n    return this.storage.remove(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n  }\n  /** @inheritdoc */\n\n\n  prefix(keyPart) {\n    return new PrefixedStorage(this, keyPart);\n  }\n  /** @inheritdoc */\n\n\n  clear() {\n    let prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return this.storage.clear(this.keyPart + PrefixedStorage.PART_SEPARATOR + prefix);\n  }\n  /** @inheritdoc */\n\n\n  addListener(listener) {\n    return this.storage.addListener(listener);\n  }\n  /** @inheritdoc */\n\n\n  removeListener(listener) {\n    return this.storage.addListener(listener);\n  }\n\n}\n/**\n * The string separating two parts.\n */\n\n\nPrefixedStorage.PART_SEPARATOR = \":\"; ////////////////////////////////////////////////////////////////////////////\n\n/**\n * In-memory storage that will not be persisted.\n */\n\nclass MemoryStorage {\n  constructor() {\n    /**\n     * Internal state of the storage.\n     */\n    this.storage = {};\n    /**\n     * A set of listners.\n     */\n\n    this.listeners = new Set();\n  }\n  /** @inheritdoc */\n\n\n  get(key) {\n    if (key in this.storage) {\n      return this.storage[key];\n    } else {\n      return null;\n    }\n  }\n  /** @inheritdoc */\n\n\n  set(key, value) {\n    this.storage[key] = value; // Fire the listeners\n\n    this.fireListeners();\n  }\n  /** @inheritdoc */\n\n\n  remove(key) {\n    delete this.storage[key]; // Fire the listeners\n\n    this.fireListeners();\n  }\n  /** @inheritdoc */\n\n\n  prefix(keyPart) {\n    return new PrefixedStorage(this, keyPart);\n  }\n  /** @inheritdoc */\n\n\n  clear(prefix) {\n    // Iterate all keys and delete their values if they have a matching prefix\n    for (const key of Object.keys(this.storage)) {\n      if (!prefix || key.startsWith(prefix)) {\n        delete this.storage[key];\n      }\n    } // Fire the listeners\n\n\n    this.fireListeners();\n  }\n  /** @inheritdoc */\n\n\n  addListener(listener) {\n    this.listeners.add(listener);\n  }\n  /** @inheritdoc */\n\n\n  removeListener(listener) {\n    this.listeners.delete(listener);\n  }\n  /**\n   * Tell the listeners that a change occurred.\n   */\n\n\n  fireListeners() {\n    this.listeners.forEach(listener => listener());\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n\nconst ACCESS_TOKEN_STORAGE_KEY = \"accessToken\";\nconst REFRESH_TOKEN_STORAGE_KEY = \"refreshToken\";\nconst PROFILE_STORAGE_KEY = \"profile\";\nconst PROVIDER_TYPE_STORAGE_KEY = \"providerType\";\n/**\n * Storage specific to the app.\n */\n\nclass UserStorage extends PrefixedStorage {\n  /**\n   * Construct a storage for a `User`.\n   *\n   * @param storage The underlying storage to wrap.\n   * @param userId The id of the user.\n   */\n  constructor(storage, userId) {\n    super(storage, `user(${userId})`);\n  }\n  /**\n   * Get the access token from storage.\n   *\n   * @returns Access token (null if unknown).\n   */\n\n\n  get accessToken() {\n    return this.get(ACCESS_TOKEN_STORAGE_KEY);\n  }\n  /**\n   * Set the access token in storage.\n   *\n   * @param value Access token (null if unknown).\n   */\n\n\n  set accessToken(value) {\n    if (value === null) {\n      this.remove(ACCESS_TOKEN_STORAGE_KEY);\n    } else {\n      this.set(ACCESS_TOKEN_STORAGE_KEY, value);\n    }\n  }\n  /**\n   * Get the refresh token from storage.\n   *\n   * @returns Refresh token (null if unknown and user is logged out).\n   */\n\n\n  get refreshToken() {\n    return this.get(REFRESH_TOKEN_STORAGE_KEY);\n  }\n  /**\n   * Set the refresh token in storage.\n   *\n   * @param value Refresh token (null if unknown and user is logged out).\n   */\n\n\n  set refreshToken(value) {\n    if (value === null) {\n      this.remove(REFRESH_TOKEN_STORAGE_KEY);\n    } else {\n      this.set(REFRESH_TOKEN_STORAGE_KEY, value);\n    }\n  }\n  /**\n   * Get the user profile from storage.\n   *\n   * @returns User profile (undefined if its unknown).\n   */\n\n\n  get profile() {\n    const value = this.get(PROFILE_STORAGE_KEY);\n\n    if (value) {\n      const profile = new UserProfile(); // Patch in the values\n\n      Object.assign(profile, JSON.parse(value));\n      return profile;\n    }\n  }\n  /**\n   * Set the user profile in storage.\n   *\n   * @param value User profile (undefined if its unknown).\n   */\n\n\n  set profile(value) {\n    if (value) {\n      this.set(PROFILE_STORAGE_KEY, JSON.stringify(value));\n    } else {\n      this.remove(PROFILE_STORAGE_KEY);\n    }\n  }\n  /**\n   * Get the type of authentication provider used to authenticate\n   *\n   * @returns User profile (undefined if its unknown).\n   */\n\n\n  get providerType() {\n    const value = this.get(PROVIDER_TYPE_STORAGE_KEY);\n\n    if (value) {\n      return value;\n    }\n  }\n  /**\n   * Set the type of authentication provider used to authenticate\n   *\n   * @param value Type of authentication provider.\n   */\n\n\n  set providerType(value) {\n    if (value) {\n      this.set(PROVIDER_TYPE_STORAGE_KEY, value);\n    } else {\n      this.remove(PROVIDER_TYPE_STORAGE_KEY);\n    }\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * @param obj The object to remove keys (and undefined values from)\n * @returns A new object without the keys where the value is undefined.\n */\n\n\nfunction removeKeysWithUndefinedValues(obj) {\n  return Object.fromEntries(Object.entries(obj).filter(entry => typeof entry[1] !== \"undefined\"));\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Generate a random sequence of characters.\n *\n * @param length The length of the string.\n * @param alphabet The alphabet of characters to pick from.\n * @returns A string of characters picked randomly from `alphabet`.\n */\n\n\nfunction generateRandomString(length, alphabet) {\n  let result = \"\";\n\n  for (let i = 0; i < length; i++) {\n    result += alphabet[Math.floor(Math.random() * alphabet.length)];\n  }\n\n  return result;\n}\n/**\n * Encode an object mapping from string to string, into a query string to be appended a URL.\n *\n * @param params The parameters to include in the string.\n * @param prefixed Should the \"?\" prefix be added if values exists?\n * @returns A URL encoded representation of the parameters (omitting a \"?\" prefix).\n */\n\n\nfunction encodeQueryString(params) {\n  let prefixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  // Filter out undefined values\n  const cleanedParams = removeKeysWithUndefinedValues(params); // Determine if a prefixed \"?\" is appropreate\n\n  const prefix = prefixed && Object.keys(cleanedParams).length > 0 ? \"?\" : \"\"; // Transform keys and values to a query string\n\n  return prefix + Object.entries(cleanedParams).map(_ref2 => {\n    let [k, v] = _ref2;\n    return `${k}=${encodeURIComponent(v)}`;\n  }).join(\"&\");\n}\n/**\n * Decodes a query string into an object.\n *\n * @param str The query string to decode.\n * @returns The decoded query string.\n */\n\n\nfunction decodeQueryString(str) {\n  const cleanStr = str[0] === \"?\" ? str.substr(1) : str;\n  return Object.fromEntries(cleanStr.split(\"&\").filter(s => s.length > 0).map(kvp => kvp.split(\"=\")).map(_ref3 => {\n    let [k, v] = _ref3;\n    return [k, decodeURIComponent(v)];\n  }));\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * A list of names that functions cannot have to be callable through the functions proxy.\n */\n\n\nconst RESERVED_NAMES = [\"inspect\", \"callFunction\", \"callFunctionStreaming\", // Methods defined on the Object.prototype might be \"typeof probed\" and called by libraries and runtime environments.\n...Object.getOwnPropertyNames(Object.prototype)];\n/**\n * Remove the key for any fields with undefined values.\n *\n * @param args The arguments to clean.\n * @returns The cleaned arguments.\n */\n\nfunction cleanArgs(args) {\n  for (const arg of args) {\n    if (typeof arg === \"object\" && arg) {\n      for (const [key, value] of Object.entries(arg)) {\n        if (value === undefined) {\n          delete arg[key];\n        }\n      }\n    }\n  }\n\n  return args;\n}\n/**\n * Remove keys for any undefined values and serialize to EJSON.\n *\n * @param args The arguments to clean and serialize.\n * @returns The cleaned and serialized arguments.\n */\n\n\nfunction cleanArgsAndSerialize(args) {\n  const cleaned = cleanArgs(args);\n  return cleaned.map(arg => typeof arg === \"object\" ? serialize(arg) : arg);\n}\n/**\n * Defines how functions are called.\n */\n\n\nclass FunctionsFactory {\n  /**\n   * @param fetcher The underlying fetcher to use when sending requests.\n   * @param config Additional configuration parameters.\n   */\n  constructor(fetcher) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.fetcher = fetcher;\n    this.serviceName = config.serviceName;\n    this.argsTransformation = config.argsTransformation || cleanArgsAndSerialize;\n  }\n  /**\n   * Create a factory of functions, wrapped in a Proxy that returns bound copies of `callFunction` on any property.\n   *\n   * @param fetcher The underlying fetcher to use when requesting.\n   * @param config Additional configuration parameters.\n   * @returns The newly created factory of functions.\n   */\n\n\n  static create(fetcher) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Create a proxy, wrapping a simple object returning methods that calls functions\n    // TODO: Lazily fetch available functions and return these from the ownKeys() trap\n    const factory = new FunctionsFactory(fetcher, config); // Wrap the factory in a proxy that calls the internal call method\n\n    return new Proxy(factory, {\n      get(target, p, receiver) {\n        if (typeof p === \"string\" && RESERVED_NAMES.indexOf(p) === -1) {\n          return target.callFunction.bind(target, p);\n        } else {\n          const prop = Reflect.get(target, p, receiver);\n          return typeof prop === \"function\" ? prop.bind(target) : prop;\n        }\n      }\n\n    });\n  }\n  /**\n   * Call a remote function by it's name.\n   *\n   * @param name Name of the remote function.\n   * @param args Arguments to pass to the remote function.\n   * @returns A promise of the value returned when executing the remote function.\n   */\n\n\n  async callFunction(name) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    // See https://github.com/mongodb/stitch-js-sdk/blob/master/packages/core/sdk/src/services/internal/CoreStitchServiceClientImpl.ts\n    const body = {\n      name,\n      arguments: this.argsTransformation ? this.argsTransformation(args) : args\n    };\n\n    if (this.serviceName) {\n      body.service = this.serviceName;\n    }\n\n    const appRoute = this.fetcher.appRoute;\n    return this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.functionsCall().path,\n      body\n    });\n  }\n  /**\n   * Call a remote function by it's name.\n   *\n   * @param name Name of the remote function.\n   * @param args Arguments to pass to the remote function.\n   * @returns A promise of the value returned when executing the remote function.\n   */\n\n\n  callFunctionStreaming(name) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    const body = {\n      name,\n      arguments: this.argsTransformation ? this.argsTransformation(args) : args\n    };\n\n    if (this.serviceName) {\n      body.service = this.serviceName;\n    }\n\n    const appRoute = this.fetcher.appRoute;\n    const qs = encodeQueryString({\n      [\"baas_request\"]: gBase64.encode(JSON.stringify(body))\n    });\n    return this.fetcher.fetchStream({\n      method: \"GET\",\n      path: appRoute.functionsCall().path + qs\n    });\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2021 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * Check whether the user's app is running in \"development mode\" (e.g. `npm run dev`\n * for a React app, or `NODE_ENV=development` for a Node app). Each platform's entry\n * point should define the value of this using `setIsDevelopmentMode`.\n * The default behaviour is to always return `false`.\n *\n * @returns true if the user's app is running in development mode, false otherwise\n */\n\n\nlet isDevelopmentMode = false;\n/**\n * Set the value of `isDevelopmentMode`. This allows each entry point (node vs DOM)\n * to use its own method for determining whether we are in development mode.\n *\n * @param state A boolean indicating whether the user's app is running in\n * development mode or not.\n */\n\nconst setIsDevelopmentMode = state => {\n  isDevelopmentMode = state;\n}; ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Display a deprecation warning for features being removed in the next major version\n * to users in development mode (as best as we can detect this, see `isDevelopmentMode`)\n *\n * @param deprecatedItem The method signature or name of the deprecated item\n * @param suggestedReplacement The method signature or name of the suggested replacement\n */\n\n\nconst deprecationWarning = (deprecatedItem, suggestedReplacement) => {\n  if (!isDevelopmentMode) return;\n  console.warn(`Deprecation warning from Realm: ${deprecatedItem} is deprecated and will be removed in a future major release. Consider switching to ${suggestedReplacement}.`);\n};\n/**\n * Helper function for migrating from positional arguments to a single dictionary argument.\n * Check the arguments passed to a function, if the first argument is not an object (i.e. it\n * is presumed to be a deprecated positional-style call), shows a deprecation warning and\n * converts the positional arguments into an object matching the expected \"new\" shape.\n *\n * @param args Array of arguments passed to the function (captured with `...args`).\n * @param methodName The name of the method, used to show the deprecation warning.\n * @param argNames The list of positional argument names, used to covert them into\n * an object if a deprecated call is made and to show the deprecation warning.\n * @param hasRestArgs Optional flag indicating that the function's final argument is\n * `...args` (to capture any extra arguments), in which case we capture them and return\n * as the second element of the return array.\n *\n * @returns An object containing:\n *\n * argsObject: a dictionary of function arguments, either passed through from args[0] if\n * args[0] is an object, or created from `args` and `argNames` if the args are a\n * deprecated positional argument call.\n *\n * restArgs: an array of the \"...args\" passed to the function if `hasRestArgs` is true;\n * otherwise it is `undefined`.\n */\n// Allow use of `object` type\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nconst handleDeprecatedPositionalArgs = (args, methodName, argNames, hasRestArgs) => {\n  if (typeof args[0] !== \"object\") {\n    const restArgsText = hasRestArgs ? \", ...args\" : \"\";\n    deprecationWarning(`${methodName}(${argNames.join(\", \")}${restArgsText})`, `${methodName}({ ${argNames.join(\", \")} }${restArgsText})`); // Convert the array of arguments into a dictionary keyed by the relevant argName\n\n    const argsObject = argNames.reduce((prev, argName, index) => {\n      return { ...prev,\n        [argName]: args[index]\n      };\n    }, {});\n    const restArgs = hasRestArgs ? args.slice(argNames.length) : undefined;\n    return {\n      argsObject,\n      restArgs\n    };\n  }\n\n  return {\n    argsObject: args[0],\n    restArgs: hasRestArgs ? args.slice(1) : undefined\n  };\n}; ////////////////////////////////////////////////////////////////////////////\n// React/React Native set a global __DEV__ variable when running in dev mode\n\n\nsetIsDevelopmentMode(typeof __DEV__ !== \"undefined\" && __DEV__); ////////////////////////////////////////////////////////////////////////////\n\n/** @inheritdoc */\n\nclass EmailPasswordAuth {\n  /**\n   * Construct an interface to the email / password authentication provider.\n   *\n   * @param fetcher The underlying fetcher used to request the services.\n   * @param providerName Optional custom name of the authentication provider.\n   */\n  constructor(fetcher) {\n    let providerName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"local-userpass\";\n    this.fetcher = fetcher;\n    this.providerName = providerName;\n  }\n\n  async registerUser() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    const {\n      argsObject: userDetails\n    } = handleDeprecatedPositionalArgs(args, \"registerUser\", [\"email\", \"password\"]);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).register().path,\n      body: userDetails\n    });\n  }\n\n  async confirmUser() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    const {\n      argsObject: tokenDetails\n    } = handleDeprecatedPositionalArgs(args, \"confirmUser\", [\"token\", \"tokenId\"]);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).confirm().path,\n      body: tokenDetails\n    });\n  }\n\n  async resendConfirmationEmail() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    const {\n      argsObject: emailDetails\n    } = handleDeprecatedPositionalArgs(args, \"resendConfirmationEmail\", [\"email\"]);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).confirmSend().path,\n      body: emailDetails\n    });\n  }\n\n  async retryCustomConfirmation() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    const {\n      argsObject: emailDetails\n    } = handleDeprecatedPositionalArgs(args, \"retryCustomConfirmation\", [\"email\"]);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).confirmCall().path,\n      body: emailDetails\n    });\n  }\n\n  async resetPassword() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    const {\n      argsObject: resetDetails\n    } = handleDeprecatedPositionalArgs(args, \"resetPassword\", [\"token\", \"tokenId\", \"password\"]);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).reset().path,\n      body: resetDetails\n    });\n  }\n\n  async sendResetPasswordEmail() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    const {\n      argsObject: emailDetails\n    } = handleDeprecatedPositionalArgs(args, \"sendResetPasswordEmail\", [\"email\"]);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).resetSend().path,\n      body: emailDetails\n    });\n  }\n\n  async callResetPasswordFunction() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    const {\n      argsObject: resetDetails,\n      restArgs\n    } = handleDeprecatedPositionalArgs(args, \"callResetPasswordFunction\", [\"email\", \"password\"], true);\n    const appRoute = this.fetcher.appRoute;\n    await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: appRoute.emailPasswordAuth(this.providerName).resetCall().path,\n      body: { ...resetDetails,\n        arguments: restArgs\n      }\n    });\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * @returns The base api route.\n */\n\n\nfunction api() {\n  return {\n    path: \"/api/client/v2.0\",\n\n    /**\n     * @param appId The id of the app.\n     * @returns The URL of the app endpoint.\n     */\n    app(appId) {\n      return {\n        path: this.path + `/app/${appId}`,\n\n        /**\n         * @returns The URL of the app location endpoint.\n         */\n        location() {\n          return {\n            path: this.path + \"/location\"\n          };\n        },\n\n        /**\n         * @param providerName The name of the provider.\n         * @returns The app url concatinated with the /auth/providers/{providerName}\n         */\n        authProvider(providerName) {\n          return {\n            path: this.path + `/auth/providers/${providerName}`,\n\n            /**\n             * @returns Get the URL of an authentication provider.\n             */\n            login() {\n              return {\n                path: this.path + \"/login\"\n              };\n            }\n\n          };\n        },\n\n        /**\n         * @param providerName The name of the provider.\n         * @returns The app url concatinated with the /auth/providers/{providerName}\n         */\n        emailPasswordAuth(providerName) {\n          const authProviderRoutes = this.authProvider(providerName);\n          return { ...authProviderRoutes,\n\n            register() {\n              return {\n                path: this.path + \"/register\"\n              };\n            },\n\n            confirm() {\n              return {\n                path: this.path + \"/confirm\"\n              };\n            },\n\n            confirmSend() {\n              return {\n                path: this.path + \"/confirm/send\"\n              };\n            },\n\n            confirmCall() {\n              return {\n                path: this.path + \"/confirm/call\"\n              };\n            },\n\n            reset() {\n              return {\n                path: this.path + \"/reset\"\n              };\n            },\n\n            resetSend() {\n              return {\n                path: this.path + \"/reset/send\"\n              };\n            },\n\n            resetCall() {\n              return {\n                path: this.path + \"/reset/call\"\n              };\n            }\n\n          };\n        },\n\n        functionsCall() {\n          return {\n            path: this.path + \"/functions/call\"\n          };\n        }\n\n      };\n    },\n\n    auth() {\n      return {\n        path: this.path + \"/auth\",\n\n        apiKeys() {\n          return {\n            path: this.path + \"/api_keys\",\n\n            key(id) {\n              return {\n                path: this.path + `/${id}`,\n\n                enable() {\n                  return {\n                    path: this.path + \"/enable\"\n                  };\n                },\n\n                disable() {\n                  return {\n                    path: this.path + \"/disable\"\n                  };\n                }\n\n              };\n            }\n\n          };\n        },\n\n        profile() {\n          return {\n            path: this.path + \"/profile\"\n          };\n        },\n\n        session() {\n          return {\n            path: this.path + \"/session\"\n          };\n        },\n\n        delete() {\n          return {\n            path: this.path + \"/delete\"\n          };\n        }\n\n      };\n    }\n\n  };\n}\n\nvar routes = {\n  api\n}; ////////////////////////////////////////////////////////////////////////////\n\n/** @inheritdoc */\n\nclass ApiKeyAuth {\n  /**\n   * Construct an interface to the API-key authentication provider.\n   *\n   * @param fetcher The fetcher used to send requests to services.\n   */\n  constructor(fetcher) {\n    this.fetcher = fetcher;\n  }\n  /** @inheritdoc */\n\n\n  create(name) {\n    return this.fetcher.fetchJSON({\n      method: \"POST\",\n      body: {\n        name\n      },\n      path: routes.api().auth().apiKeys().path,\n      tokenType: \"refresh\"\n    });\n  }\n  /** @inheritdoc */\n\n\n  fetch(keyId) {\n    return this.fetcher.fetchJSON({\n      method: \"GET\",\n      path: routes.api().auth().apiKeys().key(keyId).path,\n      tokenType: \"refresh\"\n    });\n  }\n  /** @inheritdoc */\n\n\n  fetchAll() {\n    return this.fetcher.fetchJSON({\n      method: \"GET\",\n      tokenType: \"refresh\",\n      path: routes.api().auth().apiKeys().path\n    });\n  }\n  /** @inheritdoc */\n\n\n  async delete(keyId) {\n    await this.fetcher.fetchJSON({\n      method: \"DELETE\",\n      path: routes.api().auth().apiKeys().key(keyId).path,\n      tokenType: \"refresh\"\n    });\n  }\n  /** @inheritdoc */\n\n\n  async enable(keyId) {\n    await this.fetcher.fetchJSON({\n      method: \"PUT\",\n      path: routes.api().auth().apiKeys().key(keyId).enable().path,\n      tokenType: \"refresh\"\n    });\n  }\n  /** @inheritdoc */\n\n\n  async disable(keyId) {\n    await this.fetcher.fetchJSON({\n      method: \"PUT\",\n      path: routes.api().auth().apiKeys().key(keyId).disable().path,\n      tokenType: \"refresh\"\n    });\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\nlet environment = null;\n/**\n * Set the environment of execution.\n * Note: This should be called as the first thing before executing any code which calls getEnvironment()\n *\n * @param e An object containing environment specific implementations.\n */\n\nfunction setEnvironment(e) {\n  environment = e;\n}\n/**\n * Get the environment of execution.\n *\n * @returns An object containing environment specific implementations.\n */\n\n\nfunction getEnvironment() {\n  if (environment) {\n    return environment;\n  } else {\n    throw new Error(\"Cannot get environment before it's set\");\n  }\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n/**\n * An error occured during the parsing of a watch stream.\n */\n\n\nclass WatchError extends Error {\n  constructor(_ref4) {\n    let {\n      message,\n      code\n    } = _ref4;\n    super(message);\n    /**\n     * The name of this type of error\n     */\n\n    this.name = \"WatchError\";\n    this.code = code;\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n// NOTE: this is a fully processed event, not a single \"data: foo\" line!\n\n/**\n * The state of a WatchStream.\n */\n\n\nvar WatchStreamState;\n\n(function (WatchStreamState) {\n  /**\n   * Need to call one of the feed functions.\n   */\n  WatchStreamState[\"NEED_DATA\"] = \"NEED_DATA\";\n  /**\n   * Call nextEvent() to consume an event.\n   */\n\n  WatchStreamState[\"HAVE_EVENT\"] = \"HAVE_EVENT\";\n  /**\n   * Call error().\n   */\n\n  WatchStreamState[\"HAVE_ERROR\"] = \"HAVE_ERROR\";\n})(WatchStreamState || (WatchStreamState = {}));\n/**\n * Represents a stream of events\n */\n\n\nclass WatchStream {\n  constructor() {\n    this._state = WatchStreamState.NEED_DATA;\n    this._error = null; // Used by feedBuffer to construct lines\n\n    this._textDecoder = new (getEnvironment().TextDecoder)();\n    this._buffer = \"\";\n    this._bufferOffset = 0; // Used by feedLine for building the next SSE\n\n    this._eventType = \"\";\n    this._dataBuffer = \"\";\n  } // Call these when you have data, in whatever shape is easiest for your SDK to get.\n  // Pick one, mixing and matching on a single instance isn't supported.\n  // These can only be called in NEED_DATA state, which is the initial state.\n\n\n  feedBuffer(buffer) {\n    this.assertState(WatchStreamState.NEED_DATA);\n    this._buffer += this._textDecoder.decode(buffer, {\n      stream: true\n    });\n    this.advanceBufferState();\n  }\n\n  feedLine(line) {\n    this.assertState(WatchStreamState.NEED_DATA); // This is an implementation of the algorithm described at\n    // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation.\n    // Currently the server does not use id or retry lines, so that processing isn't implemented.\n    // ignore trailing LF if not removed by SDK.\n\n    if (line.endsWith(\"\\n\")) line = line.substr(0, line.length - 1); // ignore trailing CR from CRLF\n\n    if (line.endsWith(\"\\r\")) line = line.substr(0, line.length - 1);\n\n    if (line.length === 0) {\n      // This is the \"dispatch the event\" portion of the algorithm.\n      if (this._dataBuffer.length === 0) {\n        this._eventType = \"\";\n        return;\n      }\n\n      if (this._dataBuffer.endsWith(\"\\n\")) this._dataBuffer = this._dataBuffer.substr(0, this._dataBuffer.length - 1);\n      this.feedSse({\n        data: this._dataBuffer,\n        eventType: this._eventType\n      });\n      this._dataBuffer = \"\";\n      this._eventType = \"\";\n    }\n\n    if (line[0] === \":\") return;\n    const colon = line.indexOf(\":\");\n    const field = line.substr(0, colon);\n    let value = colon === -1 ? \"\" : line.substr(colon + 1);\n    if (value.startsWith(\" \")) value = value.substr(1);\n\n    if (field === \"event\") {\n      this._eventType = value;\n    } else if (field === \"data\") {\n      this._dataBuffer += value;\n      this._dataBuffer += \"\\n\";\n    } else ;\n  }\n\n  feedSse(sse) {\n    this.assertState(WatchStreamState.NEED_DATA);\n    const firstPercentIndex = sse.data.indexOf(\"%\");\n\n    if (firstPercentIndex !== -1) {\n      // For some reason, the stich server decided to add percent-encoding for '%', '\\n', and '\\r' to its\n      // event-stream replies. But it isn't real urlencoding, since most characters pass through, so we can't use\n      // uri_percent_decode() here.\n      let buffer = \"\";\n      let start = 0;\n\n      for (let percentIndex = firstPercentIndex; percentIndex !== -1; percentIndex = sse.data.indexOf(\"%\", start)) {\n        buffer += sse.data.substr(start, percentIndex - start);\n        const encoded = sse.data.substr(percentIndex, 3); // may be smaller than 3 if string ends with %\n\n        if (encoded === \"%25\") {\n          buffer += \"%\";\n        } else if (encoded === \"%0A\") {\n          buffer += \"\\x0A\"; // '\\n'\n        } else if (encoded === \"%0D\") {\n          buffer += \"\\x0D\"; // '\\r'\n        } else {\n          buffer += encoded; // propagate as-is\n        }\n\n        start = percentIndex + encoded.length;\n      } // Advance the buffer with the last part\n\n\n      buffer += sse.data.substr(start);\n      sse.data = buffer;\n    }\n\n    if (!sse.eventType || sse.eventType === \"message\") {\n      try {\n        const parsed = EJSON.parse(sse.data);\n\n        if (typeof parsed === \"object\") {\n          // ???\n          this._nextEvent = parsed;\n          this._state = WatchStreamState.HAVE_EVENT;\n          return;\n        }\n      } catch {// fallthrough to same handling as for non-document value.\n      }\n\n      this._state = WatchStreamState.HAVE_ERROR;\n      this._error = new WatchError({\n        message: \"server returned malformed event: \" + sse.data,\n        code: \"bad bson parse\"\n      });\n    } else if (sse.eventType === \"error\") {\n      this._state = WatchStreamState.HAVE_ERROR; // default error message if we have issues parsing the reply.\n\n      this._error = new WatchError({\n        message: sse.data,\n        code: \"unknown\"\n      });\n\n      try {\n        const {\n          error_code: errorCode,\n          error\n        } = EJSON.parse(sse.data);\n        if (typeof errorCode !== \"string\") return;\n        if (typeof error !== \"string\") return; // XXX in realm-js, object-store will error if the error_code is not one of the known\n        // error code enum values.\n\n        this._error = new WatchError({\n          message: error,\n          code: errorCode\n        });\n      } catch {\n        return; // Use the default state.\n      }\n    } else ;\n  }\n\n  get state() {\n    return this._state;\n  } // Consumes the returned event. If you used feedBuffer(), there may be another event or error after this one,\n  // so you need to call state() again to see what to do next.\n\n\n  nextEvent() {\n    this.assertState(WatchStreamState.HAVE_EVENT); // We can use \"as ChangeEvent<T>\" since we just asserted the state.\n\n    const out = this._nextEvent;\n    this._state = WatchStreamState.NEED_DATA;\n    this.advanceBufferState();\n    return out;\n  } // Once this enters the error state, it stays that way. You should not feed any more data.\n\n\n  get error() {\n    return this._error;\n  } ////////////////////////////////////////////\n\n\n  advanceBufferState() {\n    this.assertState(WatchStreamState.NEED_DATA);\n\n    while (this.state === WatchStreamState.NEED_DATA) {\n      if (this._bufferOffset === this._buffer.length) {\n        this._buffer = \"\";\n        this._bufferOffset = 0;\n        return;\n      } // NOTE not supporting CR-only newlines, just LF and CRLF.\n\n\n      const nextNewlineIndex = this._buffer.indexOf(\"\\n\", this._bufferOffset);\n\n      if (nextNewlineIndex === -1) {\n        // We have a partial line.\n        if (this._bufferOffset !== 0) {\n          // Slide the partial line down to the front of the buffer.\n          this._buffer = this._buffer.substr(this._bufferOffset, this._buffer.length - this._bufferOffset);\n          this._bufferOffset = 0;\n        }\n\n        return;\n      }\n\n      this.feedLine(this._buffer.substr(this._bufferOffset, nextNewlineIndex - this._bufferOffset));\n      this._bufferOffset = nextNewlineIndex + 1; // Advance past this line, including its newline.\n    }\n  }\n\n  assertState(state) {\n    if (this._state !== state) {\n      throw Error(`Expected WatchStream to be in state ${state}, but in state ${this._state}`);\n    }\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * A remote collection of documents.\n */\n\n\nclass MongoDBCollection {\n  /**\n   * Construct a remote collection of documents.\n   *\n   * @param fetcher The fetcher to use when requesting the service.\n   * @param serviceName The name of the remote service.\n   * @param databaseName The name of the database.\n   * @param collectionName The name of the remote collection.\n   */\n  constructor(fetcher, serviceName, databaseName, collectionName) {\n    this.functions = FunctionsFactory.create(fetcher, {\n      serviceName\n    });\n    this.databaseName = databaseName;\n    this.collectionName = collectionName;\n    this.serviceName = serviceName;\n    this.fetcher = fetcher;\n  }\n  /** @inheritdoc */\n\n\n  find() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.functions.find({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      project: options.projection,\n      sort: options.sort,\n      limit: options.limit\n    });\n  }\n  /** @inheritdoc */\n\n\n  findOne() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.functions.findOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      project: options.projection,\n      sort: options.sort\n    });\n  }\n  /** @inheritdoc */\n\n\n  findOneAndUpdate() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let update = arguments.length > 1 ? arguments[1] : undefined;\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.functions.findOneAndUpdate({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter,\n      update,\n      sort: options.sort,\n      projection: options.projection,\n      upsert: options.upsert,\n      returnNewDocument: options.returnNewDocument\n    });\n  }\n  /** @inheritdoc */\n\n\n  findOneAndReplace() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let replacement = arguments.length > 1 ? arguments[1] : undefined;\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.functions.findOneAndReplace({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter: filter,\n      update: replacement,\n      sort: options.sort,\n      projection: options.projection,\n      upsert: options.upsert,\n      returnNewDocument: options.returnNewDocument\n    });\n  }\n  /** @inheritdoc */\n\n\n  findOneAndDelete() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.functions.findOneAndReplace({\n      database: this.databaseName,\n      collection: this.collectionName,\n      filter,\n      sort: options.sort,\n      projection: options.projection\n    });\n  }\n  /** @inheritdoc */\n\n\n  aggregate(pipeline) {\n    return this.functions.aggregate({\n      database: this.databaseName,\n      collection: this.collectionName,\n      pipeline\n    });\n  }\n  /** @inheritdoc */\n\n\n  count() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.functions.count({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      limit: options.limit\n    });\n  }\n  /** @inheritdoc */\n\n\n  insertOne(document) {\n    return this.functions.insertOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      document\n    });\n  }\n  /** @inheritdoc */\n\n\n  insertMany(documents) {\n    return this.functions.insertMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      documents\n    });\n  }\n  /** @inheritdoc */\n\n\n  deleteOne() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this.functions.deleteOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter\n    });\n  }\n  /** @inheritdoc */\n\n\n  deleteMany() {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this.functions.deleteMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter\n    });\n  }\n  /** @inheritdoc */\n\n\n  updateOne(filter, update) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.functions.updateOne({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      update,\n      upsert: options.upsert,\n      arrayFilters: options.arrayFilters\n    });\n  }\n  /** @inheritdoc */\n\n\n  updateMany(filter, update) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.functions.updateMany({\n      database: this.databaseName,\n      collection: this.collectionName,\n      query: filter,\n      update,\n      upsert: options.upsert,\n      arrayFilters: options.arrayFilters\n    });\n  }\n\n  async *watch() {\n    let {\n      ids,\n      filter\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const iterator = await this.functions.callFunctionStreaming(\"watch\", {\n      database: this.databaseName,\n      collection: this.collectionName,\n      ids,\n      filter\n    });\n    const watchStream = new WatchStream();\n\n    for await (const chunk of iterator) {\n      if (!chunk) continue;\n      watchStream.feedBuffer(chunk);\n\n      while (watchStream.state == WatchStreamState.HAVE_EVENT) {\n        yield watchStream.nextEvent();\n      }\n\n      if (watchStream.state == WatchStreamState.HAVE_ERROR) // XXX this is just throwing an error like {error_code: \"BadRequest, error: \"message\"},\n        // which matches realm-js, but is different from how errors are handled in realm-web\n        throw watchStream.error;\n    }\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates an Remote MongoDB Collection.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName A service name.\n * @param databaseName A database name.\n * @param collectionName A collection name.\n * @returns The collection.\n */\n\n\nfunction createCollection(fetcher, serviceName, databaseName, collectionName) {\n  return new MongoDBCollection(fetcher, serviceName, databaseName, collectionName);\n}\n/**\n * Creates a Remote MongoDB Database.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher\n * @param serviceName A service name\n * @param databaseName A database name\n * @returns The database.\n */\n\n\nfunction createDatabase(fetcher, serviceName, databaseName) {\n  return {\n    collection: createCollection.bind(null, fetcher, serviceName, databaseName)\n  };\n}\n/**\n * Creates a Remote MongoDB Service.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName An optional service name.\n * @returns The service.\n */\n\n\nfunction createService(fetcher) {\n  let serviceName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"mongo-db\";\n  return {\n    db: createDatabase.bind(null, fetcher, serviceName)\n  };\n} ////////////////////////////////////////////////////////////////////////////\n\n\nconst DEFAULT_DEVICE_ID = \"000000000000000000000000\";\n/** The state of a user within the app */\n\nvar UserState;\n\n(function (UserState) {\n  /** Active, with both access and refresh tokens */\n  UserState[\"Active\"] = \"active\";\n  /** Logged out, but there might still be data persisted about the user, in the browser. */\n\n  UserState[\"LoggedOut\"] = \"logged-out\";\n  /** Logged out and all data about the user has been removed. */\n\n  UserState[\"Removed\"] = \"removed\";\n})(UserState || (UserState = {}));\n/** The type of a user. */\n\n\nvar UserType$1;\n\n(function (UserType) {\n  /** Created by the user itself. */\n  UserType[\"Normal\"] = \"normal\";\n  /** Created by an administrator of the app. */\n\n  UserType[\"Server\"] = \"server\";\n})(UserType$1 || (UserType$1 = {}));\n/**\n * Representation of an authenticated user of an app.\n */\n\n\nclass User {\n  /**\n   * @param parameters Parameters of the user.\n   */\n  constructor(parameters) {\n    this.app = parameters.app;\n    this.id = parameters.id;\n    this.storage = new UserStorage(this.app.storage, this.id);\n\n    if (\"accessToken\" in parameters && \"refreshToken\" in parameters && \"providerType\" in parameters) {\n      this._accessToken = parameters.accessToken;\n      this._refreshToken = parameters.refreshToken;\n      this.providerType = parameters.providerType; // Save the parameters to storage, for future instances to be hydrated from\n\n      this.storage.accessToken = parameters.accessToken;\n      this.storage.refreshToken = parameters.refreshToken;\n      this.storage.providerType = parameters.providerType;\n    } else {\n      // Hydrate the rest of the parameters from storage\n      this._accessToken = this.storage.accessToken;\n      this._refreshToken = this.storage.refreshToken;\n      const providerType = this.storage.providerType;\n      this._profile = this.storage.profile;\n\n      if (providerType) {\n        this.providerType = providerType;\n      } else {\n        throw new Error(\"Storage is missing a provider type\");\n      }\n    }\n\n    this.fetcher = this.app.fetcher.clone({\n      userContext: {\n        currentUser: this\n      }\n    });\n    this.apiKeys = new ApiKeyAuth(this.fetcher);\n    this.functions = FunctionsFactory.create(this.fetcher);\n  }\n  /**\n   * @returns The access token used to authenticate the user towards MongoDB Realm.\n   */\n\n\n  get accessToken() {\n    return this._accessToken;\n  }\n  /**\n   * @param token The new access token.\n   */\n\n\n  set accessToken(token) {\n    this._accessToken = token;\n    this.storage.accessToken = token;\n  }\n  /**\n   * @returns The refresh token used to issue new access tokens.\n   */\n\n\n  get refreshToken() {\n    return this._refreshToken;\n  }\n  /**\n   * @param token The new refresh token.\n   */\n\n\n  set refreshToken(token) {\n    this._refreshToken = token;\n    this.storage.refreshToken = token;\n  }\n  /**\n   * @returns The current state of the user.\n   */\n\n\n  get state() {\n    if (this.id in this.app.allUsers) {\n      return this.refreshToken === null ? UserState.LoggedOut : UserState.Active;\n    } else {\n      return UserState.Removed;\n    }\n  }\n  /**\n   * @returns The logged in state of the user.\n   */\n\n\n  get isLoggedIn() {\n    return this.state === UserState.Active;\n  }\n\n  get customData() {\n    if (this.accessToken) {\n      const decodedToken = this.decodeAccessToken();\n      return decodedToken.userData;\n    } else {\n      throw new Error(\"Cannot read custom data without an access token\");\n    }\n  }\n  /**\n   * @returns Profile containing detailed information about the user.\n   */\n\n\n  get profile() {\n    if (this._profile) {\n      return this._profile.data;\n    } else {\n      throw new Error(\"A profile was never fetched for this user\");\n    }\n  }\n\n  get identities() {\n    if (this._profile) {\n      return this._profile.identities;\n    } else {\n      throw new Error(\"A profile was never fetched for this user\");\n    }\n  }\n\n  get deviceId() {\n    if (this.accessToken) {\n      const payload = this.accessToken.split(\".\")[1];\n\n      if (payload) {\n        const parsedPayload = JSON.parse(gBase64.decode(payload));\n        const deviceId = parsedPayload[\"baas_device_id\"];\n\n        if (typeof deviceId === \"string\" && deviceId !== DEFAULT_DEVICE_ID) {\n          return deviceId;\n        }\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Refresh the users profile data.\n   */\n\n\n  async refreshProfile() {\n    // Fetch the latest profile\n    const response = await this.fetcher.fetchJSON({\n      method: \"GET\",\n      path: routes.api().auth().profile().path\n    }); // Create a profile instance\n\n    this._profile = new UserProfile(response); // Store this for later hydration\n\n    this.storage.profile = this._profile;\n  }\n  /**\n   * Log out the user, invalidating the session (and its refresh token).\n   */\n\n\n  async logOut() {\n    // Invalidate the refresh token\n    try {\n      if (this._refreshToken !== null) {\n        await this.fetcher.fetchJSON({\n          method: \"DELETE\",\n          path: routes.api().auth().session().path,\n          tokenType: \"refresh\"\n        });\n      }\n    } catch (err) {\n      // Ignore failing to delete a missing refresh token\n      // It might have expired or it might be gone due to the user being deleted\n      if (!(err instanceof Error) || !err.message.includes(\"failed to find refresh token\")) {\n        throw err;\n      }\n    } finally {\n      // Forget the access and refresh token\n      this.accessToken = null;\n      this.refreshToken = null;\n    }\n  }\n  /** @inheritdoc */\n\n\n  async linkCredentials(credentials) {\n    const response = await this.app.authenticator.authenticate(credentials, this); // Sanity check the response\n\n    if (this.id !== response.userId) {\n      const details = `got user id ${response.userId} expected ${this.id}`;\n      throw new Error(`Link response ment for another user (${details})`);\n    } // Update the access token\n\n\n    this.accessToken = response.accessToken; // Refresh the profile to include the new identity\n\n    await this.refreshProfile();\n  }\n  /**\n   * Request a new access token, using the refresh token.\n   */\n\n\n  async refreshAccessToken() {\n    const response = await this.fetcher.fetchJSON({\n      method: \"POST\",\n      path: routes.api().auth().session().path,\n      tokenType: \"refresh\"\n    });\n    const {\n      access_token: accessToken\n    } = response;\n\n    if (typeof accessToken === \"string\") {\n      this.accessToken = accessToken;\n    } else {\n      throw new Error(\"Expected an 'access_token' in the response\");\n    }\n  }\n  /** @inheritdoc */\n\n\n  async refreshCustomData() {\n    await this.refreshAccessToken();\n    return this.customData;\n  }\n  /** @inheritdoc */\n\n\n  callFunction(name) {\n    for (var _len10 = arguments.length, args = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {\n      args[_key10 - 1] = arguments[_key10];\n    }\n\n    return this.functions.callFunction(name, ...args);\n  }\n  /**\n   * @returns A plain ol' JavaScript object representation of the user.\n   */\n\n\n  toJSON() {\n    return {\n      id: this.id,\n      accessToken: this.accessToken,\n      refreshToken: this.refreshToken,\n      profile: this._profile,\n      state: this.state,\n      customData: this.customData\n    };\n  }\n  /** @inheritdoc */\n\n\n  push() {\n    throw new Error(\"Not yet implemented\");\n  }\n  /** @inheritdoc */\n\n\n  mongoClient(serviceName) {\n    return createService(this.fetcher, serviceName);\n  }\n\n  decodeAccessToken() {\n    if (this.accessToken) {\n      // Decode and spread the token\n      const parts = this.accessToken.split(\".\");\n\n      if (parts.length !== 3) {\n        throw new Error(\"Expected an access token with three parts\");\n      } // Decode the payload\n\n\n      const encodedPayload = parts[1];\n      const decodedPayload = gBase64.decode(encodedPayload);\n      const parsedPayload = JSON.parse(decodedPayload);\n      const {\n        exp: expires,\n        iat: issuedAt,\n        sub: subject,\n        user_data: userData = {}\n      } = parsedPayload; // Validate the types\n\n      if (typeof expires !== \"number\") {\n        throw new Error(\"Failed to decode access token 'exp'\");\n      } else if (typeof issuedAt !== \"number\") {\n        throw new Error(\"Failed to decode access token 'iat'\");\n      }\n\n      return {\n        expires,\n        issuedAt,\n        subject,\n        userData\n      };\n    } else {\n      throw new Error(\"Missing an access token\");\n    }\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Ensure the static interface of the Credentials class implements the static interface of Realm.Credentials\n// See https://stackoverflow.com/a/43484801\n\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\n\n\nclass Credentials {\n  /**\n   * Constructs an instance of credentials.\n   *\n   * @param providerName The name of the authentication provider used when authenticating.\n   * @param providerType The type of the authentication provider used when authenticating.\n   * @param payload The data being sent to the service when authenticating.\n   */\n  constructor(providerName, providerType, payload) {\n    this.providerName = providerName;\n    this.providerType = providerType;\n    this.payload = payload;\n  }\n  /**\n   * Creates credentials that logs in using the [Anonymous Provider](https://docs.mongodb.com/realm/authentication/anonymous/).\n   *\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static anonymous() {\n    return new Credentials(\"anon-user\", \"anon-user\", {});\n  }\n  /**\n   * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n   *\n   * @deprecated Use `Credentials.apiKey`.\n   * @param key The secret content of the API key.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static userApiKey(key) {\n    return new Credentials(\"api-key\", \"api-key\", {\n      key\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n   *\n   * @deprecated Use `Credentials.apiKey`.\n   * @param key The secret content of the API key.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static serverApiKey(key) {\n    return new Credentials(\"api-key\", \"api-key\", {\n      key\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n   *\n   * @param key The secret content of the API key.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static apiKey(key) {\n    return new Credentials(\"api-key\", \"api-key\", {\n      key\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [Email/Password Provider](https://docs.mongodb.com/realm/authentication/email-password/).\n   * Note: This was formerly known as the \"Username/Password\" provider.\n   *\n   * @param email The end-users email address.\n   * @param password The end-users password.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static emailPassword(email, password) {\n    return new Credentials(\"local-userpass\", \"local-userpass\", {\n      username: email,\n      password\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [Custom Function Provider](https://docs.mongodb.com/realm/authentication/custom-function/).\n   *\n   * @param payload The custom payload as expected by the server.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static function(payload) {\n    return new Credentials(\"custom-function\", \"custom-function\", payload);\n  }\n  /**\n   * Creates credentials that logs in using the [Custom JWT Provider](https://docs.mongodb.com/realm/authentication/custom-jwt/).\n   *\n   * @param token The JSON Web Token (JWT).\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static jwt(token) {\n    return new Credentials(\"custom-token\", \"custom-token\", {\n      token\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [Google Provider](https://docs.mongodb.com/realm/authentication/google/).\n   *\n   * @param payload The URL that users should be redirected to, the auth code or id token from Google.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static google(payload) {\n    return new Credentials(\"oauth2-google\", \"oauth2-google\", Credentials.derivePayload(payload));\n  }\n  /**\n   * @param payload The payload string.\n   * @returns A payload object based on the string.\n   */\n\n\n  static derivePayload(payload) {\n    if (typeof payload === \"string\") {\n      if (payload.includes(\"://\")) {\n        return this.derivePayload({\n          redirectUrl: payload\n        });\n      } else if (payload.startsWith(\"4/\")) {\n        return this.derivePayload({\n          authCode: payload\n        });\n      } else if (payload.startsWith(\"ey\")) {\n        return this.derivePayload({\n          idToken: payload\n        });\n      } else {\n        throw new Error(`Unexpected payload: ${payload}`);\n      }\n    } else if (Object.keys(payload).length === 1) {\n      if (\"authCode\" in payload || \"redirectUrl\" in payload) {\n        return payload;\n      } else if (\"idToken\" in payload) {\n        return {\n          id_token: payload.idToken\n        };\n      } else {\n        throw new Error(\"Unexpected payload: \" + JSON.stringify(payload));\n      }\n    } else {\n      throw new Error(\"Expected only one property in payload, got \" + JSON.stringify(payload));\n    }\n  }\n  /**\n   * Creates credentials that logs in using the [Facebook Provider](https://docs.mongodb.com/realm/authentication/facebook/).\n   *\n   * @param redirectUrlOrAccessToken The URL that users should be redirected to or the auth code returned from Facebook.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static facebook(redirectUrlOrAccessToken) {\n    return new Credentials(\"oauth2-facebook\", \"oauth2-facebook\", redirectUrlOrAccessToken.includes(\"://\") ? {\n      redirectUrl: redirectUrlOrAccessToken\n    } : {\n      accessToken: redirectUrlOrAccessToken\n    });\n  }\n  /**\n   * Creates credentials that logs in using the [Apple ID Provider](https://docs.mongodb.com/realm/authentication/apple/).\n   *\n   * @param redirectUrlOrIdToken The URL that users should be redirected to or the id_token returned from Apple.\n   * @returns The credentials instance, which can be passed to `app.logIn`.\n   */\n\n\n  static apple(redirectUrlOrIdToken) {\n    return new Credentials(\"oauth2-apple\", \"oauth2-apple\", redirectUrlOrIdToken.includes(\"://\") ? {\n      redirectUrl: redirectUrlOrIdToken\n    } : {\n      id_token: redirectUrlOrIdToken\n    });\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n\nconst USER_IDS_STORAGE_KEY = \"userIds\";\nconst DEVICE_ID_STORAGE_KEY = \"deviceId\";\n/**\n * Storage specific to the app.\n */\n\nclass AppStorage extends PrefixedStorage {\n  /**\n   * @param storage The underlying storage to wrap.\n   * @param appId The id of the app.\n   */\n  constructor(storage, appId) {\n    super(storage, `app(${appId})`);\n  }\n  /**\n   * Reads out the list of user ids from storage.\n   *\n   * @returns A list of user ids.\n   */\n\n\n  getUserIds() {\n    const userIdsString = this.get(USER_IDS_STORAGE_KEY);\n    const userIds = userIdsString ? JSON.parse(userIdsString) : [];\n\n    if (Array.isArray(userIds)) {\n      // Remove any duplicates that might have been added\n      // The Set preserves insertion order\n      return [...new Set(userIds)];\n    } else {\n      throw new Error(\"Expected the user ids to be an array\");\n    }\n  }\n  /**\n   * Sets the list of ids in storage.\n   * Optionally merging with existing ids stored in the storage, by prepending these while voiding duplicates.\n   *\n   * @param userIds The list of ids to store.\n   * @param mergeWithExisting Prepend existing ids to avoid data-races with other apps using this storage.\n   */\n\n\n  setUserIds(userIds, mergeWithExisting) {\n    if (mergeWithExisting) {\n      // Add any existing user id to the end of this list, avoiding duplicates\n      const existingIds = this.getUserIds();\n\n      for (const id of existingIds) {\n        if (userIds.indexOf(id) === -1) {\n          userIds.push(id);\n        }\n      }\n    } // Store the list of ids\n\n\n    this.set(USER_IDS_STORAGE_KEY, JSON.stringify(userIds));\n  }\n  /**\n   * Remove an id from the list of ids.\n   *\n   * @param userId The id of a User to be removed.\n   */\n\n\n  removeUserId(userId) {\n    const existingIds = this.getUserIds();\n    const userIds = existingIds.filter(id => id !== userId); // Store the list of ids\n\n    this.setUserIds(userIds, false);\n  }\n  /**\n   * @returns id of this device (if any exists)\n   */\n\n\n  getDeviceId() {\n    return this.get(DEVICE_ID_STORAGE_KEY);\n  }\n  /**\n   * @param deviceId The id of this device, to send on subsequent authentication requests.\n   */\n\n\n  setDeviceId(deviceId) {\n    this.set(DEVICE_ID_STORAGE_KEY, deviceId);\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\nconst LOWERCASE_LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\nconst CLOSE_CHECK_INTERVAL = 100; // 10 times per second\n\nconst REDIRECT_HASH_TO_RESULT = {\n  _stitch_client_app_id: \"appId\",\n  _baas_client_app_id: \"appId\",\n  _stitch_ua: \"userAuth\",\n  _baas_ua: \"userAuth\",\n  _stitch_link: \"link\",\n  _baas_link: \"link\",\n  _stitch_error: \"error\",\n  _baas_error: \"error\",\n  _stitch_state: \"state\",\n  _baas_state: \"state\"\n};\n/**\n * A collection of methods helping implement the OAuth2 flow.\n */\n\nclass OAuth2Helper {\n  /**\n   * @param storage The underlying storage to use when storing and retriving secrets.\n   * @param openWindow An optional function called when a browser window needs to open.\n   */\n  constructor(storage) {\n    let openWindow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getEnvironment().openWindow;\n    this.storage = storage.prefix(\"oauth2\");\n    this.openWindow = openWindow;\n  }\n  /**\n   * Parses the query string from the final step of the OAuth flow.\n   *\n   * @param queryString The query string passed through in location.hash.\n   * @returns The result of the OAuth flow.\n   */\n\n\n  static parseRedirectLocation(queryString) {\n    const params = decodeQueryString(queryString);\n    const result = {};\n\n    for (const [p, r] of Object.entries(REDIRECT_HASH_TO_RESULT)) {\n      const value = params[p];\n\n      if (value) {\n        result[r] = value;\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Handle the redirect querystring by parsing it and storing it for others to consume.\n   *\n   * @param queryString The query string containing the encoded result from the OAuth provider.\n   * @param storage The underlying storage used to persist the result.\n   */\n\n\n  static handleRedirect(queryString) {\n    let storage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getEnvironment().defaultStorage;\n    const result = OAuth2Helper.parseRedirectLocation(queryString);\n    const {\n      state,\n      error\n    } = result;\n\n    if (typeof state === \"string\") {\n      const oauth2Storage = storage.prefix(\"oauth2\");\n      const stateStorage = OAuth2Helper.getStateStorage(oauth2Storage, state);\n      stateStorage.set(\"result\", JSON.stringify(result));\n    } else if (error) {\n      throw new Error(`Failed to handle OAuth 2.0 redirect: ${error}`);\n    } else {\n      throw new Error(\"Failed to handle OAuth 2.0 redirect.\");\n    }\n  }\n  /**\n   * Decodes the authInfo string into its seperate parts.\n   *\n   * @param authInfo An authInfo string returned from the server.\n   * @returns An object containing the separate parts of the authInfo string.\n   */\n\n\n  static decodeAuthInfo(authInfo) {\n    const parts = (authInfo || \"\").split(\"$\");\n\n    if (parts.length === 4) {\n      const [accessToken, refreshToken, userId, deviceId] = parts;\n      return {\n        accessToken,\n        refreshToken,\n        userId,\n        deviceId\n      };\n    } else {\n      throw new Error(\"Failed to decode 'authInfo' into ids and tokens\");\n    }\n  }\n  /**\n   * Get the storage key associated of an secret associated with a state.\n   *\n   * @param storage The root storage used to derive a \"state namespaced\" storage.\n   * @param state The random state.\n   * @returns The storage associated with a particular state.\n   */\n\n\n  static getStateStorage(storage, state) {\n    return storage.prefix(`state(${state})`);\n  }\n  /**\n   * Open a window and wait for the redirect to be handled.\n   *\n   * @param url The URL to open.\n   * @param state The state which will be used to listen for storage updates.\n   * @returns The result passed through the redirect.\n   */\n\n\n  openWindowAndWaitForRedirect(url, state) {\n    const stateStorage = OAuth2Helper.getStateStorage(this.storage, state); // Return a promise that resolves when the  gets known\n\n    return new Promise((resolve, reject) => {\n      let redirectWindow = null; // We're declaring the interval now to enable referencing before its initialized\n\n      let windowClosedInterval; // eslint-disable-line prefer-const\n\n      const handleStorageUpdate = () => {\n        // Trying to get the secret from storage\n        const result = stateStorage.get(\"result\");\n\n        if (result) {\n          const parsedResult = JSON.parse(result); // The secret got updated!\n\n          stateStorage.removeListener(handleStorageUpdate); // Clear the storage to prevent others from reading this\n\n          stateStorage.clear(); // Try closing the newly created window\n\n          try {\n            if (redirectWindow) {\n              // Stop checking if the window closed\n              clearInterval(windowClosedInterval);\n              redirectWindow.close();\n            }\n          } catch (err) {\n            console.warn(`Failed closing redirect window: ${err}`);\n          } finally {\n            resolve(parsedResult);\n          }\n        }\n      }; // Add a listener to the state storage, awaiting an update to the secret\n\n\n      stateStorage.addListener(handleStorageUpdate); // Open up a window\n\n      redirectWindow = this.openWindow(url); // Not using a const, because we need the two listeners to reference each other when removing the other.\n\n      windowClosedInterval = setInterval(() => {\n        // Polling \"closed\" because registering listeners on the window violates cross-origin policies\n        if (!redirectWindow) {\n          // No need to keep polling for a window that we can't check\n          clearInterval(windowClosedInterval);\n        } else if (redirectWindow.closed) {\n          // Stop polling the window state\n          clearInterval(windowClosedInterval); // Stop listening for changes to the storage\n\n          stateStorage.removeListener(handleStorageUpdate); // Reject the promise\n\n          const err = new Error(\"Window closed\");\n          reject(err);\n        }\n      }, CLOSE_CHECK_INTERVAL);\n    });\n  }\n  /**\n   * Generate a random state string.\n   *\n   * @returns The random state string.\n   */\n\n\n  generateState() {\n    return generateRandomString(12, LOWERCASE_LETTERS);\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n\nconst REDIRECT_LOCATION_HEADER = \"x-baas-location\";\n/**\n * Handles authentication and linking of users.\n */\n\nclass Authenticator {\n  /**\n   * @param fetcher The fetcher used to fetch responses from the server.\n   * @param storage The storage used when completing OAuth 2.0 flows (should not be scoped to a specific app).\n   * @param getDeviceInformation Called to get device information to be sent to the server.\n   */\n  constructor(fetcher, storage, getDeviceInformation) {\n    this.fetcher = fetcher;\n    this.oauth2 = new OAuth2Helper(storage);\n    this.getDeviceInformation = getDeviceInformation;\n  }\n  /**\n   * @param credentials Credentials to use when logging in.\n   * @param linkingUser A user requesting to link.\n   * @returns A promise resolving to the response from the server.\n   */\n\n\n  async authenticate(credentials, linkingUser) {\n    const deviceInformation = this.getDeviceInformation();\n    const isLinking = typeof linkingUser === \"object\";\n\n    if (credentials.providerType.startsWith(\"oauth2\") && typeof credentials.payload.redirectUrl === \"string\") {\n      // Initiate the OAuth2 flow by generating a state and fetch a redirect URL\n      const state = this.oauth2.generateState();\n      const url = await this.getLogInUrl(credentials, isLinking, {\n        state,\n        redirect: credentials.payload.redirectUrl,\n        // Ensure redirects are communicated in a header different from \"Location\" and status remains 200 OK\n        providerRedirectHeader: isLinking ? true : undefined,\n        // Add the device information, only if we're not linking - since that request won't have a body of its own.\n        device: !isLinking ? deviceInformation.encode() : undefined\n      }); // If we're linking, we need to send the users access token in the request\n\n      if (isLinking) {\n        const response = await this.fetcher.fetch({\n          method: \"GET\",\n          url,\n          tokenType: isLinking ? \"access\" : \"none\",\n          user: linkingUser,\n          // The response will set a cookie that we need to tell the browser to store\n          mode: \"cors\",\n          credentials: \"include\"\n        }); // If a response header contains a redirect URL: Open a window and wait for the redirect to be handled\n\n        const redirectUrl = response.headers.get(REDIRECT_LOCATION_HEADER);\n\n        if (redirectUrl) {\n          return this.openWindowAndWaitForAuthResponse(redirectUrl, state);\n        } else {\n          throw new Error(`Missing ${REDIRECT_LOCATION_HEADER} header`);\n        }\n      } else {\n        // Otherwise we can open a window and let the server redirect the user right away\n        // This gives lower latency (as we don't need the client to receive and execute the redirect in code)\n        // This also has less dependency on cookies and doesn't sent any tokens.\n        return this.openWindowAndWaitForAuthResponse(url, state);\n      }\n    } else {\n      const logInUrl = await this.getLogInUrl(credentials, isLinking);\n      const response = await this.fetcher.fetchJSON({\n        method: \"POST\",\n        url: logInUrl,\n        body: { ...credentials.payload,\n          options: {\n            device: deviceInformation.toJSON()\n          }\n        },\n        tokenType: isLinking ? \"access\" : \"none\",\n        user: linkingUser\n      }); // Spread out values from the response and ensure they're valid\n\n      const {\n        user_id: userId,\n        access_token: accessToken,\n        refresh_token: refreshToken = null,\n        device_id: deviceId\n      } = response;\n\n      if (typeof userId !== \"string\") {\n        throw new Error(\"Expected a user id in the response\");\n      }\n\n      if (typeof accessToken !== \"string\") {\n        throw new Error(\"Expected an access token in the response\");\n      }\n\n      if (typeof refreshToken !== \"string\" && refreshToken !== null) {\n        throw new Error(\"Expected refresh token to be a string or null\");\n      }\n\n      if (typeof deviceId !== \"string\") {\n        throw new Error(\"Expected device id to be a string\");\n      }\n\n      return {\n        userId,\n        accessToken,\n        refreshToken,\n        deviceId\n      };\n    }\n  }\n  /**\n   * @param credentials Credentials to use when logging in.\n   * @param link Should the request link with the current user?\n   * @param extraQueryParams Any extra parameters to include in the query string\n   * @returns A promise resolving to the url to be used when logging in.\n   */\n\n\n  async getLogInUrl(credentials) {\n    let link = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let extraQueryParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    // See https://github.com/mongodb/stitch-js-sdk/blob/310f0bd5af80f818cdfbc3caf1ae29ffa8e9c7cf/packages/core/sdk/src/auth/internal/CoreStitchAuth.ts#L746-L780\n    const appRoute = this.fetcher.appRoute;\n    const loginRoute = appRoute.authProvider(credentials.providerName).login();\n    const qs = encodeQueryString({\n      link: link ? \"true\" : undefined,\n      ...extraQueryParams\n    });\n    const locationUrl = await this.fetcher.locationUrl;\n    return locationUrl + loginRoute.path + qs;\n  }\n\n  async openWindowAndWaitForAuthResponse(redirectUrl, state) {\n    const redirectResult = await this.oauth2.openWindowAndWaitForRedirect(redirectUrl, state); // Decode the auth info (id, tokens, etc.) from the result of the redirect\n\n    return OAuth2Helper.decodeAuthInfo(redirectResult.userAuth);\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Determine if the shape of an error response is specific to each service or widely used.\n\n/**\n * An error produced while communicating with the MongoDB Realm server.\n */\n\n\nclass MongoDBRealmError extends Error {\n  constructor(method, url, statusCode, statusText, error, errorCode, link) {\n    const summary = statusText ? `status ${statusCode} ${statusText}` : `status ${statusCode}`;\n\n    if (typeof error === \"string\") {\n      super(`Request failed (${method} ${url}): ${error} (${summary})`);\n    } else {\n      super(`Request failed (${method} ${url}): (${summary})`);\n    }\n\n    this.method = method;\n    this.url = url;\n    this.statusText = statusText;\n    this.statusCode = statusCode;\n    this.error = error;\n    this.errorCode = errorCode;\n    this.link = link;\n  }\n  /**\n   * Constructs and returns an error from a request and a response.\n   * Note: The caller must throw this error themselves.\n   *\n   * @param request The request sent to the server.\n   * @param response A raw response, as returned from the server.\n   * @returns An error from a request and a response.\n   */\n\n\n  static async fromRequestAndResponse(request, response) {\n    var _a;\n\n    const {\n      url,\n      method\n    } = request;\n    const {\n      status,\n      statusText\n    } = response;\n\n    if ((_a = response.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.startsWith(\"application/json\")) {\n      const body = await response.json();\n\n      if (typeof body === \"object\" && body) {\n        const {\n          error,\n          error_code: errorCode,\n          link\n        } = body;\n        return new MongoDBRealmError(method, url, status, statusText, typeof error === \"string\" ? error : undefined, typeof errorCode === \"string\" ? errorCode : undefined, typeof link === \"string\" ? link : undefined);\n      }\n    }\n\n    return new MongoDBRealmError(method, url, status, statusText);\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * @param body A possible resonse body.\n * @returns An async iterator.\n */\n\n\nfunction asyncIteratorFromResponseBody(body) {\n  if (typeof body !== \"object\" || body === null) {\n    throw new Error(\"Expected a non-null object\");\n  } else if (Symbol.asyncIterator in body) {\n    return body;\n  } else if (\"getReader\" in body) {\n    const stream = body;\n    return {\n      [Symbol.asyncIterator]() {\n        const reader = stream.getReader();\n        return {\n          next() {\n            return reader.read();\n          },\n\n          async return() {\n            await reader.cancel();\n            return {\n              done: true,\n              value: null\n            };\n          }\n\n        };\n      }\n\n    };\n  } else {\n    throw new Error(\"Expected an AsyncIterable or a ReadableStream\");\n  }\n}\n/**\n * Wraps a NetworkTransport from the \"realm-network-transport\" package.\n * Extracts error messages and throws `MongoDBRealmError` objects upon failures.\n * Injects access or refresh tokens for a current or specific user.\n * Refreshes access tokens if requests fails due to a 401 error.\n * Optionally parses response as JSON before returning it.\n * Fetches and exposes an app's location url.\n */\n\n\nclass Fetcher {\n  /**\n   * @param config A configuration of the fetcher.\n   * @param config.appId The application id.\n   * @param config.transport The transport used when fetching.\n   * @param config.userContext An object used to determine the requesting user.\n   * @param config.locationUrlContext An object used to determine the location / base URL.\n   */\n  constructor(_ref5) {\n    let {\n      appId,\n      transport,\n      userContext,\n      locationUrlContext\n    } = _ref5;\n    this.appId = appId;\n    this.transport = transport;\n    this.userContext = userContext;\n    this.locationUrlContext = locationUrlContext;\n  }\n  /**\n   * @param user An optional user to generate the header for.\n   * @param tokenType The type of token (access or refresh).\n   * @returns An object containing the user's token as \"Authorization\" header or undefined if no user is given.\n   */\n\n\n  static buildAuthorizationHeader(user, tokenType) {\n    if (!user || tokenType === \"none\") {\n      return {};\n    } else if (tokenType === \"access\") {\n      return {\n        Authorization: `Bearer ${user.accessToken}`\n      };\n    } else if (tokenType === \"refresh\") {\n      return {\n        Authorization: `Bearer ${user.refreshToken}`\n      };\n    } else {\n      throw new Error(`Unexpected token type (${tokenType})`);\n    }\n  }\n  /**\n   * @param body The body string or object passed from a request.\n   * @returns An object optionally specifying the \"Content-Type\" header.\n   */\n\n\n  static buildBody(body) {\n    if (!body) {\n      return;\n    } else if (typeof body === \"object\" && body !== null) {\n      return JSON.stringify(serialize(body));\n    } else if (typeof body === \"string\") {\n      return body;\n    } else {\n      console.log(\"body is\", body);\n      throw new Error(\"Unexpected type of body\");\n    }\n  }\n  /**\n   * @param body The body string or object passed from a request.\n   * @returns An object optionally specifying the \"Content-Type\" header.\n   */\n\n\n  static buildJsonHeader(body) {\n    if (body && body.length > 0) {\n      return {\n        \"Content-Type\": \"application/json\"\n      };\n    } else {\n      return {};\n    }\n  }\n\n  clone(config) {\n    return new Fetcher({\n      appId: this.appId,\n      transport: this.transport,\n      userContext: this.userContext,\n      locationUrlContext: this.locationUrlContext,\n      ...config\n    });\n  }\n  /**\n   * Fetch a network resource as an authenticated user.\n   *\n   * @param request The request which should be sent to the server.\n   * @returns The response from the server.\n   */\n\n\n  async fetch(request) {\n    const {\n      path,\n      url,\n      tokenType = \"access\",\n      user = this.userContext.currentUser,\n      ...restOfRequest\n    } = request;\n\n    if (typeof path === \"string\" && typeof url === \"string\") {\n      throw new Error(\"Use of 'url' and 'path' mutually exclusive\");\n    } else if (typeof path === \"string\") {\n      // Derive the URL\n      const url = (await this.locationUrlContext.locationUrl) + path;\n      return this.fetch({ ...request,\n        path: undefined,\n        url\n      });\n    } else if (typeof url === \"string\") {\n      const response = await this.transport.fetch({ ...restOfRequest,\n        url,\n        headers: { ...Fetcher.buildAuthorizationHeader(user, tokenType),\n          ...request.headers\n        }\n      });\n\n      if (response.ok) {\n        return response;\n      } else if (user && response.status === 401 && tokenType === \"access\") {\n        // If the access token has expired, it would help refreshing it\n        await user.refreshAccessToken(); // Retry with the specific user, since the currentUser might have changed.\n\n        return this.fetch({ ...request,\n          user\n        });\n      } else {\n        if (user && response.status === 401 && tokenType === \"refresh\") {\n          // A 401 error while using the refresh token indicates the token has an issue.\n          // Reset the tokens to prevent a lock.\n          user.accessToken = null;\n          user.refreshToken = null;\n        } // Throw an error with a message extracted from the body\n\n\n        throw await MongoDBRealmError.fromRequestAndResponse(request, response);\n      }\n    } else {\n      throw new Error(\"Expected either 'url' or 'path'\");\n    }\n  }\n  /**\n   * Fetch a network resource as an authenticated user and parse the result as extended JSON.\n   *\n   * @param request The request which should be sent to the server.\n   * @returns The response from the server, parsed as extended JSON.\n   */\n\n\n  async fetchJSON(request) {\n    const {\n      body\n    } = request;\n    const serializedBody = Fetcher.buildBody(body);\n    const contentTypeHeaders = Fetcher.buildJsonHeader(serializedBody);\n    const response = await this.fetch({ ...request,\n      body: serializedBody,\n      headers: {\n        Accept: \"application/json\",\n        ...contentTypeHeaders,\n        ...request.headers\n      }\n    });\n    const contentType = response.headers.get(\"content-type\");\n\n    if (contentType === null || contentType === void 0 ? void 0 : contentType.startsWith(\"application/json\")) {\n      const responseBody = await response.json();\n      return deserialize(responseBody);\n    } else if (contentType === null) {\n      return null;\n    } else {\n      throw new Error(`Expected JSON response, got \"${contentType}\"`);\n    }\n  }\n  /**\n   * Fetch an \"event-stream\" resource as an authenticated user.\n   *\n   * @param request The request which should be sent to the server.\n   * @returns An async iterator over the response body.\n   */\n\n\n  async fetchStream(request) {\n    const {\n      body\n    } = await this.fetch({ ...request,\n      headers: {\n        Accept: \"text/event-stream\",\n        ...request.headers\n      }\n    });\n    return asyncIteratorFromResponseBody(body);\n  }\n  /**\n   * @returns The path of the app route.\n   */\n\n\n  get appRoute() {\n    return routes.api().app(this.appId);\n  }\n  /**\n   * @returns A promise of the location URL of the app.\n   */\n\n\n  get locationUrl() {\n    return this.locationUrlContext.locationUrl;\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * The key in a storage on which the device id is stored.\n */\n\n\nconst DEVICE_ID_STORAGE_KEY$1 = \"deviceId\";\nvar DeviceFields;\n\n(function (DeviceFields) {\n  DeviceFields[\"DEVICE_ID\"] = \"deviceId\";\n  DeviceFields[\"APP_ID\"] = \"appId\";\n  DeviceFields[\"APP_VERSION\"] = \"appVersion\";\n  DeviceFields[\"PLATFORM\"] = \"platform\";\n  DeviceFields[\"PLATFORM_VERSION\"] = \"platformVersion\";\n  DeviceFields[\"SDK_VERSION\"] = \"sdkVersion\";\n})(DeviceFields || (DeviceFields = {}));\n/**\n * Information describing the device, app and SDK.\n */\n\n\nclass DeviceInformation {\n  /**\n   * @param params Construct the device information from these parameters.\n   * @param params.appId A user-defined application id.\n   * @param params.appVersion A user-defined application version.\n   * @param params.deviceId An unique id for the end-users device.\n   */\n  constructor(_ref6) {\n    let {\n      appId,\n      appVersion,\n      deviceId\n    } = _ref6;\n\n    /**\n     * The version of the Realm Web SDK (constant provided by Rollup).\n     */\n    this.sdkVersion = \"1.7.0\";\n    const environment = getEnvironment();\n    this.platform = environment.platform;\n    this.platformVersion = environment.platformVersion;\n    this.appId = appId;\n    this.appVersion = appVersion;\n    this.deviceId = deviceId;\n  }\n  /**\n   * @returns An base64 URI encoded representation of the device information.\n   */\n\n\n  encode() {\n    const obj = removeKeysWithUndefinedValues(this);\n    return gBase64.encode(JSON.stringify(obj));\n  }\n  /**\n   * @returns The defaults\n   */\n\n\n  toJSON() {\n    return removeKeysWithUndefinedValues(this);\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Default base url to prefix all requests if no baseUrl is specified in the configuration.\n */\n\n\nconst DEFAULT_BASE_URL = \"https://realm.mongodb.com\";\n/**\n * MongoDB Realm App\n */\n\nclass App {\n  /**\n   * Construct a Realm App, either from the Realm App id visible from the MongoDB Realm UI or a configuration.\n   *\n   * @param idOrConfiguration The Realm App id or a configuration to use for this app.\n   */\n  constructor(idOrConfiguration) {\n    /**\n     * An array of active and logged-out users.\n     * Elements in the beginning of the array is considered more recent than the later elements.\n     */\n    this.users = [];\n    /**\n     * A promise resolving to the App's location url.\n     */\n\n    this._locationUrl = null; // If the argument is a string, convert it to a simple configuration object.\n\n    const configuration = typeof idOrConfiguration === \"string\" ? {\n      id: idOrConfiguration\n    } : idOrConfiguration; // Initialize properties from the configuration\n\n    if (typeof configuration === \"object\" && typeof configuration.id === \"string\") {\n      this.id = configuration.id;\n    } else {\n      throw new Error(\"Missing a MongoDB Realm app-id\");\n    }\n\n    this.baseUrl = configuration.baseUrl || DEFAULT_BASE_URL;\n\n    if (configuration.skipLocationRequest) {\n      // Use the base url directly, instead of requesting a location URL from the server\n      this._locationUrl = Promise.resolve(this.baseUrl);\n    }\n\n    this.localApp = configuration.app;\n    const {\n      storage,\n      transport = new DefaultNetworkTransport()\n    } = configuration; // Construct a fetcher wrapping the network transport\n\n    this.fetcher = new Fetcher({\n      appId: this.id,\n      userContext: this,\n      locationUrlContext: this,\n      transport\n    }); // Construct the auth providers\n\n    this.emailPasswordAuth = new EmailPasswordAuth(this.fetcher); // Construct the storage\n\n    const baseStorage = storage || getEnvironment().defaultStorage;\n    this.storage = new AppStorage(baseStorage, this.id);\n    this.authenticator = new Authenticator(this.fetcher, baseStorage, () => this.deviceInformation); // Hydrate the app state from storage\n\n    try {\n      this.hydrate();\n    } catch (err) {\n      // The storage was corrupted\n      this.storage.clear(); // A failed hydration shouldn't throw and break the app experience\n      // Since this is \"just\" persisted state that unfortunately got corrupted or partially lost\n\n      console.warn(\"Realm app hydration failed:\", err instanceof Error ? err.message : err);\n    }\n  }\n  /**\n   * Get or create a singleton Realm App from an id.\n   * Calling this function multiple times with the same id will return the same instance.\n   *\n   * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n   * @returns The Realm App instance.\n   */\n\n\n  static getApp(id) {\n    if (id in App.appCache) {\n      return App.appCache[id];\n    } else {\n      const instance = new App(id);\n      App.appCache[id] = instance;\n      return instance;\n    }\n  }\n  /**\n   * Switch user.\n   *\n   * @param nextUser The user or id of the user to switch to.\n   */\n\n\n  switchUser(nextUser) {\n    const index = this.users.findIndex(u => u === nextUser);\n\n    if (index === -1) {\n      throw new Error(\"The user was never logged into this app\");\n    } // Remove the user from the stack\n\n\n    const [user] = this.users.splice(index, 1); // Insert the user in the beginning of the stack\n\n    this.users.unshift(user);\n  }\n  /**\n   * Log in a user.\n   *\n   * @param credentials Credentials to use when logging in.\n   * @param fetchProfile Should the users profile be fetched? (default: true)\n   * @returns A promise resolving to the newly logged in user.\n   */\n\n\n  async logIn(credentials) {\n    let fetchProfile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const response = await this.authenticator.authenticate(credentials);\n    const user = this.createOrUpdateUser(response, credentials.providerType); // Let's ensure this will be the current user, in case the user object was reused.\n\n    this.switchUser(user); // If needed, fetch and set the profile on the user\n\n    if (fetchProfile) {\n      await user.refreshProfile();\n    } // Persist the user id in the storage,\n    // merging to avoid overriding logins from other apps using the same underlying storage\n\n\n    this.storage.setUserIds(this.users.map(u => u.id), true); // Read out and store the device id from the server\n\n    const deviceId = response.deviceId;\n\n    if (deviceId && deviceId !== \"000000000000000000000000\") {\n      this.storage.set(DEVICE_ID_STORAGE_KEY$1, deviceId);\n    } // Return the user\n\n\n    return user;\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  async removeUser(user) {\n    // Remove the user from the list of users\n    const index = this.users.findIndex(u => u === user);\n\n    if (index === -1) {\n      throw new Error(\"The user was never logged into this app\");\n    }\n\n    this.users.splice(index, 1); // Log out the user - this removes access and refresh tokens from storage\n\n    await user.logOut(); // Remove the users profile from storage\n\n    this.storage.remove(`user(${user.id}):profile`); // Remove the user from the storage\n\n    this.storage.removeUserId(user.id);\n  }\n  /**\n   * @inheritdoc\n   */\n\n\n  async deleteUser(user) {\n    await this.fetcher.fetchJSON({\n      method: \"DELETE\",\n      path: routes.api().auth().delete().path\n    });\n    await this.removeUser(user);\n  }\n  /**\n   * The currently active user (or null if no active users exists).\n   *\n   * @returns the currently active user or null.\n   */\n\n\n  get currentUser() {\n    const activeUsers = this.users.filter(user => user.state === UserState.Active);\n\n    if (activeUsers.length === 0) {\n      return null;\n    } else {\n      // Current user is the top of the stack\n      return activeUsers[0];\n    }\n  }\n  /**\n   * All active and logged-out users:\n   *  - First in the list are active users (ordered by most recent call to switchUser or login)\n   *  - Followed by logged out users (also ordered by most recent call to switchUser or login).\n   *\n   * @returns An array of users active or logged out users (current user being the first).\n   */\n\n\n  get allUsers() {\n    // Returning a freezed copy of the list of users to prevent outside changes\n    return Object.fromEntries(this.users.map(user => [user.id, user]));\n  }\n  /**\n   * @returns A promise of the app URL, with the app location resolved.\n   */\n\n\n  get locationUrl() {\n    if (!this._locationUrl) {\n      const path = routes.api().app(this.id).location().path;\n      this._locationUrl = this.fetcher.fetchJSON({\n        method: \"GET\",\n        url: this.baseUrl + path,\n        tokenType: \"none\"\n      }).then(body => {\n        if (typeof body !== \"object\") {\n          throw new Error(\"Expected response body be an object\");\n        } else {\n          return body;\n        }\n      }).then(_ref7 => {\n        let {\n          hostname\n        } = _ref7;\n\n        if (typeof hostname !== \"string\") {\n          throw new Error(\"Expected response to contain a 'hostname'\");\n        } else {\n          return hostname;\n        }\n      }).catch(err => {\n        // Reset the location to allow another request to fetch again.\n        this._locationUrl = null;\n        throw err;\n      });\n    }\n\n    return this._locationUrl;\n  }\n  /**\n   * @returns Information about the current device, sent to the server when authenticating.\n   */\n\n\n  get deviceInformation() {\n    const deviceIdStr = this.storage.getDeviceId();\n    const deviceId = typeof deviceIdStr === \"string\" && deviceIdStr !== \"000000000000000000000000\" ? new ObjectId(deviceIdStr) : undefined;\n    return new DeviceInformation({\n      appId: this.localApp ? this.localApp.name : undefined,\n      appVersion: this.localApp ? this.localApp.version : undefined,\n      deviceId\n    });\n  }\n  /**\n   * Create (and store) a new user or update an existing user's access and refresh tokens.\n   * This helps de-duplicating users in the list of users known to the app.\n   *\n   * @param response A response from the Authenticator.\n   * @param providerType The type of the authentication provider used.\n   * @returns A new or an existing user.\n   */\n\n\n  createOrUpdateUser(response, providerType) {\n    const existingUser = this.users.find(u => u.id === response.userId);\n\n    if (existingUser) {\n      // Update the users access and refresh tokens\n      existingUser.accessToken = response.accessToken;\n      existingUser.refreshToken = response.refreshToken;\n      return existingUser;\n    } else {\n      // Create and store a new user\n      if (!response.refreshToken) {\n        throw new Error(\"No refresh token in response from server\");\n      }\n\n      const user = new User({\n        app: this,\n        id: response.userId,\n        accessToken: response.accessToken,\n        refreshToken: response.refreshToken,\n        providerType\n      });\n      this.users.unshift(user);\n      return user;\n    }\n  }\n  /**\n   * Restores the state of the app (active and logged-out users) from the storage\n   */\n\n\n  hydrate() {\n    const userIds = this.storage.getUserIds();\n    this.users = userIds.map(id => new User({\n      app: this,\n      id\n    }));\n  }\n\n}\n/**\n * A map of app instances returned from calling getApp.\n */\n\n\nApp.appCache = {};\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\n\nApp.Credentials = Credentials; ////////////////////////////////////////////////////////////////////////////\n\n/**\n * Get or create a singleton Realm App from an id.\n * Calling this function multiple times with the same id will return the same instance.\n *\n * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n * @returns The Realm App instance.\n */\n\nfunction getApp(id) {\n  return App.getApp(id);\n} ////////////////////////////////////////////////////////////////////////////\n\n/**\n * In-memory storage that will not be persisted.\n */\n\n\nclass LocalStorage {\n  /**\n   * Constructs a LocalStorage using the global window.\n   */\n  constructor() {\n    if (typeof globalThis.localStorage === \"object\") {\n      this.global = globalThis;\n    } else {\n      throw new Error(\"Cannot use LocalStorage without a global localStorage object\");\n    }\n  }\n  /** @inheritdoc */\n\n\n  get(key) {\n    return this.global.localStorage.getItem(key);\n  }\n  /** @inheritdoc */\n\n\n  set(key, value) {\n    return this.global.localStorage.setItem(key, value);\n  }\n  /** @inheritdoc */\n\n\n  remove(key) {\n    return this.global.localStorage.removeItem(key);\n  }\n  /** @inheritdoc */\n\n\n  prefix(keyPart) {\n    return new PrefixedStorage(this, keyPart);\n  }\n  /** @inheritdoc */\n\n\n  clear(prefix) {\n    const keys = []; // Iterate all keys to find the once have a matching prefix.\n\n    for (let i = 0; i < this.global.localStorage.length; i++) {\n      const key = this.global.localStorage.key(i);\n\n      if (key && (!prefix || key.startsWith(prefix))) {\n        keys.push(key);\n      }\n    } // Remove the items in a seperate loop to avoid updating while iterating.\n\n\n    for (const key of keys) {\n      this.global.localStorage.removeItem(key);\n    }\n  }\n  /** @inheritdoc */\n\n\n  addListener(listener) {\n    return this.global.addEventListener(\"storage\", listener);\n  }\n  /** @inheritdoc */\n\n\n  removeListener(listener) {\n    return this.global.removeEventListener(\"storage\", listener);\n  }\n\n} ////////////////////////////////////////////////////////////////////////////\n\n\nconst browser = detect();\nconst DefaultStorage = \"localStorage\" in globalThis ? LocalStorage : MemoryStorage;\n/**\n * Attempt to use the browser to open a window\n *\n * @param url The url to open a window to.\n * @returns Then newly create window.\n */\n\nfunction openWindow(url) {\n  if (typeof globalThis.open === \"function\") {\n    return globalThis.open(url);\n  } else {\n    console.log(`Please open ${url}`);\n    return null;\n  }\n}\n\nconst environment$1 = {\n  defaultStorage: new DefaultStorage().prefix(\"realm-web\"),\n  openWindow,\n  platform: (browser === null || browser === void 0 ? void 0 : browser.name) || \"web\",\n  platformVersion: (browser === null || browser === void 0 ? void 0 : browser.version) || \"0.0.0\",\n  TextDecoder\n};\nsetEnvironment(environment$1);\n/**\n * Handle an OAuth 2.0 redirect.\n *\n * @param location An optional location to use (defaults to the windows current location).\n * @param storage Optional storage used to save any results from the location.\n */\n\nfunction handleAuthRedirect() {\n  let location = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : globalThis.location;\n  let storage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : environment$1.defaultStorage;\n\n  try {\n    const queryString = location.hash.substr(1); // Strip the initial # from the hash\n\n    OAuth2Helper.handleRedirect(queryString, storage);\n  } catch (err) {\n    // Ensure calling this never throws: It should not interrupt a users flow.\n    console.warn(err);\n  }\n}\n\nexport { App, Credentials, DEFAULT_BASE_URL, LocalStorage, MongoDBRealmError, User, UserState, UserType$1 as UserType, getApp, getEnvironment, handleAuthRedirect, setEnvironment };","map":{"version":3,"sources":["C:/Users/Administrateur/Documents/03-DEV/Cours/Udemy/Marketplace/client/node_modules/realm-web/dist/bundle.dom.es.js"],"names":["EJSON","ObjectId","bson","BSON","__spreadArray","undefined","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","BrowserInfo","name","version","os","type","NodeInfo","process","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOX_UA_REGEX","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","userAgent","parseUserAgent","document","navigator","product","getNodeVersion","matchUserAgent","ua","reduce","matched","_a","browser","regex","uaMatch","exec","matchedRule","match","versionParts","split","join","createVersionParts","detectOS","searchBotMatch","ii","count","isNode","output","push","DefaultNetworkTransport","constructor","fetch","Error","AbortController","fetchWithCallbacks","request","handler","then","response","decodedBody","text","responseHeaders","headers","forEach","value","key","statusCode","status","body","r","onSuccess","catch","e","onError","timeoutMs","url","rest","signal","cancelTimeout","createTimeoutSignal","extraFetchOptions","controller","timeout","setTimeout","abort","clearTimeout","DEFAULT_HEADERS","globalThis","bind","VERSION","_hasatob","atob","_hasbtoa","btoa","_hasBuffer","Buffer","_TD","TextDecoder","_TE","TextEncoder","b64ch","b64chs","b64tab","a","tab","c","b64re","_fromCC","String","fromCharCode","_U8Afrom","Uint8Array","it","fn","x","map","_mkUriSafe","src","replace","m0","_tidyB64","s","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","charCodeAt","TypeError","substring","_btoa","toString","_fromUint8Array","u8a","maxargs","strs","apply","subarray","fromUint8Array","urlsafe","cb_utob","cc","re_utob","utob","u","_encode","encode","encodeURI","re_btou","cb_btou","cccc","cp","offset","btou","b","atobPolyfill","test","u24","r1","r2","charAt","_atob","_toUint8Array","toUint8Array","_unURI","_decode","decode","isValid","_noEnum","v","enumerable","writable","configurable","extendString","_add","Object","defineProperty","extendUint8Array","extendBuiltins","gBase64","fromBase64","toBase64","encodeURL","SERIALIZATION_OPTIONS","relaxed","serialize","obj","deserialize","isArray","doc","UserType","DataKey","DATA_MAPPING","NAME","EMAIL","PICTURE","FIRST_NAME","LAST_NAME","GENDER","BIRTHDAY","MIN_AGE","MAX_AGE","UserProfile","Normal","identities","data","identity","id","provider_type","providerType","mappedData","fromEntries","entries","PrefixedStorage","storage","keyPart","get","PART_SEPARATOR","set","remove","prefix","clear","addListener","listener","removeListener","MemoryStorage","listeners","Set","fireListeners","keys","startsWith","add","delete","ACCESS_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","PROFILE_STORAGE_KEY","PROVIDER_TYPE_STORAGE_KEY","UserStorage","userId","accessToken","refreshToken","profile","assign","JSON","parse","stringify","removeKeysWithUndefinedValues","filter","entry","generateRandomString","alphabet","result","Math","floor","random","encodeQueryString","params","prefixed","cleanedParams","k","encodeURIComponent","decodeQueryString","str","cleanStr","substr","kvp","decodeURIComponent","RESERVED_NAMES","getOwnPropertyNames","cleanArgs","args","arg","cleanArgsAndSerialize","cleaned","FunctionsFactory","fetcher","config","serviceName","argsTransformation","create","factory","Proxy","target","p","receiver","indexOf","callFunction","prop","Reflect","service","appRoute","fetchJSON","method","path","functionsCall","callFunctionStreaming","qs","fetchStream","isDevelopmentMode","setIsDevelopmentMode","state","deprecationWarning","deprecatedItem","suggestedReplacement","console","warn","handleDeprecatedPositionalArgs","methodName","argNames","hasRestArgs","restArgsText","argsObject","prev","argName","index","restArgs","__DEV__","EmailPasswordAuth","providerName","registerUser","userDetails","emailPasswordAuth","register","confirmUser","tokenDetails","confirm","resendConfirmationEmail","emailDetails","confirmSend","retryCustomConfirmation","confirmCall","resetPassword","resetDetails","reset","sendResetPasswordEmail","resetSend","callResetPasswordFunction","resetCall","api","app","appId","location","authProvider","login","authProviderRoutes","auth","apiKeys","enable","disable","session","routes","ApiKeyAuth","tokenType","keyId","fetchAll","environment","setEnvironment","getEnvironment","WatchError","message","code","WatchStreamState","WatchStream","_state","NEED_DATA","_error","_textDecoder","_buffer","_bufferOffset","_eventType","_dataBuffer","feedBuffer","buffer","assertState","stream","advanceBufferState","feedLine","line","endsWith","feedSse","eventType","colon","field","sse","firstPercentIndex","start","percentIndex","encoded","parsed","_nextEvent","HAVE_EVENT","HAVE_ERROR","error_code","errorCode","error","nextEvent","out","nextNewlineIndex","MongoDBCollection","databaseName","collectionName","functions","find","options","database","collection","query","project","projection","sort","limit","findOne","findOneAndUpdate","update","upsert","returnNewDocument","findOneAndReplace","replacement","findOneAndDelete","aggregate","pipeline","insertOne","insertMany","documents","deleteOne","deleteMany","updateOne","arrayFilters","updateMany","watch","ids","iterator","watchStream","chunk","createCollection","createDatabase","createService","db","DEFAULT_DEVICE_ID","UserState","UserType$1","User","parameters","_accessToken","_refreshToken","_profile","clone","userContext","currentUser","token","allUsers","LoggedOut","Active","Removed","isLoggedIn","customData","decodedToken","decodeAccessToken","userData","deviceId","payload","parsedPayload","refreshProfile","logOut","err","includes","linkCredentials","credentials","authenticator","authenticate","details","refreshAccessToken","access_token","refreshCustomData","toJSON","mongoClient","parts","encodedPayload","decodedPayload","exp","expires","iat","issuedAt","sub","subject","user_data","Credentials","anonymous","userApiKey","serverApiKey","apiKey","emailPassword","email","password","username","function","jwt","google","derivePayload","redirectUrl","authCode","idToken","id_token","facebook","redirectUrlOrAccessToken","apple","redirectUrlOrIdToken","USER_IDS_STORAGE_KEY","DEVICE_ID_STORAGE_KEY","AppStorage","getUserIds","userIdsString","userIds","setUserIds","mergeWithExisting","existingIds","removeUserId","getDeviceId","setDeviceId","LOWERCASE_LETTERS","CLOSE_CHECK_INTERVAL","REDIRECT_HASH_TO_RESULT","_stitch_client_app_id","_baas_client_app_id","_stitch_ua","_baas_ua","_stitch_link","_baas_link","_stitch_error","_baas_error","_stitch_state","_baas_state","OAuth2Helper","openWindow","parseRedirectLocation","queryString","handleRedirect","defaultStorage","oauth2Storage","stateStorage","getStateStorage","decodeAuthInfo","authInfo","openWindowAndWaitForRedirect","Promise","resolve","reject","redirectWindow","windowClosedInterval","handleStorageUpdate","parsedResult","clearInterval","close","setInterval","closed","generateState","REDIRECT_LOCATION_HEADER","Authenticator","getDeviceInformation","oauth2","linkingUser","deviceInformation","isLinking","getLogInUrl","redirect","providerRedirectHeader","device","user","mode","openWindowAndWaitForAuthResponse","logInUrl","user_id","refresh_token","device_id","link","extraQueryParams","loginRoute","locationUrl","redirectResult","userAuth","MongoDBRealmError","statusText","summary","fromRequestAndResponse","json","asyncIteratorFromResponseBody","Symbol","asyncIterator","reader","getReader","next","read","return","cancel","done","Fetcher","transport","locationUrlContext","buildAuthorizationHeader","Authorization","buildBody","log","buildJsonHeader","restOfRequest","ok","serializedBody","contentTypeHeaders","Accept","contentType","responseBody","DEVICE_ID_STORAGE_KEY$1","DeviceFields","DeviceInformation","appVersion","sdkVersion","platformVersion","DEFAULT_BASE_URL","App","idOrConfiguration","users","_locationUrl","configuration","baseUrl","skipLocationRequest","localApp","baseStorage","hydrate","getApp","appCache","instance","switchUser","nextUser","findIndex","splice","unshift","logIn","fetchProfile","createOrUpdateUser","removeUser","deleteUser","activeUsers","hostname","deviceIdStr","existingUser","LocalStorage","localStorage","global","getItem","setItem","removeItem","addEventListener","removeEventListener","DefaultStorage","open","environment$1","handleAuthRedirect","hash"],"mappings":"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","sourcesContent":["import { EJSON, ObjectId } from 'bson';\nimport * as bson from 'bson';\nexport { bson as BSON };\n\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nfunction detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nfunction parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nfunction detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nfunction getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nclass DefaultNetworkTransport {\n    constructor() {\n        if (!DefaultNetworkTransport.fetch) {\n            throw new Error(\"DefaultNetworkTransport.fetch must be set before it's used\");\n        }\n        if (!DefaultNetworkTransport.AbortController) {\n            throw new Error(\"DefaultNetworkTransport.AbortController must be set before it's used\");\n        }\n    }\n    fetchWithCallbacks(request, handler) {\n        // tslint:disable-next-line: no-console\n        this.fetch(request)\n            .then(async (response) => {\n            const decodedBody = await response.text();\n            // Pull out the headers of the response\n            const responseHeaders = {};\n            response.headers.forEach((value, key) => {\n                responseHeaders[key] = value;\n            });\n            return {\n                statusCode: response.status,\n                headers: responseHeaders,\n                body: decodedBody,\n            };\n        })\n            .then((r) => handler.onSuccess(r))\n            .catch((e) => handler.onError(e));\n    }\n    async fetch(request) {\n        const { timeoutMs, url, ...rest } = request;\n        const { signal, cancelTimeout } = this.createTimeoutSignal(timeoutMs);\n        try {\n            // We'll await the response to catch throw our own error\n            return await DefaultNetworkTransport.fetch(url, {\n                ...DefaultNetworkTransport.extraFetchOptions,\n                signal,\n                ...rest,\n            });\n        }\n        finally {\n            // Whatever happens, cancel any timeout\n            cancelTimeout();\n        }\n    }\n    createTimeoutSignal(timeoutMs) {\n        if (typeof timeoutMs === \"number\") {\n            const controller = new DefaultNetworkTransport.AbortController();\n            // Call abort after a specific number of milliseconds\n            const timeout = setTimeout(() => {\n                controller.abort();\n            }, timeoutMs);\n            return {\n                signal: controller.signal,\n                cancelTimeout: () => {\n                    clearTimeout(timeout);\n                },\n            };\n        }\n        else {\n            return {\n                signal: undefined,\n                cancelTimeout: () => {\n                    /* No-op */\n                },\n            };\n        }\n    }\n}\nDefaultNetworkTransport.DEFAULT_HEADERS = {\n    \"Content-Type\": \"application/json\",\n};\n\n////////////////////////////////////////////////////////////////////////////\nDefaultNetworkTransport.fetch = globalThis.fetch.bind(globalThis);\nDefaultNetworkTransport.AbortController = globalThis.AbortController;\n\n/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n\n////////////////////////////////////////////////////////////////////////////\nconst SERIALIZATION_OPTIONS = {\n    relaxed: false, // Ensure Canonical mode\n};\n/**\n * Serialize an object containing BSON types into extended-JSON.\n *\n * @param obj The object containing BSON types.\n * @returns The document in extended-JSON format.\n */\nfunction serialize(obj) {\n    return EJSON.serialize(obj, SERIALIZATION_OPTIONS);\n}\n/**\n * De-serialize an object or an array of object from extended-JSON into an object or an array of object with BSON types.\n *\n * @param obj The object or array of objects in extended-JSON format.\n * @returns The object or array of objects with inflated BSON types.\n */\nfunction deserialize(obj) {\n    if (Array.isArray(obj)) {\n        return obj.map((doc) => EJSON.deserialize(doc));\n    }\n    else {\n        return EJSON.deserialize(obj);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * The type of a user.\n */\nvar UserType;\n(function (UserType) {\n    /**\n     * A normal end-user created this user.\n     */\n    UserType[\"Normal\"] = \"normal\";\n    /**\n     * The user was created by the server.\n     */\n    UserType[\"Server\"] = \"server\";\n})(UserType || (UserType = {}));\n/** @ignore */\nvar DataKey;\n(function (DataKey) {\n    /** @ignore */\n    DataKey[\"NAME\"] = \"name\";\n    /** @ignore */\n    DataKey[\"EMAIL\"] = \"email\";\n    /** @ignore */\n    DataKey[\"PICTURE\"] = \"picture\";\n    /** @ignore */\n    DataKey[\"FIRST_NAME\"] = \"first_name\";\n    /** @ignore */\n    DataKey[\"LAST_NAME\"] = \"last_name\";\n    /** @ignore */\n    DataKey[\"GENDER\"] = \"gender\";\n    /** @ignore */\n    DataKey[\"BIRTHDAY\"] = \"birthday\";\n    /** @ignore */\n    DataKey[\"MIN_AGE\"] = \"min_age\";\n    /** @ignore */\n    DataKey[\"MAX_AGE\"] = \"max_age\";\n})(DataKey || (DataKey = {}));\nconst DATA_MAPPING = {\n    [DataKey.NAME]: \"name\",\n    [DataKey.EMAIL]: \"email\",\n    [DataKey.PICTURE]: \"pictureUrl\",\n    [DataKey.FIRST_NAME]: \"firstName\",\n    [DataKey.LAST_NAME]: \"lastName\",\n    [DataKey.GENDER]: \"gender\",\n    [DataKey.BIRTHDAY]: \"birthday\",\n    [DataKey.MIN_AGE]: \"minAge\",\n    [DataKey.MAX_AGE]: \"maxAge\",\n};\n/** @inheritdoc */\nclass UserProfile {\n    /**\n     * @param response The response of a call fetching the users profile.\n     */\n    constructor(response) {\n        /** @ignore */\n        this.type = UserType.Normal;\n        /** @ignore */\n        this.identities = [];\n        if (typeof response === \"object\" && response !== null) {\n            const { type, identities, data } = response;\n            if (typeof type === \"string\") {\n                this.type = type;\n            }\n            else {\n                throw new Error(\"Expected 'type' in the response body\");\n            }\n            if (Array.isArray(identities)) {\n                this.identities = identities.map((identity) => {\n                    const { id, provider_type: providerType } = identity;\n                    return { id, providerType };\n                });\n            }\n            else {\n                throw new Error(\"Expected 'identities' in the response body\");\n            }\n            if (typeof data === \"object\" && data !== null) {\n                const mappedData = Object.fromEntries(Object.entries(data).map(([key, value]) => {\n                    if (key in DATA_MAPPING) {\n                        // Translate any known data field to its JS idiomatic alias\n                        return [DATA_MAPPING[key], value];\n                    }\n                    else {\n                        // Pass through any other values\n                        return [key, value];\n                    }\n                }));\n                // We can use `any` since we trust the user supplies the correct type\n                this.data = deserialize(mappedData);\n            }\n            else {\n                throw new Error(\"Expected 'data' in the response body\");\n            }\n        }\n        else {\n            this.data = {};\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * A `Storage` which will prefix a key part to every operation.\n */\nclass PrefixedStorage {\n    /**\n     * Construct a `Storage` which will prefix a key part to every operation.\n     *\n     * @param storage The underlying storage to use for operations.\n     * @param keyPart The part of the key to prefix when performing operations.\n     */\n    constructor(storage, keyPart) {\n        this.storage = storage;\n        this.keyPart = keyPart;\n    }\n    /** @inheritdoc */\n    get(key) {\n        return this.storage.get(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        return this.storage.set(this.keyPart + PrefixedStorage.PART_SEPARATOR + key, value);\n    }\n    /** @inheritdoc */\n    remove(key) {\n        return this.storage.remove(this.keyPart + PrefixedStorage.PART_SEPARATOR + key);\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix = \"\") {\n        return this.storage.clear(this.keyPart + PrefixedStorage.PART_SEPARATOR + prefix);\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        return this.storage.addListener(listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        return this.storage.addListener(listener);\n    }\n}\n/**\n * The string separating two parts.\n */\nPrefixedStorage.PART_SEPARATOR = \":\";\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * In-memory storage that will not be persisted.\n */\nclass MemoryStorage {\n    constructor() {\n        /**\n         * Internal state of the storage.\n         */\n        this.storage = {};\n        /**\n         * A set of listners.\n         */\n        this.listeners = new Set();\n    }\n    /** @inheritdoc */\n    get(key) {\n        if (key in this.storage) {\n            return this.storage[key];\n        }\n        else {\n            return null;\n        }\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        this.storage[key] = value;\n        // Fire the listeners\n        this.fireListeners();\n    }\n    /** @inheritdoc */\n    remove(key) {\n        delete this.storage[key];\n        // Fire the listeners\n        this.fireListeners();\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix) {\n        // Iterate all keys and delete their values if they have a matching prefix\n        for (const key of Object.keys(this.storage)) {\n            if (!prefix || key.startsWith(prefix)) {\n                delete this.storage[key];\n            }\n        }\n        // Fire the listeners\n        this.fireListeners();\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        this.listeners.add(listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        this.listeners.delete(listener);\n    }\n    /**\n     * Tell the listeners that a change occurred.\n     */\n    fireListeners() {\n        this.listeners.forEach((listener) => listener());\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst ACCESS_TOKEN_STORAGE_KEY = \"accessToken\";\nconst REFRESH_TOKEN_STORAGE_KEY = \"refreshToken\";\nconst PROFILE_STORAGE_KEY = \"profile\";\nconst PROVIDER_TYPE_STORAGE_KEY = \"providerType\";\n/**\n * Storage specific to the app.\n */\nclass UserStorage extends PrefixedStorage {\n    /**\n     * Construct a storage for a `User`.\n     *\n     * @param storage The underlying storage to wrap.\n     * @param userId The id of the user.\n     */\n    constructor(storage, userId) {\n        super(storage, `user(${userId})`);\n    }\n    /**\n     * Get the access token from storage.\n     *\n     * @returns Access token (null if unknown).\n     */\n    get accessToken() {\n        return this.get(ACCESS_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the access token in storage.\n     *\n     * @param value Access token (null if unknown).\n     */\n    set accessToken(value) {\n        if (value === null) {\n            this.remove(ACCESS_TOKEN_STORAGE_KEY);\n        }\n        else {\n            this.set(ACCESS_TOKEN_STORAGE_KEY, value);\n        }\n    }\n    /**\n     * Get the refresh token from storage.\n     *\n     * @returns Refresh token (null if unknown and user is logged out).\n     */\n    get refreshToken() {\n        return this.get(REFRESH_TOKEN_STORAGE_KEY);\n    }\n    /**\n     * Set the refresh token in storage.\n     *\n     * @param value Refresh token (null if unknown and user is logged out).\n     */\n    set refreshToken(value) {\n        if (value === null) {\n            this.remove(REFRESH_TOKEN_STORAGE_KEY);\n        }\n        else {\n            this.set(REFRESH_TOKEN_STORAGE_KEY, value);\n        }\n    }\n    /**\n     * Get the user profile from storage.\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n    get profile() {\n        const value = this.get(PROFILE_STORAGE_KEY);\n        if (value) {\n            const profile = new UserProfile();\n            // Patch in the values\n            Object.assign(profile, JSON.parse(value));\n            return profile;\n        }\n    }\n    /**\n     * Set the user profile in storage.\n     *\n     * @param value User profile (undefined if its unknown).\n     */\n    set profile(value) {\n        if (value) {\n            this.set(PROFILE_STORAGE_KEY, JSON.stringify(value));\n        }\n        else {\n            this.remove(PROFILE_STORAGE_KEY);\n        }\n    }\n    /**\n     * Get the type of authentication provider used to authenticate\n     *\n     * @returns User profile (undefined if its unknown).\n     */\n    get providerType() {\n        const value = this.get(PROVIDER_TYPE_STORAGE_KEY);\n        if (value) {\n            return value;\n        }\n    }\n    /**\n     * Set the type of authentication provider used to authenticate\n     *\n     * @param value Type of authentication provider.\n     */\n    set providerType(value) {\n        if (value) {\n            this.set(PROVIDER_TYPE_STORAGE_KEY, value);\n        }\n        else {\n            this.remove(PROVIDER_TYPE_STORAGE_KEY);\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * @param obj The object to remove keys (and undefined values from)\n * @returns A new object without the keys where the value is undefined.\n */\nfunction removeKeysWithUndefinedValues(obj) {\n    return Object.fromEntries(Object.entries(obj).filter((entry) => typeof entry[1] !== \"undefined\"));\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Generate a random sequence of characters.\n *\n * @param length The length of the string.\n * @param alphabet The alphabet of characters to pick from.\n * @returns A string of characters picked randomly from `alphabet`.\n */\nfunction generateRandomString(length, alphabet) {\n    let result = \"\";\n    for (let i = 0; i < length; i++) {\n        result += alphabet[Math.floor(Math.random() * alphabet.length)];\n    }\n    return result;\n}\n/**\n * Encode an object mapping from string to string, into a query string to be appended a URL.\n *\n * @param params The parameters to include in the string.\n * @param prefixed Should the \"?\" prefix be added if values exists?\n * @returns A URL encoded representation of the parameters (omitting a \"?\" prefix).\n */\nfunction encodeQueryString(params, prefixed = true) {\n    // Filter out undefined values\n    const cleanedParams = removeKeysWithUndefinedValues(params);\n    // Determine if a prefixed \"?\" is appropreate\n    const prefix = prefixed && Object.keys(cleanedParams).length > 0 ? \"?\" : \"\";\n    // Transform keys and values to a query string\n    return (prefix +\n        Object.entries(cleanedParams)\n            .map(([k, v]) => `${k}=${encodeURIComponent(v)}`)\n            .join(\"&\"));\n}\n/**\n * Decodes a query string into an object.\n *\n * @param str The query string to decode.\n * @returns The decoded query string.\n */\nfunction decodeQueryString(str) {\n    const cleanStr = str[0] === \"?\" ? str.substr(1) : str;\n    return Object.fromEntries(cleanStr\n        .split(\"&\")\n        .filter((s) => s.length > 0)\n        .map((kvp) => kvp.split(\"=\"))\n        .map(([k, v]) => [k, decodeURIComponent(v)]));\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A list of names that functions cannot have to be callable through the functions proxy.\n */\nconst RESERVED_NAMES = [\n    \"inspect\",\n    \"callFunction\",\n    \"callFunctionStreaming\",\n    // Methods defined on the Object.prototype might be \"typeof probed\" and called by libraries and runtime environments.\n    ...Object.getOwnPropertyNames(Object.prototype),\n];\n/**\n * Remove the key for any fields with undefined values.\n *\n * @param args The arguments to clean.\n * @returns The cleaned arguments.\n */\nfunction cleanArgs(args) {\n    for (const arg of args) {\n        if (typeof arg === \"object\" && arg) {\n            for (const [key, value] of Object.entries(arg)) {\n                if (value === undefined) {\n                    delete arg[key];\n                }\n            }\n        }\n    }\n    return args;\n}\n/**\n * Remove keys for any undefined values and serialize to EJSON.\n *\n * @param args The arguments to clean and serialize.\n * @returns The cleaned and serialized arguments.\n */\nfunction cleanArgsAndSerialize(args) {\n    const cleaned = cleanArgs(args);\n    return cleaned.map((arg) => (typeof arg === \"object\" ? serialize(arg) : arg));\n}\n/**\n * Defines how functions are called.\n */\nclass FunctionsFactory {\n    /**\n     * @param fetcher The underlying fetcher to use when sending requests.\n     * @param config Additional configuration parameters.\n     */\n    constructor(fetcher, config = {}) {\n        this.fetcher = fetcher;\n        this.serviceName = config.serviceName;\n        this.argsTransformation = config.argsTransformation || cleanArgsAndSerialize;\n    }\n    /**\n     * Create a factory of functions, wrapped in a Proxy that returns bound copies of `callFunction` on any property.\n     *\n     * @param fetcher The underlying fetcher to use when requesting.\n     * @param config Additional configuration parameters.\n     * @returns The newly created factory of functions.\n     */\n    static create(fetcher, config = {}) {\n        // Create a proxy, wrapping a simple object returning methods that calls functions\n        // TODO: Lazily fetch available functions and return these from the ownKeys() trap\n        const factory = new FunctionsFactory(fetcher, config);\n        // Wrap the factory in a proxy that calls the internal call method\n        return new Proxy(factory, {\n            get(target, p, receiver) {\n                if (typeof p === \"string\" && RESERVED_NAMES.indexOf(p) === -1) {\n                    return target.callFunction.bind(target, p);\n                }\n                else {\n                    const prop = Reflect.get(target, p, receiver);\n                    return typeof prop === \"function\" ? prop.bind(target) : prop;\n                }\n            },\n        });\n    }\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n    async callFunction(name, ...args) {\n        // See https://github.com/mongodb/stitch-js-sdk/blob/master/packages/core/sdk/src/services/internal/CoreStitchServiceClientImpl.ts\n        const body = {\n            name,\n            arguments: this.argsTransformation ? this.argsTransformation(args) : args,\n        };\n        if (this.serviceName) {\n            body.service = this.serviceName;\n        }\n        const appRoute = this.fetcher.appRoute;\n        return this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.functionsCall().path,\n            body,\n        });\n    }\n    /**\n     * Call a remote function by it's name.\n     *\n     * @param name Name of the remote function.\n     * @param args Arguments to pass to the remote function.\n     * @returns A promise of the value returned when executing the remote function.\n     */\n    callFunctionStreaming(name, ...args) {\n        const body = {\n            name,\n            arguments: this.argsTransformation ? this.argsTransformation(args) : args,\n        };\n        if (this.serviceName) {\n            body.service = this.serviceName;\n        }\n        const appRoute = this.fetcher.appRoute;\n        const qs = encodeQueryString({\n            [\"baas_request\"]: gBase64.encode(JSON.stringify(body)),\n        });\n        return this.fetcher.fetchStream({\n            method: \"GET\",\n            path: appRoute.functionsCall().path + qs,\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2021 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * Check whether the user's app is running in \"development mode\" (e.g. `npm run dev`\n * for a React app, or `NODE_ENV=development` for a Node app). Each platform's entry\n * point should define the value of this using `setIsDevelopmentMode`.\n * The default behaviour is to always return `false`.\n *\n * @returns true if the user's app is running in development mode, false otherwise\n */\nlet isDevelopmentMode = false;\n/**\n * Set the value of `isDevelopmentMode`. This allows each entry point (node vs DOM)\n * to use its own method for determining whether we are in development mode.\n *\n * @param state A boolean indicating whether the user's app is running in\n * development mode or not.\n */\nconst setIsDevelopmentMode = (state) => {\n    isDevelopmentMode = state;\n};\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Display a deprecation warning for features being removed in the next major version\n * to users in development mode (as best as we can detect this, see `isDevelopmentMode`)\n *\n * @param deprecatedItem The method signature or name of the deprecated item\n * @param suggestedReplacement The method signature or name of the suggested replacement\n */\nconst deprecationWarning = (deprecatedItem, suggestedReplacement) => {\n    if (!isDevelopmentMode)\n        return;\n    console.warn(`Deprecation warning from Realm: ${deprecatedItem} is deprecated and will be removed in a future major release. Consider switching to ${suggestedReplacement}.`);\n};\n/**\n * Helper function for migrating from positional arguments to a single dictionary argument.\n * Check the arguments passed to a function, if the first argument is not an object (i.e. it\n * is presumed to be a deprecated positional-style call), shows a deprecation warning and\n * converts the positional arguments into an object matching the expected \"new\" shape.\n *\n * @param args Array of arguments passed to the function (captured with `...args`).\n * @param methodName The name of the method, used to show the deprecation warning.\n * @param argNames The list of positional argument names, used to covert them into\n * an object if a deprecated call is made and to show the deprecation warning.\n * @param hasRestArgs Optional flag indicating that the function's final argument is\n * `...args` (to capture any extra arguments), in which case we capture them and return\n * as the second element of the return array.\n *\n * @returns An object containing:\n *\n * argsObject: a dictionary of function arguments, either passed through from args[0] if\n * args[0] is an object, or created from `args` and `argNames` if the args are a\n * deprecated positional argument call.\n *\n * restArgs: an array of the \"...args\" passed to the function if `hasRestArgs` is true;\n * otherwise it is `undefined`.\n */\n// Allow use of `object` type\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst handleDeprecatedPositionalArgs = (args, methodName, argNames, hasRestArgs) => {\n    if (typeof args[0] !== \"object\") {\n        const restArgsText = hasRestArgs ? \", ...args\" : \"\";\n        deprecationWarning(`${methodName}(${argNames.join(\", \")}${restArgsText})`, `${methodName}({ ${argNames.join(\", \")} }${restArgsText})`);\n        // Convert the array of arguments into a dictionary keyed by the relevant argName\n        const argsObject = argNames.reduce((prev, argName, index) => {\n            return { ...prev, [argName]: args[index] };\n        }, {});\n        const restArgs = hasRestArgs ? args.slice(argNames.length) : undefined;\n        return { argsObject, restArgs };\n    }\n    return { argsObject: args[0], restArgs: hasRestArgs ? args.slice(1) : undefined };\n};\n\n////////////////////////////////////////////////////////////////////////////\n// React/React Native set a global __DEV__ variable when running in dev mode\nsetIsDevelopmentMode(typeof __DEV__ !== \"undefined\" && __DEV__);\n\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass EmailPasswordAuth {\n    /**\n     * Construct an interface to the email / password authentication provider.\n     *\n     * @param fetcher The underlying fetcher used to request the services.\n     * @param providerName Optional custom name of the authentication provider.\n     */\n    constructor(fetcher, providerName = \"local-userpass\") {\n        this.fetcher = fetcher;\n        this.providerName = providerName;\n    }\n    async registerUser(...args) {\n        const { argsObject: userDetails } = handleDeprecatedPositionalArgs(args, \"registerUser\", [\"email\", \"password\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).register().path,\n            body: userDetails,\n        });\n    }\n    async confirmUser(...args) {\n        const { argsObject: tokenDetails } = handleDeprecatedPositionalArgs(args, \"confirmUser\", [\"token\", \"tokenId\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).confirm().path,\n            body: tokenDetails,\n        });\n    }\n    async resendConfirmationEmail(...args) {\n        const { argsObject: emailDetails } = handleDeprecatedPositionalArgs(args, \"resendConfirmationEmail\", [\"email\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).confirmSend().path,\n            body: emailDetails,\n        });\n    }\n    async retryCustomConfirmation(...args) {\n        const { argsObject: emailDetails } = handleDeprecatedPositionalArgs(args, \"retryCustomConfirmation\", [\"email\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).confirmCall().path,\n            body: emailDetails,\n        });\n    }\n    async resetPassword(...args) {\n        const { argsObject: resetDetails } = handleDeprecatedPositionalArgs(args, \"resetPassword\", [\"token\", \"tokenId\", \"password\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).reset().path,\n            body: resetDetails,\n        });\n    }\n    async sendResetPasswordEmail(...args) {\n        const { argsObject: emailDetails } = handleDeprecatedPositionalArgs(args, \"sendResetPasswordEmail\", [\"email\"]);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).resetSend().path,\n            body: emailDetails,\n        });\n    }\n    async callResetPasswordFunction(...args) {\n        const { argsObject: resetDetails, restArgs, } = handleDeprecatedPositionalArgs(args, \"callResetPasswordFunction\", [\"email\", \"password\"], true);\n        const appRoute = this.fetcher.appRoute;\n        await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: appRoute.emailPasswordAuth(this.providerName).resetCall().path,\n            body: { ...resetDetails, arguments: restArgs },\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * @returns The base api route.\n */\nfunction api() {\n    return {\n        path: \"/api/client/v2.0\",\n        /**\n         * @param appId The id of the app.\n         * @returns The URL of the app endpoint.\n         */\n        app(appId) {\n            return {\n                path: this.path + `/app/${appId}`,\n                /**\n                 * @returns The URL of the app location endpoint.\n                 */\n                location() {\n                    return {\n                        path: this.path + \"/location\",\n                    };\n                },\n                /**\n                 * @param providerName The name of the provider.\n                 * @returns The app url concatinated with the /auth/providers/{providerName}\n                 */\n                authProvider(providerName) {\n                    return {\n                        path: this.path + `/auth/providers/${providerName}`,\n                        /**\n                         * @returns Get the URL of an authentication provider.\n                         */\n                        login() {\n                            return { path: this.path + \"/login\" };\n                        },\n                    };\n                },\n                /**\n                 * @param providerName The name of the provider.\n                 * @returns The app url concatinated with the /auth/providers/{providerName}\n                 */\n                emailPasswordAuth(providerName) {\n                    const authProviderRoutes = this.authProvider(providerName);\n                    return {\n                        ...authProviderRoutes,\n                        register() {\n                            return { path: this.path + \"/register\" };\n                        },\n                        confirm() {\n                            return { path: this.path + \"/confirm\" };\n                        },\n                        confirmSend() {\n                            return { path: this.path + \"/confirm/send\" };\n                        },\n                        confirmCall() {\n                            return { path: this.path + \"/confirm/call\" };\n                        },\n                        reset() {\n                            return { path: this.path + \"/reset\" };\n                        },\n                        resetSend() {\n                            return { path: this.path + \"/reset/send\" };\n                        },\n                        resetCall() {\n                            return { path: this.path + \"/reset/call\" };\n                        },\n                    };\n                },\n                functionsCall() {\n                    return {\n                        path: this.path + \"/functions/call\",\n                    };\n                },\n            };\n        },\n        auth() {\n            return {\n                path: this.path + \"/auth\",\n                apiKeys() {\n                    return {\n                        path: this.path + \"/api_keys\",\n                        key(id) {\n                            return {\n                                path: this.path + `/${id}`,\n                                enable() {\n                                    return { path: this.path + \"/enable\" };\n                                },\n                                disable() {\n                                    return { path: this.path + \"/disable\" };\n                                },\n                            };\n                        },\n                    };\n                },\n                profile() {\n                    return { path: this.path + \"/profile\" };\n                },\n                session() {\n                    return { path: this.path + \"/session\" };\n                },\n                delete() {\n                    return { path: this.path + \"/delete\" };\n                },\n            };\n        },\n    };\n}\nvar routes = { api };\n\n////////////////////////////////////////////////////////////////////////////\n/** @inheritdoc */\nclass ApiKeyAuth {\n    /**\n     * Construct an interface to the API-key authentication provider.\n     *\n     * @param fetcher The fetcher used to send requests to services.\n     */\n    constructor(fetcher) {\n        this.fetcher = fetcher;\n    }\n    /** @inheritdoc */\n    create(name) {\n        return this.fetcher.fetchJSON({\n            method: \"POST\",\n            body: { name },\n            path: routes.api().auth().apiKeys().path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    fetch(keyId) {\n        return this.fetcher.fetchJSON({\n            method: \"GET\",\n            path: routes.api().auth().apiKeys().key(keyId).path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    fetchAll() {\n        return this.fetcher.fetchJSON({\n            method: \"GET\",\n            tokenType: \"refresh\",\n            path: routes.api().auth().apiKeys().path,\n        });\n    }\n    /** @inheritdoc */\n    async delete(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"DELETE\",\n            path: routes.api().auth().apiKeys().key(keyId).path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    async enable(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"PUT\",\n            path: routes.api().auth().apiKeys().key(keyId).enable().path,\n            tokenType: \"refresh\",\n        });\n    }\n    /** @inheritdoc */\n    async disable(keyId) {\n        await this.fetcher.fetchJSON({\n            method: \"PUT\",\n            path: routes.api().auth().apiKeys().key(keyId).disable().path,\n            tokenType: \"refresh\",\n        });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nlet environment = null;\n/**\n * Set the environment of execution.\n * Note: This should be called as the first thing before executing any code which calls getEnvironment()\n *\n * @param e An object containing environment specific implementations.\n */\nfunction setEnvironment(e) {\n    environment = e;\n}\n/**\n * Get the environment of execution.\n *\n * @returns An object containing environment specific implementations.\n */\nfunction getEnvironment() {\n    if (environment) {\n        return environment;\n    }\n    else {\n        throw new Error(\"Cannot get environment before it's set\");\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n/**\n * An error occured during the parsing of a watch stream.\n */\nclass WatchError extends Error {\n    constructor({ message, code }) {\n        super(message);\n        /**\n         * The name of this type of error\n         */\n        this.name = \"WatchError\";\n        this.code = code;\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n// NOTE: this is a fully processed event, not a single \"data: foo\" line!\n/**\n * The state of a WatchStream.\n */\nvar WatchStreamState;\n(function (WatchStreamState) {\n    /**\n     * Need to call one of the feed functions.\n     */\n    WatchStreamState[\"NEED_DATA\"] = \"NEED_DATA\";\n    /**\n     * Call nextEvent() to consume an event.\n     */\n    WatchStreamState[\"HAVE_EVENT\"] = \"HAVE_EVENT\";\n    /**\n     * Call error().\n     */\n    WatchStreamState[\"HAVE_ERROR\"] = \"HAVE_ERROR\";\n})(WatchStreamState || (WatchStreamState = {}));\n/**\n * Represents a stream of events\n */\nclass WatchStream {\n    constructor() {\n        this._state = WatchStreamState.NEED_DATA;\n        this._error = null;\n        // Used by feedBuffer to construct lines\n        this._textDecoder = new (getEnvironment().TextDecoder)();\n        this._buffer = \"\";\n        this._bufferOffset = 0;\n        // Used by feedLine for building the next SSE\n        this._eventType = \"\";\n        this._dataBuffer = \"\";\n    }\n    // Call these when you have data, in whatever shape is easiest for your SDK to get.\n    // Pick one, mixing and matching on a single instance isn't supported.\n    // These can only be called in NEED_DATA state, which is the initial state.\n    feedBuffer(buffer) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        this._buffer += this._textDecoder.decode(buffer, { stream: true });\n        this.advanceBufferState();\n    }\n    feedLine(line) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        // This is an implementation of the algorithm described at\n        // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation.\n        // Currently the server does not use id or retry lines, so that processing isn't implemented.\n        // ignore trailing LF if not removed by SDK.\n        if (line.endsWith(\"\\n\"))\n            line = line.substr(0, line.length - 1);\n        // ignore trailing CR from CRLF\n        if (line.endsWith(\"\\r\"))\n            line = line.substr(0, line.length - 1);\n        if (line.length === 0) {\n            // This is the \"dispatch the event\" portion of the algorithm.\n            if (this._dataBuffer.length === 0) {\n                this._eventType = \"\";\n                return;\n            }\n            if (this._dataBuffer.endsWith(\"\\n\"))\n                this._dataBuffer = this._dataBuffer.substr(0, this._dataBuffer.length - 1);\n            this.feedSse({\n                data: this._dataBuffer,\n                eventType: this._eventType,\n            });\n            this._dataBuffer = \"\";\n            this._eventType = \"\";\n        }\n        if (line[0] === \":\")\n            return;\n        const colon = line.indexOf(\":\");\n        const field = line.substr(0, colon);\n        let value = colon === -1 ? \"\" : line.substr(colon + 1);\n        if (value.startsWith(\" \"))\n            value = value.substr(1);\n        if (field === \"event\") {\n            this._eventType = value;\n        }\n        else if (field === \"data\") {\n            this._dataBuffer += value;\n            this._dataBuffer += \"\\n\";\n        }\n        else ;\n    }\n    feedSse(sse) {\n        this.assertState(WatchStreamState.NEED_DATA);\n        const firstPercentIndex = sse.data.indexOf(\"%\");\n        if (firstPercentIndex !== -1) {\n            // For some reason, the stich server decided to add percent-encoding for '%', '\\n', and '\\r' to its\n            // event-stream replies. But it isn't real urlencoding, since most characters pass through, so we can't use\n            // uri_percent_decode() here.\n            let buffer = \"\";\n            let start = 0;\n            for (let percentIndex = firstPercentIndex; percentIndex !== -1; percentIndex = sse.data.indexOf(\"%\", start)) {\n                buffer += sse.data.substr(start, percentIndex - start);\n                const encoded = sse.data.substr(percentIndex, 3); // may be smaller than 3 if string ends with %\n                if (encoded === \"%25\") {\n                    buffer += \"%\";\n                }\n                else if (encoded === \"%0A\") {\n                    buffer += \"\\x0A\"; // '\\n'\n                }\n                else if (encoded === \"%0D\") {\n                    buffer += \"\\x0D\"; // '\\r'\n                }\n                else {\n                    buffer += encoded; // propagate as-is\n                }\n                start = percentIndex + encoded.length;\n            }\n            // Advance the buffer with the last part\n            buffer += sse.data.substr(start);\n            sse.data = buffer;\n        }\n        if (!sse.eventType || sse.eventType === \"message\") {\n            try {\n                const parsed = EJSON.parse(sse.data);\n                if (typeof parsed === \"object\") {\n                    // ???\n                    this._nextEvent = parsed;\n                    this._state = WatchStreamState.HAVE_EVENT;\n                    return;\n                }\n            }\n            catch {\n                // fallthrough to same handling as for non-document value.\n            }\n            this._state = WatchStreamState.HAVE_ERROR;\n            this._error = new WatchError({\n                message: \"server returned malformed event: \" + sse.data,\n                code: \"bad bson parse\",\n            });\n        }\n        else if (sse.eventType === \"error\") {\n            this._state = WatchStreamState.HAVE_ERROR;\n            // default error message if we have issues parsing the reply.\n            this._error = new WatchError({\n                message: sse.data,\n                code: \"unknown\",\n            });\n            try {\n                const { error_code: errorCode, error } = EJSON.parse(sse.data);\n                if (typeof errorCode !== \"string\")\n                    return;\n                if (typeof error !== \"string\")\n                    return;\n                // XXX in realm-js, object-store will error if the error_code is not one of the known\n                // error code enum values.\n                this._error = new WatchError({\n                    message: error,\n                    code: errorCode,\n                });\n            }\n            catch {\n                return; // Use the default state.\n            }\n        }\n        else ;\n    }\n    get state() {\n        return this._state;\n    }\n    // Consumes the returned event. If you used feedBuffer(), there may be another event or error after this one,\n    // so you need to call state() again to see what to do next.\n    nextEvent() {\n        this.assertState(WatchStreamState.HAVE_EVENT);\n        // We can use \"as ChangeEvent<T>\" since we just asserted the state.\n        const out = this._nextEvent;\n        this._state = WatchStreamState.NEED_DATA;\n        this.advanceBufferState();\n        return out;\n    }\n    // Once this enters the error state, it stays that way. You should not feed any more data.\n    get error() {\n        return this._error;\n    }\n    ////////////////////////////////////////////\n    advanceBufferState() {\n        this.assertState(WatchStreamState.NEED_DATA);\n        while (this.state === WatchStreamState.NEED_DATA) {\n            if (this._bufferOffset === this._buffer.length) {\n                this._buffer = \"\";\n                this._bufferOffset = 0;\n                return;\n            }\n            // NOTE not supporting CR-only newlines, just LF and CRLF.\n            const nextNewlineIndex = this._buffer.indexOf(\"\\n\", this._bufferOffset);\n            if (nextNewlineIndex === -1) {\n                // We have a partial line.\n                if (this._bufferOffset !== 0) {\n                    // Slide the partial line down to the front of the buffer.\n                    this._buffer = this._buffer.substr(this._bufferOffset, this._buffer.length - this._bufferOffset);\n                    this._bufferOffset = 0;\n                }\n                return;\n            }\n            this.feedLine(this._buffer.substr(this._bufferOffset, nextNewlineIndex - this._bufferOffset));\n            this._bufferOffset = nextNewlineIndex + 1; // Advance past this line, including its newline.\n        }\n    }\n    assertState(state) {\n        if (this._state !== state) {\n            throw Error(`Expected WatchStream to be in state ${state}, but in state ${this._state}`);\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * A remote collection of documents.\n */\nclass MongoDBCollection {\n    /**\n     * Construct a remote collection of documents.\n     *\n     * @param fetcher The fetcher to use when requesting the service.\n     * @param serviceName The name of the remote service.\n     * @param databaseName The name of the database.\n     * @param collectionName The name of the remote collection.\n     */\n    constructor(fetcher, serviceName, databaseName, collectionName) {\n        this.functions = FunctionsFactory.create(fetcher, {\n            serviceName,\n        });\n        this.databaseName = databaseName;\n        this.collectionName = collectionName;\n        this.serviceName = serviceName;\n        this.fetcher = fetcher;\n    }\n    /** @inheritdoc */\n    find(filter = {}, options = {}) {\n        return this.functions.find({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            project: options.projection,\n            sort: options.sort,\n            limit: options.limit,\n        });\n    }\n    /** @inheritdoc */\n    findOne(filter = {}, options = {}) {\n        return this.functions.findOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            project: options.projection,\n            sort: options.sort,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndUpdate(filter = {}, update, options = {}) {\n        return this.functions.findOneAndUpdate({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter,\n            update,\n            sort: options.sort,\n            projection: options.projection,\n            upsert: options.upsert,\n            returnNewDocument: options.returnNewDocument,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndReplace(filter = {}, replacement, options = {}) {\n        return this.functions.findOneAndReplace({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter: filter,\n            update: replacement,\n            sort: options.sort,\n            projection: options.projection,\n            upsert: options.upsert,\n            returnNewDocument: options.returnNewDocument,\n        });\n    }\n    /** @inheritdoc */\n    findOneAndDelete(filter = {}, options = {}) {\n        return this.functions.findOneAndReplace({\n            database: this.databaseName,\n            collection: this.collectionName,\n            filter,\n            sort: options.sort,\n            projection: options.projection,\n        });\n    }\n    /** @inheritdoc */\n    aggregate(pipeline) {\n        return this.functions.aggregate({\n            database: this.databaseName,\n            collection: this.collectionName,\n            pipeline,\n        });\n    }\n    /** @inheritdoc */\n    count(filter = {}, options = {}) {\n        return this.functions.count({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            limit: options.limit,\n        });\n    }\n    /** @inheritdoc */\n    insertOne(document) {\n        return this.functions.insertOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            document,\n        });\n    }\n    /** @inheritdoc */\n    insertMany(documents) {\n        return this.functions.insertMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            documents,\n        });\n    }\n    /** @inheritdoc */\n    deleteOne(filter = {}) {\n        return this.functions.deleteOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n        });\n    }\n    /** @inheritdoc */\n    deleteMany(filter = {}) {\n        return this.functions.deleteMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n        });\n    }\n    /** @inheritdoc */\n    updateOne(filter, update, options = {}) {\n        return this.functions.updateOne({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            update,\n            upsert: options.upsert,\n            arrayFilters: options.arrayFilters,\n        });\n    }\n    /** @inheritdoc */\n    updateMany(filter, update, options = {}) {\n        return this.functions.updateMany({\n            database: this.databaseName,\n            collection: this.collectionName,\n            query: filter,\n            update,\n            upsert: options.upsert,\n            arrayFilters: options.arrayFilters,\n        });\n    }\n    async *watch({ ids, filter, } = {}) {\n        const iterator = await this.functions.callFunctionStreaming(\"watch\", {\n            database: this.databaseName,\n            collection: this.collectionName,\n            ids,\n            filter,\n        });\n        const watchStream = new WatchStream();\n        for await (const chunk of iterator) {\n            if (!chunk)\n                continue;\n            watchStream.feedBuffer(chunk);\n            while (watchStream.state == WatchStreamState.HAVE_EVENT) {\n                yield watchStream.nextEvent();\n            }\n            if (watchStream.state == WatchStreamState.HAVE_ERROR)\n                // XXX this is just throwing an error like {error_code: \"BadRequest, error: \"message\"},\n                // which matches realm-js, but is different from how errors are handled in realm-web\n                throw watchStream.error;\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Creates an Remote MongoDB Collection.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName A service name.\n * @param databaseName A database name.\n * @param collectionName A collection name.\n * @returns The collection.\n */\nfunction createCollection(fetcher, serviceName, databaseName, collectionName) {\n    return new MongoDBCollection(fetcher, serviceName, databaseName, collectionName);\n}\n/**\n * Creates a Remote MongoDB Database.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher\n * @param serviceName A service name\n * @param databaseName A database name\n * @returns The database.\n */\nfunction createDatabase(fetcher, serviceName, databaseName) {\n    return {\n        collection: createCollection.bind(null, fetcher, serviceName, databaseName),\n    };\n}\n/**\n * Creates a Remote MongoDB Service.\n * Note: This method exists to enable function binding.\n *\n * @param fetcher The underlying fetcher.\n * @param serviceName An optional service name.\n * @returns The service.\n */\nfunction createService(fetcher, serviceName = \"mongo-db\") {\n    return { db: createDatabase.bind(null, fetcher, serviceName) };\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst DEFAULT_DEVICE_ID = \"000000000000000000000000\";\n/** The state of a user within the app */\nvar UserState;\n(function (UserState) {\n    /** Active, with both access and refresh tokens */\n    UserState[\"Active\"] = \"active\";\n    /** Logged out, but there might still be data persisted about the user, in the browser. */\n    UserState[\"LoggedOut\"] = \"logged-out\";\n    /** Logged out and all data about the user has been removed. */\n    UserState[\"Removed\"] = \"removed\";\n})(UserState || (UserState = {}));\n/** The type of a user. */\nvar UserType$1;\n(function (UserType) {\n    /** Created by the user itself. */\n    UserType[\"Normal\"] = \"normal\";\n    /** Created by an administrator of the app. */\n    UserType[\"Server\"] = \"server\";\n})(UserType$1 || (UserType$1 = {}));\n/**\n * Representation of an authenticated user of an app.\n */\nclass User {\n    /**\n     * @param parameters Parameters of the user.\n     */\n    constructor(parameters) {\n        this.app = parameters.app;\n        this.id = parameters.id;\n        this.storage = new UserStorage(this.app.storage, this.id);\n        if (\"accessToken\" in parameters && \"refreshToken\" in parameters && \"providerType\" in parameters) {\n            this._accessToken = parameters.accessToken;\n            this._refreshToken = parameters.refreshToken;\n            this.providerType = parameters.providerType;\n            // Save the parameters to storage, for future instances to be hydrated from\n            this.storage.accessToken = parameters.accessToken;\n            this.storage.refreshToken = parameters.refreshToken;\n            this.storage.providerType = parameters.providerType;\n        }\n        else {\n            // Hydrate the rest of the parameters from storage\n            this._accessToken = this.storage.accessToken;\n            this._refreshToken = this.storage.refreshToken;\n            const providerType = this.storage.providerType;\n            this._profile = this.storage.profile;\n            if (providerType) {\n                this.providerType = providerType;\n            }\n            else {\n                throw new Error(\"Storage is missing a provider type\");\n            }\n        }\n        this.fetcher = this.app.fetcher.clone({\n            userContext: { currentUser: this },\n        });\n        this.apiKeys = new ApiKeyAuth(this.fetcher);\n        this.functions = FunctionsFactory.create(this.fetcher);\n    }\n    /**\n     * @returns The access token used to authenticate the user towards MongoDB Realm.\n     */\n    get accessToken() {\n        return this._accessToken;\n    }\n    /**\n     * @param token The new access token.\n     */\n    set accessToken(token) {\n        this._accessToken = token;\n        this.storage.accessToken = token;\n    }\n    /**\n     * @returns The refresh token used to issue new access tokens.\n     */\n    get refreshToken() {\n        return this._refreshToken;\n    }\n    /**\n     * @param token The new refresh token.\n     */\n    set refreshToken(token) {\n        this._refreshToken = token;\n        this.storage.refreshToken = token;\n    }\n    /**\n     * @returns The current state of the user.\n     */\n    get state() {\n        if (this.id in this.app.allUsers) {\n            return this.refreshToken === null ? UserState.LoggedOut : UserState.Active;\n        }\n        else {\n            return UserState.Removed;\n        }\n    }\n    /**\n     * @returns The logged in state of the user.\n     */\n    get isLoggedIn() {\n        return this.state === UserState.Active;\n    }\n    get customData() {\n        if (this.accessToken) {\n            const decodedToken = this.decodeAccessToken();\n            return decodedToken.userData;\n        }\n        else {\n            throw new Error(\"Cannot read custom data without an access token\");\n        }\n    }\n    /**\n     * @returns Profile containing detailed information about the user.\n     */\n    get profile() {\n        if (this._profile) {\n            return this._profile.data;\n        }\n        else {\n            throw new Error(\"A profile was never fetched for this user\");\n        }\n    }\n    get identities() {\n        if (this._profile) {\n            return this._profile.identities;\n        }\n        else {\n            throw new Error(\"A profile was never fetched for this user\");\n        }\n    }\n    get deviceId() {\n        if (this.accessToken) {\n            const payload = this.accessToken.split(\".\")[1];\n            if (payload) {\n                const parsedPayload = JSON.parse(gBase64.decode(payload));\n                const deviceId = parsedPayload[\"baas_device_id\"];\n                if (typeof deviceId === \"string\" && deviceId !== DEFAULT_DEVICE_ID) {\n                    return deviceId;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Refresh the users profile data.\n     */\n    async refreshProfile() {\n        // Fetch the latest profile\n        const response = await this.fetcher.fetchJSON({\n            method: \"GET\",\n            path: routes.api().auth().profile().path,\n        });\n        // Create a profile instance\n        this._profile = new UserProfile(response);\n        // Store this for later hydration\n        this.storage.profile = this._profile;\n    }\n    /**\n     * Log out the user, invalidating the session (and its refresh token).\n     */\n    async logOut() {\n        // Invalidate the refresh token\n        try {\n            if (this._refreshToken !== null) {\n                await this.fetcher.fetchJSON({\n                    method: \"DELETE\",\n                    path: routes.api().auth().session().path,\n                    tokenType: \"refresh\",\n                });\n            }\n        }\n        catch (err) {\n            // Ignore failing to delete a missing refresh token\n            // It might have expired or it might be gone due to the user being deleted\n            if (!(err instanceof Error) || !err.message.includes(\"failed to find refresh token\")) {\n                throw err;\n            }\n        }\n        finally {\n            // Forget the access and refresh token\n            this.accessToken = null;\n            this.refreshToken = null;\n        }\n    }\n    /** @inheritdoc */\n    async linkCredentials(credentials) {\n        const response = await this.app.authenticator.authenticate(credentials, this);\n        // Sanity check the response\n        if (this.id !== response.userId) {\n            const details = `got user id ${response.userId} expected ${this.id}`;\n            throw new Error(`Link response ment for another user (${details})`);\n        }\n        // Update the access token\n        this.accessToken = response.accessToken;\n        // Refresh the profile to include the new identity\n        await this.refreshProfile();\n    }\n    /**\n     * Request a new access token, using the refresh token.\n     */\n    async refreshAccessToken() {\n        const response = await this.fetcher.fetchJSON({\n            method: \"POST\",\n            path: routes.api().auth().session().path,\n            tokenType: \"refresh\",\n        });\n        const { access_token: accessToken } = response;\n        if (typeof accessToken === \"string\") {\n            this.accessToken = accessToken;\n        }\n        else {\n            throw new Error(\"Expected an 'access_token' in the response\");\n        }\n    }\n    /** @inheritdoc */\n    async refreshCustomData() {\n        await this.refreshAccessToken();\n        return this.customData;\n    }\n    /** @inheritdoc */\n    callFunction(name, ...args) {\n        return this.functions.callFunction(name, ...args);\n    }\n    /**\n     * @returns A plain ol' JavaScript object representation of the user.\n     */\n    toJSON() {\n        return {\n            id: this.id,\n            accessToken: this.accessToken,\n            refreshToken: this.refreshToken,\n            profile: this._profile,\n            state: this.state,\n            customData: this.customData,\n        };\n    }\n    /** @inheritdoc */\n    push() {\n        throw new Error(\"Not yet implemented\");\n    }\n    /** @inheritdoc */\n    mongoClient(serviceName) {\n        return createService(this.fetcher, serviceName);\n    }\n    decodeAccessToken() {\n        if (this.accessToken) {\n            // Decode and spread the token\n            const parts = this.accessToken.split(\".\");\n            if (parts.length !== 3) {\n                throw new Error(\"Expected an access token with three parts\");\n            }\n            // Decode the payload\n            const encodedPayload = parts[1];\n            const decodedPayload = gBase64.decode(encodedPayload);\n            const parsedPayload = JSON.parse(decodedPayload);\n            const { exp: expires, iat: issuedAt, sub: subject, user_data: userData = {} } = parsedPayload;\n            // Validate the types\n            if (typeof expires !== \"number\") {\n                throw new Error(\"Failed to decode access token 'exp'\");\n            }\n            else if (typeof issuedAt !== \"number\") {\n                throw new Error(\"Failed to decode access token 'iat'\");\n            }\n            return { expires, issuedAt, subject, userData };\n        }\n        else {\n            throw new Error(\"Missing an access token\");\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Ensure the static interface of the Credentials class implements the static interface of Realm.Credentials\n// See https://stackoverflow.com/a/43484801\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nclass Credentials {\n    /**\n     * Constructs an instance of credentials.\n     *\n     * @param providerName The name of the authentication provider used when authenticating.\n     * @param providerType The type of the authentication provider used when authenticating.\n     * @param payload The data being sent to the service when authenticating.\n     */\n    constructor(providerName, providerType, payload) {\n        this.providerName = providerName;\n        this.providerType = providerType;\n        this.payload = payload;\n    }\n    /**\n     * Creates credentials that logs in using the [Anonymous Provider](https://docs.mongodb.com/realm/authentication/anonymous/).\n     *\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static anonymous() {\n        return new Credentials(\"anon-user\", \"anon-user\", {});\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static userApiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @deprecated Use `Credentials.apiKey`.\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static serverApiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [API Key Provider](https://docs.mongodb.com/realm/authentication/api-key/).\n     *\n     * @param key The secret content of the API key.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static apiKey(key) {\n        return new Credentials(\"api-key\", \"api-key\", { key });\n    }\n    /**\n     * Creates credentials that logs in using the [Email/Password Provider](https://docs.mongodb.com/realm/authentication/email-password/).\n     * Note: This was formerly known as the \"Username/Password\" provider.\n     *\n     * @param email The end-users email address.\n     * @param password The end-users password.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static emailPassword(email, password) {\n        return new Credentials(\"local-userpass\", \"local-userpass\", {\n            username: email,\n            password,\n        });\n    }\n    /**\n     * Creates credentials that logs in using the [Custom Function Provider](https://docs.mongodb.com/realm/authentication/custom-function/).\n     *\n     * @param payload The custom payload as expected by the server.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static function(payload) {\n        return new Credentials(\"custom-function\", \"custom-function\", payload);\n    }\n    /**\n     * Creates credentials that logs in using the [Custom JWT Provider](https://docs.mongodb.com/realm/authentication/custom-jwt/).\n     *\n     * @param token The JSON Web Token (JWT).\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static jwt(token) {\n        return new Credentials(\"custom-token\", \"custom-token\", {\n            token,\n        });\n    }\n    /**\n     * Creates credentials that logs in using the [Google Provider](https://docs.mongodb.com/realm/authentication/google/).\n     *\n     * @param payload The URL that users should be redirected to, the auth code or id token from Google.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static google(payload) {\n        return new Credentials(\"oauth2-google\", \"oauth2-google\", Credentials.derivePayload(payload));\n    }\n    /**\n     * @param payload The payload string.\n     * @returns A payload object based on the string.\n     */\n    static derivePayload(payload) {\n        if (typeof payload === \"string\") {\n            if (payload.includes(\"://\")) {\n                return this.derivePayload({ redirectUrl: payload });\n            }\n            else if (payload.startsWith(\"4/\")) {\n                return this.derivePayload({ authCode: payload });\n            }\n            else if (payload.startsWith(\"ey\")) {\n                return this.derivePayload({ idToken: payload });\n            }\n            else {\n                throw new Error(`Unexpected payload: ${payload}`);\n            }\n        }\n        else if (Object.keys(payload).length === 1) {\n            if (\"authCode\" in payload || \"redirectUrl\" in payload) {\n                return payload;\n            }\n            else if (\"idToken\" in payload) {\n                return { id_token: payload.idToken };\n            }\n            else {\n                throw new Error(\"Unexpected payload: \" + JSON.stringify(payload));\n            }\n        }\n        else {\n            throw new Error(\"Expected only one property in payload, got \" + JSON.stringify(payload));\n        }\n    }\n    /**\n     * Creates credentials that logs in using the [Facebook Provider](https://docs.mongodb.com/realm/authentication/facebook/).\n     *\n     * @param redirectUrlOrAccessToken The URL that users should be redirected to or the auth code returned from Facebook.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static facebook(redirectUrlOrAccessToken) {\n        return new Credentials(\"oauth2-facebook\", \"oauth2-facebook\", redirectUrlOrAccessToken.includes(\"://\")\n            ? { redirectUrl: redirectUrlOrAccessToken }\n            : { accessToken: redirectUrlOrAccessToken });\n    }\n    /**\n     * Creates credentials that logs in using the [Apple ID Provider](https://docs.mongodb.com/realm/authentication/apple/).\n     *\n     * @param redirectUrlOrIdToken The URL that users should be redirected to or the id_token returned from Apple.\n     * @returns The credentials instance, which can be passed to `app.logIn`.\n     */\n    static apple(redirectUrlOrIdToken) {\n        return new Credentials(\"oauth2-apple\", \"oauth2-apple\", redirectUrlOrIdToken.includes(\"://\") ? { redirectUrl: redirectUrlOrIdToken } : { id_token: redirectUrlOrIdToken });\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst USER_IDS_STORAGE_KEY = \"userIds\";\nconst DEVICE_ID_STORAGE_KEY = \"deviceId\";\n/**\n * Storage specific to the app.\n */\nclass AppStorage extends PrefixedStorage {\n    /**\n     * @param storage The underlying storage to wrap.\n     * @param appId The id of the app.\n     */\n    constructor(storage, appId) {\n        super(storage, `app(${appId})`);\n    }\n    /**\n     * Reads out the list of user ids from storage.\n     *\n     * @returns A list of user ids.\n     */\n    getUserIds() {\n        const userIdsString = this.get(USER_IDS_STORAGE_KEY);\n        const userIds = userIdsString ? JSON.parse(userIdsString) : [];\n        if (Array.isArray(userIds)) {\n            // Remove any duplicates that might have been added\n            // The Set preserves insertion order\n            return [...new Set(userIds)];\n        }\n        else {\n            throw new Error(\"Expected the user ids to be an array\");\n        }\n    }\n    /**\n     * Sets the list of ids in storage.\n     * Optionally merging with existing ids stored in the storage, by prepending these while voiding duplicates.\n     *\n     * @param userIds The list of ids to store.\n     * @param mergeWithExisting Prepend existing ids to avoid data-races with other apps using this storage.\n     */\n    setUserIds(userIds, mergeWithExisting) {\n        if (mergeWithExisting) {\n            // Add any existing user id to the end of this list, avoiding duplicates\n            const existingIds = this.getUserIds();\n            for (const id of existingIds) {\n                if (userIds.indexOf(id) === -1) {\n                    userIds.push(id);\n                }\n            }\n        }\n        // Store the list of ids\n        this.set(USER_IDS_STORAGE_KEY, JSON.stringify(userIds));\n    }\n    /**\n     * Remove an id from the list of ids.\n     *\n     * @param userId The id of a User to be removed.\n     */\n    removeUserId(userId) {\n        const existingIds = this.getUserIds();\n        const userIds = existingIds.filter((id) => id !== userId);\n        // Store the list of ids\n        this.setUserIds(userIds, false);\n    }\n    /**\n     * @returns id of this device (if any exists)\n     */\n    getDeviceId() {\n        return this.get(DEVICE_ID_STORAGE_KEY);\n    }\n    /**\n     * @param deviceId The id of this device, to send on subsequent authentication requests.\n     */\n    setDeviceId(deviceId) {\n        this.set(DEVICE_ID_STORAGE_KEY, deviceId);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\nconst LOWERCASE_LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\nconst CLOSE_CHECK_INTERVAL = 100; // 10 times per second\nconst REDIRECT_HASH_TO_RESULT = {\n    _stitch_client_app_id: \"appId\",\n    _baas_client_app_id: \"appId\",\n    _stitch_ua: \"userAuth\",\n    _baas_ua: \"userAuth\",\n    _stitch_link: \"link\",\n    _baas_link: \"link\",\n    _stitch_error: \"error\",\n    _baas_error: \"error\",\n    _stitch_state: \"state\",\n    _baas_state: \"state\",\n};\n/**\n * A collection of methods helping implement the OAuth2 flow.\n */\nclass OAuth2Helper {\n    /**\n     * @param storage The underlying storage to use when storing and retriving secrets.\n     * @param openWindow An optional function called when a browser window needs to open.\n     */\n    constructor(storage, openWindow = getEnvironment().openWindow) {\n        this.storage = storage.prefix(\"oauth2\");\n        this.openWindow = openWindow;\n    }\n    /**\n     * Parses the query string from the final step of the OAuth flow.\n     *\n     * @param queryString The query string passed through in location.hash.\n     * @returns The result of the OAuth flow.\n     */\n    static parseRedirectLocation(queryString) {\n        const params = decodeQueryString(queryString);\n        const result = {};\n        for (const [p, r] of Object.entries(REDIRECT_HASH_TO_RESULT)) {\n            const value = params[p];\n            if (value) {\n                result[r] = value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Handle the redirect querystring by parsing it and storing it for others to consume.\n     *\n     * @param queryString The query string containing the encoded result from the OAuth provider.\n     * @param storage The underlying storage used to persist the result.\n     */\n    static handleRedirect(queryString, storage = getEnvironment().defaultStorage) {\n        const result = OAuth2Helper.parseRedirectLocation(queryString);\n        const { state, error } = result;\n        if (typeof state === \"string\") {\n            const oauth2Storage = storage.prefix(\"oauth2\");\n            const stateStorage = OAuth2Helper.getStateStorage(oauth2Storage, state);\n            stateStorage.set(\"result\", JSON.stringify(result));\n        }\n        else if (error) {\n            throw new Error(`Failed to handle OAuth 2.0 redirect: ${error}`);\n        }\n        else {\n            throw new Error(\"Failed to handle OAuth 2.0 redirect.\");\n        }\n    }\n    /**\n     * Decodes the authInfo string into its seperate parts.\n     *\n     * @param authInfo An authInfo string returned from the server.\n     * @returns An object containing the separate parts of the authInfo string.\n     */\n    static decodeAuthInfo(authInfo) {\n        const parts = (authInfo || \"\").split(\"$\");\n        if (parts.length === 4) {\n            const [accessToken, refreshToken, userId, deviceId] = parts;\n            return { accessToken, refreshToken, userId, deviceId };\n        }\n        else {\n            throw new Error(\"Failed to decode 'authInfo' into ids and tokens\");\n        }\n    }\n    /**\n     * Get the storage key associated of an secret associated with a state.\n     *\n     * @param storage The root storage used to derive a \"state namespaced\" storage.\n     * @param state The random state.\n     * @returns The storage associated with a particular state.\n     */\n    static getStateStorage(storage, state) {\n        return storage.prefix(`state(${state})`);\n    }\n    /**\n     * Open a window and wait for the redirect to be handled.\n     *\n     * @param url The URL to open.\n     * @param state The state which will be used to listen for storage updates.\n     * @returns The result passed through the redirect.\n     */\n    openWindowAndWaitForRedirect(url, state) {\n        const stateStorage = OAuth2Helper.getStateStorage(this.storage, state);\n        // Return a promise that resolves when the  gets known\n        return new Promise((resolve, reject) => {\n            let redirectWindow = null;\n            // We're declaring the interval now to enable referencing before its initialized\n            let windowClosedInterval; // eslint-disable-line prefer-const\n            const handleStorageUpdate = () => {\n                // Trying to get the secret from storage\n                const result = stateStorage.get(\"result\");\n                if (result) {\n                    const parsedResult = JSON.parse(result);\n                    // The secret got updated!\n                    stateStorage.removeListener(handleStorageUpdate);\n                    // Clear the storage to prevent others from reading this\n                    stateStorage.clear();\n                    // Try closing the newly created window\n                    try {\n                        if (redirectWindow) {\n                            // Stop checking if the window closed\n                            clearInterval(windowClosedInterval);\n                            redirectWindow.close();\n                        }\n                    }\n                    catch (err) {\n                        console.warn(`Failed closing redirect window: ${err}`);\n                    }\n                    finally {\n                        resolve(parsedResult);\n                    }\n                }\n            };\n            // Add a listener to the state storage, awaiting an update to the secret\n            stateStorage.addListener(handleStorageUpdate);\n            // Open up a window\n            redirectWindow = this.openWindow(url);\n            // Not using a const, because we need the two listeners to reference each other when removing the other.\n            windowClosedInterval = setInterval(() => {\n                // Polling \"closed\" because registering listeners on the window violates cross-origin policies\n                if (!redirectWindow) {\n                    // No need to keep polling for a window that we can't check\n                    clearInterval(windowClosedInterval);\n                }\n                else if (redirectWindow.closed) {\n                    // Stop polling the window state\n                    clearInterval(windowClosedInterval);\n                    // Stop listening for changes to the storage\n                    stateStorage.removeListener(handleStorageUpdate);\n                    // Reject the promise\n                    const err = new Error(\"Window closed\");\n                    reject(err);\n                }\n            }, CLOSE_CHECK_INTERVAL);\n        });\n    }\n    /**\n     * Generate a random state string.\n     *\n     * @returns The random state string.\n     */\n    generateState() {\n        return generateRandomString(12, LOWERCASE_LETTERS);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst REDIRECT_LOCATION_HEADER = \"x-baas-location\";\n/**\n * Handles authentication and linking of users.\n */\nclass Authenticator {\n    /**\n     * @param fetcher The fetcher used to fetch responses from the server.\n     * @param storage The storage used when completing OAuth 2.0 flows (should not be scoped to a specific app).\n     * @param getDeviceInformation Called to get device information to be sent to the server.\n     */\n    constructor(fetcher, storage, getDeviceInformation) {\n        this.fetcher = fetcher;\n        this.oauth2 = new OAuth2Helper(storage);\n        this.getDeviceInformation = getDeviceInformation;\n    }\n    /**\n     * @param credentials Credentials to use when logging in.\n     * @param linkingUser A user requesting to link.\n     * @returns A promise resolving to the response from the server.\n     */\n    async authenticate(credentials, linkingUser) {\n        const deviceInformation = this.getDeviceInformation();\n        const isLinking = typeof linkingUser === \"object\";\n        if (credentials.providerType.startsWith(\"oauth2\") && typeof credentials.payload.redirectUrl === \"string\") {\n            // Initiate the OAuth2 flow by generating a state and fetch a redirect URL\n            const state = this.oauth2.generateState();\n            const url = await this.getLogInUrl(credentials, isLinking, {\n                state,\n                redirect: credentials.payload.redirectUrl,\n                // Ensure redirects are communicated in a header different from \"Location\" and status remains 200 OK\n                providerRedirectHeader: isLinking ? true : undefined,\n                // Add the device information, only if we're not linking - since that request won't have a body of its own.\n                device: !isLinking ? deviceInformation.encode() : undefined,\n            });\n            // If we're linking, we need to send the users access token in the request\n            if (isLinking) {\n                const response = await this.fetcher.fetch({\n                    method: \"GET\",\n                    url,\n                    tokenType: isLinking ? \"access\" : \"none\",\n                    user: linkingUser,\n                    // The response will set a cookie that we need to tell the browser to store\n                    mode: \"cors\",\n                    credentials: \"include\",\n                });\n                // If a response header contains a redirect URL: Open a window and wait for the redirect to be handled\n                const redirectUrl = response.headers.get(REDIRECT_LOCATION_HEADER);\n                if (redirectUrl) {\n                    return this.openWindowAndWaitForAuthResponse(redirectUrl, state);\n                }\n                else {\n                    throw new Error(`Missing ${REDIRECT_LOCATION_HEADER} header`);\n                }\n            }\n            else {\n                // Otherwise we can open a window and let the server redirect the user right away\n                // This gives lower latency (as we don't need the client to receive and execute the redirect in code)\n                // This also has less dependency on cookies and doesn't sent any tokens.\n                return this.openWindowAndWaitForAuthResponse(url, state);\n            }\n        }\n        else {\n            const logInUrl = await this.getLogInUrl(credentials, isLinking);\n            const response = await this.fetcher.fetchJSON({\n                method: \"POST\",\n                url: logInUrl,\n                body: {\n                    ...credentials.payload,\n                    options: {\n                        device: deviceInformation.toJSON(),\n                    },\n                },\n                tokenType: isLinking ? \"access\" : \"none\",\n                user: linkingUser,\n            });\n            // Spread out values from the response and ensure they're valid\n            const { user_id: userId, access_token: accessToken, refresh_token: refreshToken = null, device_id: deviceId, } = response;\n            if (typeof userId !== \"string\") {\n                throw new Error(\"Expected a user id in the response\");\n            }\n            if (typeof accessToken !== \"string\") {\n                throw new Error(\"Expected an access token in the response\");\n            }\n            if (typeof refreshToken !== \"string\" && refreshToken !== null) {\n                throw new Error(\"Expected refresh token to be a string or null\");\n            }\n            if (typeof deviceId !== \"string\") {\n                throw new Error(\"Expected device id to be a string\");\n            }\n            return { userId, accessToken, refreshToken, deviceId };\n        }\n    }\n    /**\n     * @param credentials Credentials to use when logging in.\n     * @param link Should the request link with the current user?\n     * @param extraQueryParams Any extra parameters to include in the query string\n     * @returns A promise resolving to the url to be used when logging in.\n     */\n    async getLogInUrl(credentials, link = false, extraQueryParams = {}) {\n        // See https://github.com/mongodb/stitch-js-sdk/blob/310f0bd5af80f818cdfbc3caf1ae29ffa8e9c7cf/packages/core/sdk/src/auth/internal/CoreStitchAuth.ts#L746-L780\n        const appRoute = this.fetcher.appRoute;\n        const loginRoute = appRoute.authProvider(credentials.providerName).login();\n        const qs = encodeQueryString({\n            link: link ? \"true\" : undefined,\n            ...extraQueryParams,\n        });\n        const locationUrl = await this.fetcher.locationUrl;\n        return locationUrl + loginRoute.path + qs;\n    }\n    async openWindowAndWaitForAuthResponse(redirectUrl, state) {\n        const redirectResult = await this.oauth2.openWindowAndWaitForRedirect(redirectUrl, state);\n        // Decode the auth info (id, tokens, etc.) from the result of the redirect\n        return OAuth2Helper.decodeAuthInfo(redirectResult.userAuth);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n// TODO: Determine if the shape of an error response is specific to each service or widely used.\n/**\n * An error produced while communicating with the MongoDB Realm server.\n */\nclass MongoDBRealmError extends Error {\n    constructor(method, url, statusCode, statusText, error, errorCode, link) {\n        const summary = statusText ? `status ${statusCode} ${statusText}` : `status ${statusCode}`;\n        if (typeof error === \"string\") {\n            super(`Request failed (${method} ${url}): ${error} (${summary})`);\n        }\n        else {\n            super(`Request failed (${method} ${url}): (${summary})`);\n        }\n        this.method = method;\n        this.url = url;\n        this.statusText = statusText;\n        this.statusCode = statusCode;\n        this.error = error;\n        this.errorCode = errorCode;\n        this.link = link;\n    }\n    /**\n     * Constructs and returns an error from a request and a response.\n     * Note: The caller must throw this error themselves.\n     *\n     * @param request The request sent to the server.\n     * @param response A raw response, as returned from the server.\n     * @returns An error from a request and a response.\n     */\n    static async fromRequestAndResponse(request, response) {\n        var _a;\n        const { url, method } = request;\n        const { status, statusText } = response;\n        if ((_a = response.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.startsWith(\"application/json\")) {\n            const body = await response.json();\n            if (typeof body === \"object\" && body) {\n                const { error, error_code: errorCode, link } = body;\n                return new MongoDBRealmError(method, url, status, statusText, typeof error === \"string\" ? error : undefined, typeof errorCode === \"string\" ? errorCode : undefined, typeof link === \"string\" ? link : undefined);\n            }\n        }\n        return new MongoDBRealmError(method, url, status, statusText);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * @param body A possible resonse body.\n * @returns An async iterator.\n */\nfunction asyncIteratorFromResponseBody(body) {\n    if (typeof body !== \"object\" || body === null) {\n        throw new Error(\"Expected a non-null object\");\n    }\n    else if (Symbol.asyncIterator in body) {\n        return body;\n    }\n    else if (\"getReader\" in body) {\n        const stream = body;\n        return {\n            [Symbol.asyncIterator]() {\n                const reader = stream.getReader();\n                return {\n                    next() {\n                        return reader.read();\n                    },\n                    async return() {\n                        await reader.cancel();\n                        return { done: true, value: null };\n                    },\n                };\n            },\n        };\n    }\n    else {\n        throw new Error(\"Expected an AsyncIterable or a ReadableStream\");\n    }\n}\n/**\n * Wraps a NetworkTransport from the \"realm-network-transport\" package.\n * Extracts error messages and throws `MongoDBRealmError` objects upon failures.\n * Injects access or refresh tokens for a current or specific user.\n * Refreshes access tokens if requests fails due to a 401 error.\n * Optionally parses response as JSON before returning it.\n * Fetches and exposes an app's location url.\n */\nclass Fetcher {\n    /**\n     * @param config A configuration of the fetcher.\n     * @param config.appId The application id.\n     * @param config.transport The transport used when fetching.\n     * @param config.userContext An object used to determine the requesting user.\n     * @param config.locationUrlContext An object used to determine the location / base URL.\n     */\n    constructor({ appId, transport, userContext, locationUrlContext }) {\n        this.appId = appId;\n        this.transport = transport;\n        this.userContext = userContext;\n        this.locationUrlContext = locationUrlContext;\n    }\n    /**\n     * @param user An optional user to generate the header for.\n     * @param tokenType The type of token (access or refresh).\n     * @returns An object containing the user's token as \"Authorization\" header or undefined if no user is given.\n     */\n    static buildAuthorizationHeader(user, tokenType) {\n        if (!user || tokenType === \"none\") {\n            return {};\n        }\n        else if (tokenType === \"access\") {\n            return { Authorization: `Bearer ${user.accessToken}` };\n        }\n        else if (tokenType === \"refresh\") {\n            return { Authorization: `Bearer ${user.refreshToken}` };\n        }\n        else {\n            throw new Error(`Unexpected token type (${tokenType})`);\n        }\n    }\n    /**\n     * @param body The body string or object passed from a request.\n     * @returns An object optionally specifying the \"Content-Type\" header.\n     */\n    static buildBody(body) {\n        if (!body) {\n            return;\n        }\n        else if (typeof body === \"object\" && body !== null) {\n            return JSON.stringify(serialize(body));\n        }\n        else if (typeof body === \"string\") {\n            return body;\n        }\n        else {\n            console.log(\"body is\", body);\n            throw new Error(\"Unexpected type of body\");\n        }\n    }\n    /**\n     * @param body The body string or object passed from a request.\n     * @returns An object optionally specifying the \"Content-Type\" header.\n     */\n    static buildJsonHeader(body) {\n        if (body && body.length > 0) {\n            return { \"Content-Type\": \"application/json\" };\n        }\n        else {\n            return {};\n        }\n    }\n    clone(config) {\n        return new Fetcher({\n            appId: this.appId,\n            transport: this.transport,\n            userContext: this.userContext,\n            locationUrlContext: this.locationUrlContext,\n            ...config,\n        });\n    }\n    /**\n     * Fetch a network resource as an authenticated user.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns The response from the server.\n     */\n    async fetch(request) {\n        const { path, url, tokenType = \"access\", user = this.userContext.currentUser, ...restOfRequest } = request;\n        if (typeof path === \"string\" && typeof url === \"string\") {\n            throw new Error(\"Use of 'url' and 'path' mutually exclusive\");\n        }\n        else if (typeof path === \"string\") {\n            // Derive the URL\n            const url = (await this.locationUrlContext.locationUrl) + path;\n            return this.fetch({ ...request, path: undefined, url });\n        }\n        else if (typeof url === \"string\") {\n            const response = await this.transport.fetch({\n                ...restOfRequest,\n                url,\n                headers: {\n                    ...Fetcher.buildAuthorizationHeader(user, tokenType),\n                    ...request.headers,\n                },\n            });\n            if (response.ok) {\n                return response;\n            }\n            else if (user && response.status === 401 && tokenType === \"access\") {\n                // If the access token has expired, it would help refreshing it\n                await user.refreshAccessToken();\n                // Retry with the specific user, since the currentUser might have changed.\n                return this.fetch({ ...request, user });\n            }\n            else {\n                if (user && response.status === 401 && tokenType === \"refresh\") {\n                    // A 401 error while using the refresh token indicates the token has an issue.\n                    // Reset the tokens to prevent a lock.\n                    user.accessToken = null;\n                    user.refreshToken = null;\n                }\n                // Throw an error with a message extracted from the body\n                throw await MongoDBRealmError.fromRequestAndResponse(request, response);\n            }\n        }\n        else {\n            throw new Error(\"Expected either 'url' or 'path'\");\n        }\n    }\n    /**\n     * Fetch a network resource as an authenticated user and parse the result as extended JSON.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns The response from the server, parsed as extended JSON.\n     */\n    async fetchJSON(request) {\n        const { body } = request;\n        const serializedBody = Fetcher.buildBody(body);\n        const contentTypeHeaders = Fetcher.buildJsonHeader(serializedBody);\n        const response = await this.fetch({\n            ...request,\n            body: serializedBody,\n            headers: {\n                Accept: \"application/json\",\n                ...contentTypeHeaders,\n                ...request.headers,\n            },\n        });\n        const contentType = response.headers.get(\"content-type\");\n        if (contentType === null || contentType === void 0 ? void 0 : contentType.startsWith(\"application/json\")) {\n            const responseBody = await response.json();\n            return deserialize(responseBody);\n        }\n        else if (contentType === null) {\n            return null;\n        }\n        else {\n            throw new Error(`Expected JSON response, got \"${contentType}\"`);\n        }\n    }\n    /**\n     * Fetch an \"event-stream\" resource as an authenticated user.\n     *\n     * @param request The request which should be sent to the server.\n     * @returns An async iterator over the response body.\n     */\n    async fetchStream(request) {\n        const { body } = await this.fetch({\n            ...request,\n            headers: {\n                Accept: \"text/event-stream\",\n                ...request.headers,\n            },\n        });\n        return asyncIteratorFromResponseBody(body);\n    }\n    /**\n     * @returns The path of the app route.\n     */\n    get appRoute() {\n        return routes.api().app(this.appId);\n    }\n    /**\n     * @returns A promise of the location URL of the app.\n     */\n    get locationUrl() {\n        return this.locationUrlContext.locationUrl;\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * The key in a storage on which the device id is stored.\n */\nconst DEVICE_ID_STORAGE_KEY$1 = \"deviceId\";\nvar DeviceFields;\n(function (DeviceFields) {\n    DeviceFields[\"DEVICE_ID\"] = \"deviceId\";\n    DeviceFields[\"APP_ID\"] = \"appId\";\n    DeviceFields[\"APP_VERSION\"] = \"appVersion\";\n    DeviceFields[\"PLATFORM\"] = \"platform\";\n    DeviceFields[\"PLATFORM_VERSION\"] = \"platformVersion\";\n    DeviceFields[\"SDK_VERSION\"] = \"sdkVersion\";\n})(DeviceFields || (DeviceFields = {}));\n/**\n * Information describing the device, app and SDK.\n */\nclass DeviceInformation {\n    /**\n     * @param params Construct the device information from these parameters.\n     * @param params.appId A user-defined application id.\n     * @param params.appVersion A user-defined application version.\n     * @param params.deviceId An unique id for the end-users device.\n     */\n    constructor({ appId, appVersion, deviceId }) {\n        /**\n         * The version of the Realm Web SDK (constant provided by Rollup).\n         */\n        this.sdkVersion = \"1.7.0\";\n        const environment = getEnvironment();\n        this.platform = environment.platform;\n        this.platformVersion = environment.platformVersion;\n        this.appId = appId;\n        this.appVersion = appVersion;\n        this.deviceId = deviceId;\n    }\n    /**\n     * @returns An base64 URI encoded representation of the device information.\n     */\n    encode() {\n        const obj = removeKeysWithUndefinedValues(this);\n        return gBase64.encode(JSON.stringify(obj));\n    }\n    /**\n     * @returns The defaults\n     */\n    toJSON() {\n        return removeKeysWithUndefinedValues(this);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Default base url to prefix all requests if no baseUrl is specified in the configuration.\n */\nconst DEFAULT_BASE_URL = \"https://realm.mongodb.com\";\n/**\n * MongoDB Realm App\n */\nclass App {\n    /**\n     * Construct a Realm App, either from the Realm App id visible from the MongoDB Realm UI or a configuration.\n     *\n     * @param idOrConfiguration The Realm App id or a configuration to use for this app.\n     */\n    constructor(idOrConfiguration) {\n        /**\n         * An array of active and logged-out users.\n         * Elements in the beginning of the array is considered more recent than the later elements.\n         */\n        this.users = [];\n        /**\n         * A promise resolving to the App's location url.\n         */\n        this._locationUrl = null;\n        // If the argument is a string, convert it to a simple configuration object.\n        const configuration = typeof idOrConfiguration === \"string\" ? { id: idOrConfiguration } : idOrConfiguration;\n        // Initialize properties from the configuration\n        if (typeof configuration === \"object\" && typeof configuration.id === \"string\") {\n            this.id = configuration.id;\n        }\n        else {\n            throw new Error(\"Missing a MongoDB Realm app-id\");\n        }\n        this.baseUrl = configuration.baseUrl || DEFAULT_BASE_URL;\n        if (configuration.skipLocationRequest) {\n            // Use the base url directly, instead of requesting a location URL from the server\n            this._locationUrl = Promise.resolve(this.baseUrl);\n        }\n        this.localApp = configuration.app;\n        const { storage, transport = new DefaultNetworkTransport() } = configuration;\n        // Construct a fetcher wrapping the network transport\n        this.fetcher = new Fetcher({\n            appId: this.id,\n            userContext: this,\n            locationUrlContext: this,\n            transport,\n        });\n        // Construct the auth providers\n        this.emailPasswordAuth = new EmailPasswordAuth(this.fetcher);\n        // Construct the storage\n        const baseStorage = storage || getEnvironment().defaultStorage;\n        this.storage = new AppStorage(baseStorage, this.id);\n        this.authenticator = new Authenticator(this.fetcher, baseStorage, () => this.deviceInformation);\n        // Hydrate the app state from storage\n        try {\n            this.hydrate();\n        }\n        catch (err) {\n            // The storage was corrupted\n            this.storage.clear();\n            // A failed hydration shouldn't throw and break the app experience\n            // Since this is \"just\" persisted state that unfortunately got corrupted or partially lost\n            console.warn(\"Realm app hydration failed:\", err instanceof Error ? err.message : err);\n        }\n    }\n    /**\n     * Get or create a singleton Realm App from an id.\n     * Calling this function multiple times with the same id will return the same instance.\n     *\n     * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n     * @returns The Realm App instance.\n     */\n    static getApp(id) {\n        if (id in App.appCache) {\n            return App.appCache[id];\n        }\n        else {\n            const instance = new App(id);\n            App.appCache[id] = instance;\n            return instance;\n        }\n    }\n    /**\n     * Switch user.\n     *\n     * @param nextUser The user or id of the user to switch to.\n     */\n    switchUser(nextUser) {\n        const index = this.users.findIndex((u) => u === nextUser);\n        if (index === -1) {\n            throw new Error(\"The user was never logged into this app\");\n        }\n        // Remove the user from the stack\n        const [user] = this.users.splice(index, 1);\n        // Insert the user in the beginning of the stack\n        this.users.unshift(user);\n    }\n    /**\n     * Log in a user.\n     *\n     * @param credentials Credentials to use when logging in.\n     * @param fetchProfile Should the users profile be fetched? (default: true)\n     * @returns A promise resolving to the newly logged in user.\n     */\n    async logIn(credentials, fetchProfile = true) {\n        const response = await this.authenticator.authenticate(credentials);\n        const user = this.createOrUpdateUser(response, credentials.providerType);\n        // Let's ensure this will be the current user, in case the user object was reused.\n        this.switchUser(user);\n        // If needed, fetch and set the profile on the user\n        if (fetchProfile) {\n            await user.refreshProfile();\n        }\n        // Persist the user id in the storage,\n        // merging to avoid overriding logins from other apps using the same underlying storage\n        this.storage.setUserIds(this.users.map((u) => u.id), true);\n        // Read out and store the device id from the server\n        const deviceId = response.deviceId;\n        if (deviceId && deviceId !== \"000000000000000000000000\") {\n            this.storage.set(DEVICE_ID_STORAGE_KEY$1, deviceId);\n        }\n        // Return the user\n        return user;\n    }\n    /**\n     * @inheritdoc\n     */\n    async removeUser(user) {\n        // Remove the user from the list of users\n        const index = this.users.findIndex((u) => u === user);\n        if (index === -1) {\n            throw new Error(\"The user was never logged into this app\");\n        }\n        this.users.splice(index, 1);\n        // Log out the user - this removes access and refresh tokens from storage\n        await user.logOut();\n        // Remove the users profile from storage\n        this.storage.remove(`user(${user.id}):profile`);\n        // Remove the user from the storage\n        this.storage.removeUserId(user.id);\n    }\n    /**\n     * @inheritdoc\n     */\n    async deleteUser(user) {\n        await this.fetcher.fetchJSON({\n            method: \"DELETE\",\n            path: routes.api().auth().delete().path,\n        });\n        await this.removeUser(user);\n    }\n    /**\n     * The currently active user (or null if no active users exists).\n     *\n     * @returns the currently active user or null.\n     */\n    get currentUser() {\n        const activeUsers = this.users.filter((user) => user.state === UserState.Active);\n        if (activeUsers.length === 0) {\n            return null;\n        }\n        else {\n            // Current user is the top of the stack\n            return activeUsers[0];\n        }\n    }\n    /**\n     * All active and logged-out users:\n     *  - First in the list are active users (ordered by most recent call to switchUser or login)\n     *  - Followed by logged out users (also ordered by most recent call to switchUser or login).\n     *\n     * @returns An array of users active or logged out users (current user being the first).\n     */\n    get allUsers() {\n        // Returning a freezed copy of the list of users to prevent outside changes\n        return Object.fromEntries(this.users.map((user) => [user.id, user]));\n    }\n    /**\n     * @returns A promise of the app URL, with the app location resolved.\n     */\n    get locationUrl() {\n        if (!this._locationUrl) {\n            const path = routes.api().app(this.id).location().path;\n            this._locationUrl = this.fetcher\n                .fetchJSON({\n                method: \"GET\",\n                url: this.baseUrl + path,\n                tokenType: \"none\",\n            })\n                .then((body) => {\n                if (typeof body !== \"object\") {\n                    throw new Error(\"Expected response body be an object\");\n                }\n                else {\n                    return body;\n                }\n            })\n                .then(({ hostname }) => {\n                if (typeof hostname !== \"string\") {\n                    throw new Error(\"Expected response to contain a 'hostname'\");\n                }\n                else {\n                    return hostname;\n                }\n            })\n                .catch((err) => {\n                // Reset the location to allow another request to fetch again.\n                this._locationUrl = null;\n                throw err;\n            });\n        }\n        return this._locationUrl;\n    }\n    /**\n     * @returns Information about the current device, sent to the server when authenticating.\n     */\n    get deviceInformation() {\n        const deviceIdStr = this.storage.getDeviceId();\n        const deviceId = typeof deviceIdStr === \"string\" && deviceIdStr !== \"000000000000000000000000\"\n            ? new ObjectId(deviceIdStr)\n            : undefined;\n        return new DeviceInformation({\n            appId: this.localApp ? this.localApp.name : undefined,\n            appVersion: this.localApp ? this.localApp.version : undefined,\n            deviceId,\n        });\n    }\n    /**\n     * Create (and store) a new user or update an existing user's access and refresh tokens.\n     * This helps de-duplicating users in the list of users known to the app.\n     *\n     * @param response A response from the Authenticator.\n     * @param providerType The type of the authentication provider used.\n     * @returns A new or an existing user.\n     */\n    createOrUpdateUser(response, providerType) {\n        const existingUser = this.users.find((u) => u.id === response.userId);\n        if (existingUser) {\n            // Update the users access and refresh tokens\n            existingUser.accessToken = response.accessToken;\n            existingUser.refreshToken = response.refreshToken;\n            return existingUser;\n        }\n        else {\n            // Create and store a new user\n            if (!response.refreshToken) {\n                throw new Error(\"No refresh token in response from server\");\n            }\n            const user = new User({\n                app: this,\n                id: response.userId,\n                accessToken: response.accessToken,\n                refreshToken: response.refreshToken,\n                providerType,\n            });\n            this.users.unshift(user);\n            return user;\n        }\n    }\n    /**\n     * Restores the state of the app (active and logged-out users) from the storage\n     */\n    hydrate() {\n        const userIds = this.storage.getUserIds();\n        this.users = userIds.map((id) => new User({ app: this, id }));\n    }\n}\n/**\n * A map of app instances returned from calling getApp.\n */\nApp.appCache = {};\n/**\n * Instances of this class can be passed to the `app.logIn` method to authenticate an end-user.\n */\nApp.Credentials = Credentials;\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Get or create a singleton Realm App from an id.\n * Calling this function multiple times with the same id will return the same instance.\n *\n * @param id The Realm App id visible from the MongoDB Realm UI or a configuration.\n * @returns The Realm App instance.\n */\nfunction getApp(id) {\n    return App.getApp(id);\n}\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * In-memory storage that will not be persisted.\n */\nclass LocalStorage {\n    /**\n     * Constructs a LocalStorage using the global window.\n     */\n    constructor() {\n        if (typeof globalThis.localStorage === \"object\") {\n            this.global = globalThis;\n        }\n        else {\n            throw new Error(\"Cannot use LocalStorage without a global localStorage object\");\n        }\n    }\n    /** @inheritdoc */\n    get(key) {\n        return this.global.localStorage.getItem(key);\n    }\n    /** @inheritdoc */\n    set(key, value) {\n        return this.global.localStorage.setItem(key, value);\n    }\n    /** @inheritdoc */\n    remove(key) {\n        return this.global.localStorage.removeItem(key);\n    }\n    /** @inheritdoc */\n    prefix(keyPart) {\n        return new PrefixedStorage(this, keyPart);\n    }\n    /** @inheritdoc */\n    clear(prefix) {\n        const keys = [];\n        // Iterate all keys to find the once have a matching prefix.\n        for (let i = 0; i < this.global.localStorage.length; i++) {\n            const key = this.global.localStorage.key(i);\n            if (key && (!prefix || key.startsWith(prefix))) {\n                keys.push(key);\n            }\n        }\n        // Remove the items in a seperate loop to avoid updating while iterating.\n        for (const key of keys) {\n            this.global.localStorage.removeItem(key);\n        }\n    }\n    /** @inheritdoc */\n    addListener(listener) {\n        return this.global.addEventListener(\"storage\", listener);\n    }\n    /** @inheritdoc */\n    removeListener(listener) {\n        return this.global.removeEventListener(\"storage\", listener);\n    }\n}\n\n////////////////////////////////////////////////////////////////////////////\nconst browser = detect();\nconst DefaultStorage = \"localStorage\" in globalThis ? LocalStorage : MemoryStorage;\n/**\n * Attempt to use the browser to open a window\n *\n * @param url The url to open a window to.\n * @returns Then newly create window.\n */\nfunction openWindow(url) {\n    if (typeof globalThis.open === \"function\") {\n        return globalThis.open(url);\n    }\n    else {\n        console.log(`Please open ${url}`);\n        return null;\n    }\n}\nconst environment$1 = {\n    defaultStorage: new DefaultStorage().prefix(\"realm-web\"),\n    openWindow,\n    platform: (browser === null || browser === void 0 ? void 0 : browser.name) || \"web\",\n    platformVersion: (browser === null || browser === void 0 ? void 0 : browser.version) || \"0.0.0\",\n    TextDecoder,\n};\nsetEnvironment(environment$1);\n/**\n * Handle an OAuth 2.0 redirect.\n *\n * @param location An optional location to use (defaults to the windows current location).\n * @param storage Optional storage used to save any results from the location.\n */\nfunction handleAuthRedirect(location = globalThis.location, storage = environment$1.defaultStorage) {\n    try {\n        const queryString = location.hash.substr(1); // Strip the initial # from the hash\n        OAuth2Helper.handleRedirect(queryString, storage);\n    }\n    catch (err) {\n        // Ensure calling this never throws: It should not interrupt a users flow.\n        console.warn(err);\n    }\n}\n\nexport { App, Credentials, DEFAULT_BASE_URL, LocalStorage, MongoDBRealmError, User, UserState, UserType$1 as UserType, getApp, getEnvironment, handleAuthRedirect, setEnvironment };\n"]},"metadata":{},"sourceType":"module"}