{"ast":null,"code":"import axios from \"axios\";\nimport { loadStripe } from '@stripe/stripe-js';\nexport const getProducts = () => {\n  console.log('getProducts');\n  return new Promise((onSuccess, onFail) => {\n    axios.get('/api/products').then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure ${error}`);\n      }\n\n      onSuccess(response);\n    });\n  });\n};\nexport const getUser = email => {\n  console.log('get user');\n  return new Promise((onSuccess, onFail) => {\n    axios.post('/api/auth/login', email).then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure ${error}`);\n      }\n\n      onSuccess(response.data);\n    }).catch(err => onFail(err));\n  });\n};\nexport const addUser = body => {\n  return new Promise((onSuccess, onFail) => {\n    axios.post('/api/users/add', body).then((response, error) => {\n      if (error) {\n        return onFail(`error adding new post : ${error}`);\n      }\n\n      onSuccess(`new user successfully created ${response}`);\n    }).catch(err => onFail(err));\n  });\n};\nexport const addOrder = body => {\n  return new Promise((onSuccess, onFail) => {\n    axios.post('/api/orders/add', body).then((response, error) => {\n      if (error) {\n        return onFail(`error adding new post : ${error}`);\n      }\n\n      onSuccess(`new order successfully created ${response}`);\n    }).catch(err => onFail(err));\n  });\n};\nexport const processPayment = async order => {\n  const stripePromise = loadStripe('pk_test_Y5ScLHaUyFGQYd13cNJeEMFx');\n  const stripe = await stripePromise;\n  axios.post('/api/create-checkout-session', order).then(response => {\n    const result = stripe.redirectToCheckout({\n      sessionId: response.data.id\n    });\n\n    if (result.error) {\n      console.log(result.error);\n    }\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/Administrateur/Documents/03-DEV/Cours/Udemy/Marketplace/client/src/lib/service/index.js"],"names":["axios","loadStripe","getProducts","console","log","Promise","onSuccess","onFail","get","then","response","error","getUser","email","post","data","catch","err","addUser","body","addOrder","processPayment","order","stripePromise","stripe","result","redirectToCheckout","sessionId","id"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport { loadStripe } from '@stripe/stripe-js'; \n\nexport const getProducts = () => {\n    console.log('getProducts')\n    return new Promise((onSuccess, onFail) => {\n        axios\n            .get('/api/products')\n            .then((response, error) => {\n                if (!response || error) { return onFail(`Response failure ${error}`) }\n                onSuccess(response)\n        })\n    })\n}\nexport const getUser = (email) => {\n    console.log('get user')\n    return new Promise((onSuccess, onFail) => {\n        axios.post('/api/auth/login', email)\n            .then((response, error) => {\n                if (!response || error) { return onFail(`Response failure ${error}`) }\n                onSuccess(response.data)\n            }).catch(err => onFail(err))\n    })\n}\nexport const addUser = body => {\n    return new Promise((onSuccess, onFail) => { \n        axios.post('/api/users/add', body)\n            .then((response, error) => {\n                if (error) { return onFail(`error adding new post : ${error}`)}\n                onSuccess(`new user successfully created ${response}`)\n            }).catch(err => onFail(err))\n    })\n}   \nexport const addOrder = body => {\n    return new Promise((onSuccess, onFail) => { \n        axios.post('/api/orders/add', body)\n            .then((response, error) => {\n                if (error) { return onFail(`error adding new post : ${error}`)}\n                onSuccess(`new order successfully created ${response}`)\n            }).catch(err => onFail(err))\n    })  \n}\nexport const processPayment = async (order) => {\n    const stripePromise = loadStripe('pk_test_Y5ScLHaUyFGQYd13cNJeEMFx');\n    const stripe = await stripePromise\n    axios\n        .post('/api/create-checkout-session', order)\n        .then(response => { \n            const result = stripe.redirectToCheckout({ sessionId: response.data.id });\n            if (result.error) { console.log(result.error) }\n        })\n        .catch(err => console.log(err))\n}\n"]},"metadata":{},"sourceType":"module"}